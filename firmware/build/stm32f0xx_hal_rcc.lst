ARM GAS  /tmp/ccRZXZI7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_RCC_DeInit
  22              		.code	16
  23              		.thumb_func
  25              	HAL_RCC_DeInit:
  26              	.LFB40:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is disabled, 
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
ARM GAS  /tmp/ccRZXZI7.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccRZXZI7.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccRZXZI7.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
ARM GAS  /tmp/ccRZXZI7.s 			page 5


 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  28              		.loc 1 211 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get Start Tick*/
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  39              		.loc 1 215 0
  40 0002 FFF7FEFF 		bl	HAL_GetTick
  41              	.LVL0:
  42 0006 0400     		movs	r4, r0
  43              	.LVL1:
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  44              		.loc 1 218 0
  45 0008 294A     		ldr	r2, .L13
  46 000a 1168     		ldr	r1, [r2]
  47 000c 8123     		movs	r3, #129
  48 000e 0B43     		orrs	r3, r1
  49 0010 1360     		str	r3, [r2]
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till HSI is ready */
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  50              		.loc 1 221 0
  51 0012 04E0     		b	.L2
  52              	.LVL2:
  53              	.L4:
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  54              		.loc 1 223 0
  55 0014 FFF7FEFF 		bl	HAL_GetTick
  56              	.LVL3:
  57 0018 001B     		subs	r0, r0, r4
  58 001a 0228     		cmp	r0, #2
  59 001c 3FD8     		bhi	.L9
  60              	.L2:
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
  61              		.loc 1 221 0
  62 001e 244B     		ldr	r3, .L13
ARM GAS  /tmp/ccRZXZI7.s 			page 6


  63 0020 1B68     		ldr	r3, [r3]
  64 0022 9B07     		lsls	r3, r3, #30
  65 0024 F6D5     		bpl	.L4
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  66              		.loc 1 230 0
  67 0026 224A     		ldr	r2, .L13
  68 0028 5168     		ldr	r1, [r2, #4]
  69 002a 224B     		ldr	r3, .L13+4
  70 002c 0B40     		ands	r3, r1
  71 002e 5360     		str	r3, [r2, #4]
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till HSI as SYSCLK status is enabled */
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
  72              		.loc 1 233 0
  73 0030 05E0     		b	.L5
  74              	.L6:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  75              		.loc 1 235 0
  76 0032 FFF7FEFF 		bl	HAL_GetTick
  77              	.LVL4:
  78 0036 001B     		subs	r0, r0, r4
  79 0038 1F4B     		ldr	r3, .L13+8
  80 003a 9842     		cmp	r0, r3
  81 003c 31D8     		bhi	.L10
  82              	.L5:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
  83              		.loc 1 233 0
  84 003e 1C4B     		ldr	r3, .L13
  85 0040 5B68     		ldr	r3, [r3, #4]
  86 0042 0C22     		movs	r2, #12
  87 0044 1A42     		tst	r2, r3
  88 0046 F4D1     		bne	.L6
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  89              		.loc 1 242 0
  90 0048 1C4A     		ldr	r2, .L13+12
  91 004a 1D4B     		ldr	r3, .L13+16
  92 004c 1A60     		str	r2, [r3]
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
  93              		.loc 1 245 0
  94 004e 1D4B     		ldr	r3, .L13+20
  95 0050 1868     		ldr	r0, [r3]
  96 0052 FFF7FEFF 		bl	HAL_InitTick
ARM GAS  /tmp/ccRZXZI7.s 			page 7


  97              	.LVL5:
  98 0056 041E     		subs	r4, r0, #0
  99              	.LVL6:
 100 0058 25D1     		bne	.L11
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 101              		.loc 1 251 0
 102 005a 154B     		ldr	r3, .L13
 103 005c 1968     		ldr	r1, [r3]
 104 005e 1A4A     		ldr	r2, .L13+24
 105 0060 0A40     		ands	r2, r1
 106 0062 1A60     		str	r2, [r3]
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 107              		.loc 1 254 0
 108 0064 1968     		ldr	r1, [r3]
 109 0066 194A     		ldr	r2, .L13+28
 110 0068 0A40     		ands	r2, r1
 111 006a 1A60     		str	r2, [r3]
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get start tick */
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 112              		.loc 1 257 0
 113 006c FFF7FEFF 		bl	HAL_GetTick
 114              	.LVL7:
 115 0070 0500     		movs	r5, r0
 116              	.LVL8:
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till PLLRDY is cleared */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 117              		.loc 1 260 0
 118 0072 04E0     		b	.L7
 119              	.LVL9:
 120              	.L8:
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 121              		.loc 1 262 0
 122 0074 FFF7FEFF 		bl	HAL_GetTick
 123              	.LVL10:
 124 0078 401B     		subs	r0, r0, r5
 125 007a 0228     		cmp	r0, #2
 126 007c 15D8     		bhi	.L12
 127              	.L7:
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 128              		.loc 1 260 0
 129 007e 0C4B     		ldr	r3, .L13
 130 0080 1B68     		ldr	r3, [r3]
 131 0082 9B01     		lsls	r3, r3, #6
 132 0084 F6D4     		bmi	.L8
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccRZXZI7.s 			page 8


 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 133              		.loc 1 269 0
 134 0086 0A4B     		ldr	r3, .L13
 135 0088 0022     		movs	r2, #0
 136 008a 5A60     		str	r2, [r3, #4]
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 137              		.loc 1 272 0
 138 008c DA62     		str	r2, [r3, #44]
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 139              		.loc 1 275 0
 140 008e 1A63     		str	r2, [r3, #48]
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 141              		.loc 1 278 0
 142 0090 9A60     		str	r2, [r3, #8]
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Clear all reset flags */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 143              		.loc 1 281 0
 144 0092 5A6A     		ldr	r2, [r3, #36]
 145 0094 8021     		movs	r1, #128
 146 0096 4904     		lsls	r1, r1, #17
 147 0098 0A43     		orrs	r2, r1
 148 009a 5A62     		str	r2, [r3, #36]
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 149              		.loc 1 283 0
 150 009c 06E0     		b	.L3
 151              	.LVL11:
 152              	.L9:
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 153              		.loc 1 225 0
 154 009e 0324     		movs	r4, #3
 155              	.LVL12:
 156 00a0 04E0     		b	.L3
 157              	.LVL13:
 158              	.L10:
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 159              		.loc 1 237 0
 160 00a2 0324     		movs	r4, #3
 161              	.LVL14:
 162 00a4 02E0     		b	.L3
 163              	.L11:
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 164              		.loc 1 247 0
 165 00a6 0124     		movs	r4, #1
 166 00a8 00E0     		b	.L3
 167              	.LVL15:
 168              	.L12:
ARM GAS  /tmp/ccRZXZI7.s 			page 9


 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 169              		.loc 1 264 0
 170 00aa 0324     		movs	r4, #3
 171              	.LVL16:
 172              	.L3:
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 173              		.loc 1 284 0
 174 00ac 2000     		movs	r0, r4
 175              		@ sp needed
 176 00ae 70BD     		pop	{r4, r5, r6, pc}
 177              	.L14:
 178              		.align	2
 179              	.L13:
 180 00b0 00100240 		.word	1073876992
 181 00b4 0CF8FFF0 		.word	-251660276
 182 00b8 88130000 		.word	5000
 183 00bc 00127A00 		.word	8000000
 184 00c0 00000000 		.word	SystemCoreClock
 185 00c4 00000000 		.word	uwTickPrio
 186 00c8 FFFFF6FE 		.word	-17367041
 187 00cc FFFFFBFF 		.word	-262145
 188              		.cfi_endproc
 189              	.LFE40:
 191              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 192              		.align	2
 193              		.global	HAL_RCC_OscConfig
 194              		.code	16
 195              		.thumb_func
 197              	HAL_RCC_OscConfig:
 198              	.LFB41:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 199              		.loc 1 301 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              	.LVL17:
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI1:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
ARM GAS  /tmp/ccRZXZI7.s 			page 10


 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 82B0     		sub	sp, sp, #8
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 24
 214 0004 041E     		subs	r4, r0, #0
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t pll_config;
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t pll_config2;
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check Null pointer */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 215              		.loc 1 307 0
 216 0006 00D1     		bne	.LCB182
 217 0008 2BE2     		b	.L74	@long jump
 218              	.LCB182:
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 219              		.loc 1 316 0
 220 000a 0368     		ldr	r3, [r0]
 221 000c DB07     		lsls	r3, r3, #31
 222 000e 63D5     		bpl	.L17
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 223              		.loc 1 322 0
 224 0010 C44B     		ldr	r3, .L97
 225 0012 5B68     		ldr	r3, [r3, #4]
 226 0014 0C22     		movs	r2, #12
 227 0016 1340     		ands	r3, r2
 228 0018 042B     		cmp	r3, #4
 229 001a 08D0     		beq	.L18
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 230              		.loc 1 323 0
 231 001c C14B     		ldr	r3, .L97
 232 001e 5B68     		ldr	r3, [r3, #4]
 233 0020 1340     		ands	r3, r2
 234 0022 082B     		cmp	r3, #8
 235 0024 0BD1     		bne	.L19
 236              		.loc 1 323 0 is_stmt 0 discriminator 1
 237 0026 BF4B     		ldr	r3, .L97
 238 0028 5B68     		ldr	r3, [r3, #4]
 239 002a DB03     		lsls	r3, r3, #15
 240 002c 07D5     		bpl	.L19
 241              	.L18:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
ARM GAS  /tmp/ccRZXZI7.s 			page 11


 242              		.loc 1 325 0 is_stmt 1
 243 002e BD4B     		ldr	r3, .L97
 244 0030 1B68     		ldr	r3, [r3]
 245 0032 9B03     		lsls	r3, r3, #14
 246 0034 50D5     		bpl	.L17
 247              		.loc 1 325 0 is_stmt 0 discriminator 1
 248 0036 6368     		ldr	r3, [r4, #4]
 249 0038 002B     		cmp	r3, #0
 250 003a 4DD1     		bne	.L17
 251 003c 13E2     		b	.L75
 252              	.L19:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 253              		.loc 1 333 0 is_stmt 1
 254 003e 6368     		ldr	r3, [r4, #4]
 255 0040 012B     		cmp	r3, #1
 256 0042 06D1     		bne	.L20
 257              		.loc 1 333 0 is_stmt 0 discriminator 1
 258 0044 B74A     		ldr	r2, .L97
 259 0046 1368     		ldr	r3, [r2]
 260 0048 8021     		movs	r1, #128
 261 004a 4902     		lsls	r1, r1, #9
 262 004c 0B43     		orrs	r3, r1
 263 004e 1360     		str	r3, [r2]
 264 0050 22E0     		b	.L21
 265              	.L20:
 266              		.loc 1 333 0 discriminator 2
 267 0052 002B     		cmp	r3, #0
 268 0054 09D1     		bne	.L22
 269              		.loc 1 333 0 discriminator 3
 270 0056 B34B     		ldr	r3, .L97
 271 0058 1968     		ldr	r1, [r3]
 272 005a B34A     		ldr	r2, .L97+4
 273 005c 0A40     		ands	r2, r1
 274 005e 1A60     		str	r2, [r3]
 275 0060 1968     		ldr	r1, [r3]
 276 0062 B24A     		ldr	r2, .L97+8
 277 0064 0A40     		ands	r2, r1
 278 0066 1A60     		str	r2, [r3]
 279 0068 16E0     		b	.L21
 280              	.L22:
 281              		.loc 1 333 0 discriminator 4
 282 006a 052B     		cmp	r3, #5
 283 006c 0BD1     		bne	.L23
 284              		.loc 1 333 0 discriminator 5
 285 006e AD4B     		ldr	r3, .L97
 286 0070 1A68     		ldr	r2, [r3]
 287 0072 8021     		movs	r1, #128
 288 0074 C902     		lsls	r1, r1, #11
 289 0076 0A43     		orrs	r2, r1
 290 0078 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccRZXZI7.s 			page 12


 291 007a 1A68     		ldr	r2, [r3]
 292 007c 8021     		movs	r1, #128
 293 007e 4902     		lsls	r1, r1, #9
 294 0080 0A43     		orrs	r2, r1
 295 0082 1A60     		str	r2, [r3]
 296 0084 08E0     		b	.L21
 297              	.L23:
 298              		.loc 1 333 0 discriminator 6
 299 0086 A74B     		ldr	r3, .L97
 300 0088 1968     		ldr	r1, [r3]
 301 008a A74A     		ldr	r2, .L97+4
 302 008c 0A40     		ands	r2, r1
 303 008e 1A60     		str	r2, [r3]
 304 0090 1968     		ldr	r1, [r3]
 305 0092 A64A     		ldr	r2, .L97+8
 306 0094 0A40     		ands	r2, r1
 307 0096 1A60     		str	r2, [r3]
 308              	.L21:
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 309              		.loc 1 337 0 is_stmt 1
 310 0098 6368     		ldr	r3, [r4, #4]
 311 009a 002B     		cmp	r3, #0
 312 009c 0ED0     		beq	.L24
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 313              		.loc 1 340 0
 314 009e FFF7FEFF 		bl	HAL_GetTick
 315              	.LVL18:
 316 00a2 0500     		movs	r5, r0
 317              	.LVL19:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 318              		.loc 1 343 0
 319 00a4 05E0     		b	.L25
 320              	.LVL20:
 321              	.L26:
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 322              		.loc 1 345 0
 323 00a6 FFF7FEFF 		bl	HAL_GetTick
 324              	.LVL21:
 325 00aa 401B     		subs	r0, r0, r5
 326 00ac 6428     		cmp	r0, #100
 327 00ae 00D9     		bls	.LCB296
 328 00b0 DBE1     		b	.L76	@long jump
 329              	.LCB296:
 330              	.L25:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 331              		.loc 1 343 0
 332 00b2 9C4B     		ldr	r3, .L97
 333 00b4 1B68     		ldr	r3, [r3]
 334 00b6 9B03     		lsls	r3, r3, #14
ARM GAS  /tmp/ccRZXZI7.s 			page 13


 335 00b8 F5D5     		bpl	.L26
 336 00ba 0DE0     		b	.L17
 337              	.LVL22:
 338              	.L24:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 339              		.loc 1 354 0
 340 00bc FFF7FEFF 		bl	HAL_GetTick
 341              	.LVL23:
 342 00c0 0500     		movs	r5, r0
 343              	.LVL24:
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 344              		.loc 1 357 0
 345 00c2 05E0     		b	.L27
 346              	.LVL25:
 347              	.L28:
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 348              		.loc 1 359 0
 349 00c4 FFF7FEFF 		bl	HAL_GetTick
 350              	.LVL26:
 351 00c8 401B     		subs	r0, r0, r5
 352 00ca 6428     		cmp	r0, #100
 353 00cc 00D9     		bls	.LCB325
 354 00ce CEE1     		b	.L77	@long jump
 355              	.LCB325:
 356              	.L27:
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 357              		.loc 1 357 0
 358 00d0 944B     		ldr	r3, .L97
 359 00d2 1B68     		ldr	r3, [r3]
 360 00d4 9B03     		lsls	r3, r3, #14
 361 00d6 F5D4     		bmi	.L28
 362              	.LVL27:
 363              	.L17:
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 364              		.loc 1 368 0
 365 00d8 2368     		ldr	r3, [r4]
 366 00da 9B07     		lsls	r3, r3, #30
 367 00dc 50D5     		bpl	.L29
ARM GAS  /tmp/ccRZXZI7.s 			page 14


 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 368              		.loc 1 375 0
 369 00de 914B     		ldr	r3, .L97
 370 00e0 5B68     		ldr	r3, [r3, #4]
 371 00e2 0C22     		movs	r2, #12
 372 00e4 1A42     		tst	r2, r3
 373 00e6 08D0     		beq	.L30
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 374              		.loc 1 376 0
 375 00e8 8E4B     		ldr	r3, .L97
 376 00ea 5B68     		ldr	r3, [r3, #4]
 377 00ec 1340     		ands	r3, r2
 378 00ee 082B     		cmp	r3, #8
 379 00f0 14D1     		bne	.L31
 380              		.loc 1 376 0 is_stmt 0 discriminator 1
 381 00f2 8C4B     		ldr	r3, .L97
 382 00f4 5B68     		ldr	r3, [r3, #4]
 383 00f6 DB03     		lsls	r3, r3, #15
 384 00f8 10D4     		bmi	.L31
 385              	.L30:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 386              		.loc 1 379 0 is_stmt 1
 387 00fa 8A4B     		ldr	r3, .L97
 388 00fc 1B68     		ldr	r3, [r3]
 389 00fe 9B07     		lsls	r3, r3, #30
 390 0100 03D5     		bpl	.L32
 391              		.loc 1 379 0 is_stmt 0 discriminator 1
 392 0102 E368     		ldr	r3, [r4, #12]
 393 0104 012B     		cmp	r3, #1
 394 0106 00D0     		beq	.LCB370
 395 0108 B3E1     		b	.L78	@long jump
 396              	.LCB370:
 397              	.L32:
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 398              		.loc 1 387 0 is_stmt 1
 399 010a 8649     		ldr	r1, .L97
 400 010c 0B68     		ldr	r3, [r1]
 401 010e F822     		movs	r2, #248
 402 0110 9343     		bics	r3, r2
 403 0112 2269     		ldr	r2, [r4, #16]
 404 0114 D200     		lsls	r2, r2, #3
 405 0116 1343     		orrs	r3, r2
ARM GAS  /tmp/ccRZXZI7.s 			page 15


 406 0118 0B60     		str	r3, [r1]
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 407              		.loc 1 379 0
 408 011a 31E0     		b	.L29
 409              	.L31:
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 410              		.loc 1 393 0
 411 011c E368     		ldr	r3, [r4, #12]
 412 011e 002B     		cmp	r3, #0
 413 0120 1BD0     		beq	.L33
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 414              		.loc 1 396 0
 415 0122 804A     		ldr	r2, .L97
 416 0124 1168     		ldr	r1, [r2]
 417 0126 0123     		movs	r3, #1
 418 0128 0B43     		orrs	r3, r1
 419 012a 1360     		str	r3, [r2]
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 420              		.loc 1 399 0
 421 012c FFF7FEFF 		bl	HAL_GetTick
 422              	.LVL28:
 423 0130 0500     		movs	r5, r0
 424              	.LVL29:
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 425              		.loc 1 402 0
 426 0132 05E0     		b	.L34
 427              	.LVL30:
 428              	.L35:
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 429              		.loc 1 404 0
 430 0134 FFF7FEFF 		bl	HAL_GetTick
 431              	.LVL31:
 432 0138 401B     		subs	r0, r0, r5
 433 013a 0228     		cmp	r0, #2
 434 013c 00D9     		bls	.LCB409
 435 013e 9AE1     		b	.L79	@long jump
 436              	.LCB409:
 437              	.L34:
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 438              		.loc 1 402 0
 439 0140 784B     		ldr	r3, .L97
 440 0142 1B68     		ldr	r3, [r3]
 441 0144 9B07     		lsls	r3, r3, #30
 442 0146 F5D5     		bpl	.L35
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
ARM GAS  /tmp/ccRZXZI7.s 			page 16


 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 443              		.loc 1 411 0
 444 0148 7649     		ldr	r1, .L97
 445 014a 0B68     		ldr	r3, [r1]
 446 014c F822     		movs	r2, #248
 447 014e 9343     		bics	r3, r2
 448 0150 2269     		ldr	r2, [r4, #16]
 449 0152 D200     		lsls	r2, r2, #3
 450 0154 1343     		orrs	r3, r2
 451 0156 0B60     		str	r3, [r1]
 452 0158 12E0     		b	.L29
 453              	.LVL32:
 454              	.L33:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 455              		.loc 1 416 0
 456 015a 724A     		ldr	r2, .L97
 457 015c 1368     		ldr	r3, [r2]
 458 015e 0121     		movs	r1, #1
 459 0160 8B43     		bics	r3, r1
 460 0162 1360     		str	r3, [r2]
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 461              		.loc 1 419 0
 462 0164 FFF7FEFF 		bl	HAL_GetTick
 463              	.LVL33:
 464 0168 0500     		movs	r5, r0
 465              	.LVL34:
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 466              		.loc 1 422 0
 467 016a 05E0     		b	.L36
 468              	.LVL35:
 469              	.L37:
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 470              		.loc 1 424 0
 471 016c FFF7FEFF 		bl	HAL_GetTick
 472              	.LVL36:
 473 0170 401B     		subs	r0, r0, r5
 474 0172 0228     		cmp	r0, #2
 475 0174 00D9     		bls	.LCB451
 476 0176 80E1     		b	.L80	@long jump
 477              	.LCB451:
 478              	.L36:
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 479              		.loc 1 422 0
ARM GAS  /tmp/ccRZXZI7.s 			page 17


 480 0178 6A4B     		ldr	r3, .L97
 481 017a 1B68     		ldr	r3, [r3]
 482 017c 9B07     		lsls	r3, r3, #30
 483 017e F5D4     		bmi	.L37
 484              	.LVL37:
 485              	.L29:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 486              		.loc 1 433 0
 487 0180 2368     		ldr	r3, [r4]
 488 0182 1B07     		lsls	r3, r3, #28
 489 0184 29D5     		bpl	.L38
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 490              		.loc 1 439 0
 491 0186 E369     		ldr	r3, [r4, #28]
 492 0188 002B     		cmp	r3, #0
 493 018a 13D0     		beq	.L39
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 494              		.loc 1 442 0
 495 018c 654A     		ldr	r2, .L97
 496 018e 516A     		ldr	r1, [r2, #36]
 497 0190 0123     		movs	r3, #1
 498 0192 0B43     		orrs	r3, r1
 499 0194 5362     		str	r3, [r2, #36]
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 500              		.loc 1 445 0
 501 0196 FFF7FEFF 		bl	HAL_GetTick
 502              	.LVL38:
 503 019a 0500     		movs	r5, r0
 504              	.LVL39:
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 505              		.loc 1 448 0
 506 019c 05E0     		b	.L40
 507              	.LVL40:
 508              	.L41:
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 509              		.loc 1 450 0
 510 019e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccRZXZI7.s 			page 18


 511              	.LVL41:
 512 01a2 401B     		subs	r0, r0, r5
 513 01a4 0228     		cmp	r0, #2
 514 01a6 00D9     		bls	.LCB491
 515 01a8 69E1     		b	.L81	@long jump
 516              	.LCB491:
 517              	.L40:
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 518              		.loc 1 448 0
 519 01aa 5E4B     		ldr	r3, .L97
 520 01ac 5B6A     		ldr	r3, [r3, #36]
 521 01ae 9B07     		lsls	r3, r3, #30
 522 01b0 F5D5     		bpl	.L41
 523 01b2 12E0     		b	.L38
 524              	.LVL42:
 525              	.L39:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 526              		.loc 1 459 0
 527 01b4 5B4A     		ldr	r2, .L97
 528 01b6 536A     		ldr	r3, [r2, #36]
 529 01b8 0121     		movs	r1, #1
 530 01ba 8B43     		bics	r3, r1
 531 01bc 5362     		str	r3, [r2, #36]
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 532              		.loc 1 462 0
 533 01be FFF7FEFF 		bl	HAL_GetTick
 534              	.LVL43:
 535 01c2 0500     		movs	r5, r0
 536              	.LVL44:
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 537              		.loc 1 465 0
 538 01c4 05E0     		b	.L42
 539              	.LVL45:
 540              	.L43:
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 541              		.loc 1 467 0
 542 01c6 FFF7FEFF 		bl	HAL_GetTick
 543              	.LVL46:
 544 01ca 401B     		subs	r0, r0, r5
 545 01cc 0228     		cmp	r0, #2
 546 01ce 00D9     		bls	.LCB523
 547 01d0 57E1     		b	.L82	@long jump
 548              	.LCB523:
 549              	.L42:
ARM GAS  /tmp/ccRZXZI7.s 			page 19


 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 550              		.loc 1 465 0
 551 01d2 544B     		ldr	r3, .L97
 552 01d4 5B6A     		ldr	r3, [r3, #36]
 553 01d6 9B07     		lsls	r3, r3, #30
 554 01d8 F5D4     		bmi	.L43
 555              	.LVL47:
 556              	.L38:
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 557              		.loc 1 475 0
 558 01da 2368     		ldr	r3, [r4]
 559 01dc 5B07     		lsls	r3, r3, #29
 560 01de 7AD5     		bpl	.L44
 561              	.LVL48:
 562              	.LBB2:
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 563              		.loc 1 484 0
 564 01e0 504B     		ldr	r3, .L97
 565 01e2 DB69     		ldr	r3, [r3, #28]
 566 01e4 DB00     		lsls	r3, r3, #3
 567 01e6 0BD4     		bmi	.L83
 568              	.LBB3:
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 569              		.loc 1 486 0
 570 01e8 4E4A     		ldr	r2, .L97
 571 01ea D169     		ldr	r1, [r2, #28]
 572 01ec 8023     		movs	r3, #128
 573 01ee 5B05     		lsls	r3, r3, #21
 574 01f0 1943     		orrs	r1, r3
 575 01f2 D161     		str	r1, [r2, #28]
 576 01f4 D269     		ldr	r2, [r2, #28]
 577 01f6 1340     		ands	r3, r2
 578 01f8 0193     		str	r3, [sp, #4]
 579 01fa 019B     		ldr	r3, [sp, #4]
 580              	.LVL49:
 581              	.LBE3:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 582              		.loc 1 487 0
 583 01fc 0125     		movs	r5, #1
 584 01fe 00E0     		b	.L45
 585              	.LVL50:
ARM GAS  /tmp/ccRZXZI7.s 			page 20


 586              	.L83:
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 587              		.loc 1 477 0
 588 0200 0025     		movs	r5, #0
 589              	.LVL51:
 590              	.L45:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 591              		.loc 1 490 0
 592 0202 4B4B     		ldr	r3, .L97+12
 593 0204 1B68     		ldr	r3, [r3]
 594 0206 DB05     		lsls	r3, r3, #23
 595 0208 13D4     		bmi	.L46
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 596              		.loc 1 493 0
 597 020a 494A     		ldr	r2, .L97+12
 598 020c 1368     		ldr	r3, [r2]
 599 020e 8021     		movs	r1, #128
 600 0210 4900     		lsls	r1, r1, #1
 601 0212 0B43     		orrs	r3, r1
 602 0214 1360     		str	r3, [r2]
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 603              		.loc 1 496 0
 604 0216 FFF7FEFF 		bl	HAL_GetTick
 605              	.LVL52:
 606 021a 0600     		movs	r6, r0
 607              	.LVL53:
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 608              		.loc 1 498 0
 609 021c 05E0     		b	.L47
 610              	.LVL54:
 611              	.L48:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 612              		.loc 1 500 0
 613 021e FFF7FEFF 		bl	HAL_GetTick
 614              	.LVL55:
 615 0222 801B     		subs	r0, r0, r6
 616 0224 6428     		cmp	r0, #100
 617 0226 00D9     		bls	.LCB597
 618 0228 2DE1     		b	.L84	@long jump
 619              	.LCB597:
 620              	.L47:
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 621              		.loc 1 498 0
 622 022a 414B     		ldr	r3, .L97+12
 623 022c 1B68     		ldr	r3, [r3]
 624 022e DB05     		lsls	r3, r3, #23
 625 0230 F5D5     		bpl	.L48
 626              	.LVL56:
 627              	.L46:
ARM GAS  /tmp/ccRZXZI7.s 			page 21


 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 628              		.loc 1 508 0
 629 0232 A368     		ldr	r3, [r4, #8]
 630 0234 012B     		cmp	r3, #1
 631 0236 04D1     		bne	.L49
 632              		.loc 1 508 0 is_stmt 0 discriminator 1
 633 0238 3A4A     		ldr	r2, .L97
 634 023a 116A     		ldr	r1, [r2, #32]
 635 023c 0B43     		orrs	r3, r1
 636 023e 1362     		str	r3, [r2, #32]
 637 0240 20E0     		b	.L50
 638              	.L49:
 639              		.loc 1 508 0 discriminator 2
 640 0242 002B     		cmp	r3, #0
 641 0244 09D1     		bne	.L51
 642              		.loc 1 508 0 discriminator 3
 643 0246 374B     		ldr	r3, .L97
 644 0248 1A6A     		ldr	r2, [r3, #32]
 645 024a 0121     		movs	r1, #1
 646 024c 8A43     		bics	r2, r1
 647 024e 1A62     		str	r2, [r3, #32]
 648 0250 1A6A     		ldr	r2, [r3, #32]
 649 0252 0331     		adds	r1, r1, #3
 650 0254 8A43     		bics	r2, r1
 651 0256 1A62     		str	r2, [r3, #32]
 652 0258 14E0     		b	.L50
 653              	.L51:
 654              		.loc 1 508 0 discriminator 4
 655 025a 052B     		cmp	r3, #5
 656 025c 09D1     		bne	.L52
 657              		.loc 1 508 0 discriminator 5
 658 025e 314B     		ldr	r3, .L97
 659 0260 196A     		ldr	r1, [r3, #32]
 660 0262 0422     		movs	r2, #4
 661 0264 0A43     		orrs	r2, r1
 662 0266 1A62     		str	r2, [r3, #32]
 663 0268 196A     		ldr	r1, [r3, #32]
 664 026a 0122     		movs	r2, #1
 665 026c 0A43     		orrs	r2, r1
 666 026e 1A62     		str	r2, [r3, #32]
 667 0270 08E0     		b	.L50
 668              	.L52:
 669              		.loc 1 508 0 discriminator 6
 670 0272 2C4B     		ldr	r3, .L97
 671 0274 1A6A     		ldr	r2, [r3, #32]
 672 0276 0121     		movs	r1, #1
 673 0278 8A43     		bics	r2, r1
 674 027a 1A62     		str	r2, [r3, #32]
 675 027c 1A6A     		ldr	r2, [r3, #32]
 676 027e 0331     		adds	r1, r1, #3
ARM GAS  /tmp/ccRZXZI7.s 			page 22


 677 0280 8A43     		bics	r2, r1
 678 0282 1A62     		str	r2, [r3, #32]
 679              	.L50:
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 680              		.loc 1 510 0 is_stmt 1
 681 0284 A368     		ldr	r3, [r4, #8]
 682 0286 002B     		cmp	r3, #0
 683 0288 0FD0     		beq	.L53
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 684              		.loc 1 513 0
 685 028a FFF7FEFF 		bl	HAL_GetTick
 686              	.LVL57:
 687 028e 0600     		movs	r6, r0
 688              	.LVL58:
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 689              		.loc 1 516 0
 690 0290 06E0     		b	.L54
 691              	.LVL59:
 692              	.L55:
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 693              		.loc 1 518 0
 694 0292 FFF7FEFF 		bl	HAL_GetTick
 695              	.LVL60:
 696 0296 801B     		subs	r0, r0, r6
 697 0298 264B     		ldr	r3, .L97+16
 698 029a 9842     		cmp	r0, r3
 699 029c 00D9     		bls	.LCB678
 700 029e F4E0     		b	.L85	@long jump
 701              	.LCB678:
 702              	.L54:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 703              		.loc 1 516 0
 704 02a0 204B     		ldr	r3, .L97
 705 02a2 1B6A     		ldr	r3, [r3, #32]
 706 02a4 9B07     		lsls	r3, r3, #30
 707 02a6 F4D5     		bpl	.L55
 708 02a8 0EE0     		b	.L56
 709              	.LVL61:
 710              	.L53:
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 711              		.loc 1 527 0
 712 02aa FFF7FEFF 		bl	HAL_GetTick
 713              	.LVL62:
ARM GAS  /tmp/ccRZXZI7.s 			page 23


 714 02ae 0600     		movs	r6, r0
 715              	.LVL63:
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 716              		.loc 1 530 0
 717 02b0 06E0     		b	.L57
 718              	.LVL64:
 719              	.L58:
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 720              		.loc 1 532 0
 721 02b2 FFF7FEFF 		bl	HAL_GetTick
 722              	.LVL65:
 723 02b6 801B     		subs	r0, r0, r6
 724 02b8 1E4B     		ldr	r3, .L97+16
 725 02ba 9842     		cmp	r0, r3
 726 02bc 00D9     		bls	.LCB706
 727 02be E6E0     		b	.L86	@long jump
 728              	.LCB706:
 729              	.L57:
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 730              		.loc 1 530 0
 731 02c0 184B     		ldr	r3, .L97
 732 02c2 1B6A     		ldr	r3, [r3, #32]
 733 02c4 9B07     		lsls	r3, r3, #30
 734 02c6 F4D4     		bmi	.L58
 735              	.L56:
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 736              		.loc 1 540 0
 737 02c8 012D     		cmp	r5, #1
 738 02ca 04D1     		bne	.L44
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 739              		.loc 1 542 0
 740 02cc 154A     		ldr	r2, .L97
 741 02ce D169     		ldr	r1, [r2, #28]
 742 02d0 194B     		ldr	r3, .L97+20
 743 02d2 0B40     		ands	r3, r1
 744 02d4 D361     		str	r3, [r2, #28]
 745              	.LVL66:
 746              	.L44:
 747              	.LBE2:
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 748              		.loc 1 547 0
 749 02d6 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccRZXZI7.s 			page 24


 750 02d8 DB06     		lsls	r3, r3, #27
 751 02da 55D5     		bpl	.L59
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 752              		.loc 1 554 0
 753 02dc 6369     		ldr	r3, [r4, #20]
 754 02de 012B     		cmp	r3, #1
 755 02e0 2CD1     		bne	.L60
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 756              		.loc 1 557 0
 757 02e2 104B     		ldr	r3, .L97
 758 02e4 596B     		ldr	r1, [r3, #52]
 759 02e6 0422     		movs	r2, #4
 760 02e8 0A43     		orrs	r2, r1
 761 02ea 5A63     		str	r2, [r3, #52]
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 762              		.loc 1 560 0
 763 02ec 596B     		ldr	r1, [r3, #52]
 764 02ee 0122     		movs	r2, #1
 765 02f0 0A43     		orrs	r2, r1
 766 02f2 5A63     		str	r2, [r3, #52]
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 767              		.loc 1 563 0
 768 02f4 FFF7FEFF 		bl	HAL_GetTick
 769              	.LVL67:
 770 02f8 0500     		movs	r5, r0
 771              	.LVL68:
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 772              		.loc 1 566 0
 773 02fa 05E0     		b	.L61
 774              	.LVL69:
 775              	.L62:
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 776              		.loc 1 568 0
 777 02fc FFF7FEFF 		bl	HAL_GetTick
 778              	.LVL70:
 779 0300 401B     		subs	r0, r0, r5
 780 0302 0228     		cmp	r0, #2
 781 0304 00D9     		bls	.LCB761
 782 0306 C4E0     		b	.L87	@long jump
 783              	.LCB761:
 784              	.L61:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccRZXZI7.s 			page 25


 785              		.loc 1 566 0
 786 0308 064B     		ldr	r3, .L97
 787 030a 5B6B     		ldr	r3, [r3, #52]
 788 030c 9B07     		lsls	r3, r3, #30
 789 030e F5D5     		bpl	.L62
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 790              		.loc 1 575 0
 791 0310 0449     		ldr	r1, .L97
 792 0312 4B6B     		ldr	r3, [r1, #52]
 793 0314 F822     		movs	r2, #248
 794 0316 9343     		bics	r3, r2
 795 0318 1A00     		movs	r2, r3
 796 031a A369     		ldr	r3, [r4, #24]
 797 031c DB00     		lsls	r3, r3, #3
 798 031e 1343     		orrs	r3, r2
 799 0320 4B63     		str	r3, [r1, #52]
 800 0322 31E0     		b	.L59
 801              	.L98:
 802              		.align	2
 803              	.L97:
 804 0324 00100240 		.word	1073876992
 805 0328 FFFFFEFF 		.word	-65537
 806 032c FFFFFBFF 		.word	-262145
 807 0330 00700040 		.word	1073770496
 808 0334 88130000 		.word	5000
 809 0338 FFFFFFEF 		.word	-268435457
 810              	.LVL71:
 811              	.L60:
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 812              		.loc 1 577 0
 813 033c 0533     		adds	r3, r3, #5
 814 033e 0CD1     		bne	.L63
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 815              		.loc 1 580 0
 816 0340 5E49     		ldr	r1, .L99
 817 0342 4B6B     		ldr	r3, [r1, #52]
 818 0344 0422     		movs	r2, #4
 819 0346 9343     		bics	r3, r2
 820 0348 4B63     		str	r3, [r1, #52]
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 821              		.loc 1 583 0
 822 034a 4B6B     		ldr	r3, [r1, #52]
 823 034c F432     		adds	r2, r2, #244
 824 034e 9343     		bics	r3, r2
 825 0350 A269     		ldr	r2, [r4, #24]
 826 0352 D200     		lsls	r2, r2, #3
ARM GAS  /tmp/ccRZXZI7.s 			page 26


 827 0354 1343     		orrs	r3, r2
 828 0356 4B63     		str	r3, [r1, #52]
 829 0358 16E0     		b	.L59
 830              	.L63:
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 831              		.loc 1 588 0
 832 035a 584B     		ldr	r3, .L99
 833 035c 596B     		ldr	r1, [r3, #52]
 834 035e 0422     		movs	r2, #4
 835 0360 0A43     		orrs	r2, r1
 836 0362 5A63     		str	r2, [r3, #52]
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 837              		.loc 1 591 0
 838 0364 5A6B     		ldr	r2, [r3, #52]
 839 0366 0121     		movs	r1, #1
 840 0368 8A43     		bics	r2, r1
 841 036a 5A63     		str	r2, [r3, #52]
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 842              		.loc 1 594 0
 843 036c FFF7FEFF 		bl	HAL_GetTick
 844              	.LVL72:
 845 0370 0500     		movs	r5, r0
 846              	.LVL73:
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 847              		.loc 1 597 0
 848 0372 05E0     		b	.L64
 849              	.LVL74:
 850              	.L65:
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 851              		.loc 1 599 0
 852 0374 FFF7FEFF 		bl	HAL_GetTick
 853              	.LVL75:
 854 0378 401B     		subs	r0, r0, r5
 855 037a 0228     		cmp	r0, #2
 856 037c 00D9     		bls	.LCB839
 857 037e 8AE0     		b	.L88	@long jump
 858              	.LCB839:
 859              	.L64:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 860              		.loc 1 597 0
 861 0380 4E4B     		ldr	r3, .L99
 862 0382 5B6B     		ldr	r3, [r3, #52]
 863 0384 9B07     		lsls	r3, r3, #30
 864 0386 F5D4     		bmi	.L65
 865              	.LVL76:
 866              	.L59:
ARM GAS  /tmp/ccRZXZI7.s 			page 27


 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
ARM GAS  /tmp/ccRZXZI7.s 			page 28


 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 867              		.loc 1 667 0
 868 0388 236A     		ldr	r3, [r4, #32]
 869 038a 002B     		cmp	r3, #0
 870 038c 00D1     		bne	.LCB852
 871 038e 84E0     		b	.L89	@long jump
 872              	.LCB852:
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 873              		.loc 1 670 0
 874 0390 4A4A     		ldr	r2, .L99
 875 0392 5268     		ldr	r2, [r2, #4]
 876 0394 0C21     		movs	r1, #12
 877 0396 0A40     		ands	r2, r1
 878 0398 082A     		cmp	r2, #8
 879 039a 4AD0     		beq	.L66
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 880              		.loc 1 672 0
 881 039c 022B     		cmp	r3, #2
 882 039e 34D1     		bne	.L67
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 883              		.loc 1 680 0
 884 03a0 464A     		ldr	r2, .L99
 885 03a2 1168     		ldr	r1, [r2]
 886 03a4 464B     		ldr	r3, .L99+4
 887 03a6 0B40     		ands	r3, r1
 888 03a8 1360     		str	r3, [r2]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 889              		.loc 1 683 0
 890 03aa FFF7FEFF 		bl	HAL_GetTick
 891              	.LVL77:
 892 03ae 0500     		movs	r5, r0
 893              	.LVL78:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
ARM GAS  /tmp/ccRZXZI7.s 			page 29


 894              		.loc 1 686 0
 895 03b0 04E0     		b	.L68
 896              	.LVL79:
 897              	.L69:
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 898              		.loc 1 688 0
 899 03b2 FFF7FEFF 		bl	HAL_GetTick
 900              	.LVL80:
 901 03b6 401B     		subs	r0, r0, r5
 902 03b8 0228     		cmp	r0, #2
 903 03ba 70D8     		bhi	.L90
 904              	.L68:
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 905              		.loc 1 686 0
 906 03bc 3F4B     		ldr	r3, .L99
 907 03be 1B68     		ldr	r3, [r3]
 908 03c0 9B01     		lsls	r3, r3, #6
 909 03c2 F6D4     		bmi	.L69
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 910              		.loc 1 695 0
 911 03c4 3D4B     		ldr	r3, .L99
 912 03c6 DA6A     		ldr	r2, [r3, #44]
 913 03c8 0F21     		movs	r1, #15
 914 03ca 8A43     		bics	r2, r1
 915 03cc E16A     		ldr	r1, [r4, #44]
 916 03ce 0A43     		orrs	r2, r1
 917 03d0 DA62     		str	r2, [r3, #44]
 918 03d2 5868     		ldr	r0, [r3, #4]
 919 03d4 3B4A     		ldr	r2, .L99+8
 920 03d6 1040     		ands	r0, r2
 921 03d8 A26A     		ldr	r2, [r4, #40]
 922 03da 616A     		ldr	r1, [r4, #36]
 923 03dc 0A43     		orrs	r2, r1
 924 03de 0243     		orrs	r2, r0
 925 03e0 5A60     		str	r2, [r3, #4]
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 926              		.loc 1 699 0
 927 03e2 1A68     		ldr	r2, [r3]
 928 03e4 8021     		movs	r1, #128
 929 03e6 4904     		lsls	r1, r1, #17
 930 03e8 0A43     		orrs	r2, r1
 931 03ea 1A60     		str	r2, [r3]
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 932              		.loc 1 702 0
 933 03ec FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccRZXZI7.s 			page 30


 934              	.LVL81:
 935 03f0 0400     		movs	r4, r0
 936              	.LVL82:
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 937              		.loc 1 705 0
 938 03f2 04E0     		b	.L70
 939              	.LVL83:
 940              	.L71:
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 941              		.loc 1 707 0
 942 03f4 FFF7FEFF 		bl	HAL_GetTick
 943              	.LVL84:
 944 03f8 001B     		subs	r0, r0, r4
 945 03fa 0228     		cmp	r0, #2
 946 03fc 51D8     		bhi	.L91
 947              	.L70:
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 948              		.loc 1 705 0
 949 03fe 2F4B     		ldr	r3, .L99
 950 0400 1B68     		ldr	r3, [r3]
 951 0402 9B01     		lsls	r3, r3, #6
 952 0404 F6D5     		bpl	.L71
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccRZXZI7.s 			page 31


 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config  = RCC->CFGR;
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_ERROR;
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 953              		.loc 1 753 0
 954 0406 0020     		movs	r0, #0
 955 0408 56E0     		b	.L16
 956              	.LVL85:
 957              	.L67:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 958              		.loc 1 716 0
 959 040a 2C4A     		ldr	r2, .L99
 960 040c 1168     		ldr	r1, [r2]
 961 040e 2C4B     		ldr	r3, .L99+4
 962 0410 0B40     		ands	r3, r1
 963 0412 1360     		str	r3, [r2]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 964              		.loc 1 719 0
 965 0414 FFF7FEFF 		bl	HAL_GetTick
 966              	.LVL86:
 967 0418 0400     		movs	r4, r0
 968              	.LVL87:
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 969              		.loc 1 722 0
 970 041a 04E0     		b	.L72
 971              	.LVL88:
 972              	.L73:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 973              		.loc 1 724 0
 974 041c FFF7FEFF 		bl	HAL_GetTick
 975              	.LVL89:
 976 0420 001B     		subs	r0, r0, r4
 977 0422 0228     		cmp	r0, #2
 978 0424 3FD8     		bhi	.L92
 979              	.L72:
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 980              		.loc 1 722 0
 981 0426 254B     		ldr	r3, .L99
 982 0428 1B68     		ldr	r3, [r3]
 983 042a 9B01     		lsls	r3, r3, #6
 984 042c F6D4     		bmi	.L73
 985              		.loc 1 753 0
 986 042e 0020     		movs	r0, #0
 987 0430 42E0     		b	.L16
 988              	.LVL90:
 989              	.L66:
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccRZXZI7.s 			page 32


 990              		.loc 1 734 0
 991 0432 012B     		cmp	r3, #1
 992 0434 39D0     		beq	.L93
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 993              		.loc 1 741 0
 994 0436 214B     		ldr	r3, .L99
 995 0438 5A68     		ldr	r2, [r3, #4]
 996              	.LVL91:
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 997              		.loc 1 742 0
 998 043a D96A     		ldr	r1, [r3, #44]
 999              	.LVL92:
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 1000              		.loc 1 743 0
 1001 043c 8023     		movs	r3, #128
 1002 043e 5B02     		lsls	r3, r3, #9
 1003 0440 1340     		ands	r3, r2
 1004 0442 606A     		ldr	r0, [r4, #36]
 1005 0444 8342     		cmp	r3, r0
 1006 0446 32D1     		bne	.L94
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 1007              		.loc 1 744 0 discriminator 1
 1008 0448 0F23     		movs	r3, #15
 1009 044a 1940     		ands	r1, r3
 1010              	.LVL93:
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 1011              		.loc 1 743 0 discriminator 1
 1012 044c E36A     		ldr	r3, [r4, #44]
 1013 044e 9942     		cmp	r1, r3
 1014 0450 2FD1     		bne	.L95
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1015              		.loc 1 745 0
 1016 0452 F023     		movs	r3, #240
 1017 0454 9B03     		lsls	r3, r3, #14
 1018 0456 1A40     		ands	r2, r3
 1019              	.LVL94:
 1020 0458 A36A     		ldr	r3, [r4, #40]
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 1021              		.loc 1 744 0
 1022 045a 9A42     		cmp	r2, r3
 1023 045c 2BD0     		beq	.L96
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1024              		.loc 1 747 0
 1025 045e 0120     		movs	r0, #1
 1026 0460 2AE0     		b	.L16
 1027              	.LVL95:
 1028              	.L74:
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1029              		.loc 1 309 0
 1030 0462 0120     		movs	r0, #1
 1031              	.LVL96:
 1032 0464 28E0     		b	.L16
 1033              	.LVL97:
 1034              	.L75:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1035              		.loc 1 327 0
 1036 0466 0120     		movs	r0, #1
ARM GAS  /tmp/ccRZXZI7.s 			page 33


 1037              	.LVL98:
 1038 0468 26E0     		b	.L16
 1039              	.LVL99:
 1040              	.L76:
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1041              		.loc 1 347 0
 1042 046a 0320     		movs	r0, #3
 1043 046c 24E0     		b	.L16
 1044              	.L77:
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1045              		.loc 1 361 0
 1046 046e 0320     		movs	r0, #3
 1047 0470 22E0     		b	.L16
 1048              	.LVL100:
 1049              	.L78:
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1050              		.loc 1 381 0
 1051 0472 0120     		movs	r0, #1
 1052 0474 20E0     		b	.L16
 1053              	.LVL101:
 1054              	.L79:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1055              		.loc 1 406 0
 1056 0476 0320     		movs	r0, #3
 1057 0478 1EE0     		b	.L16
 1058              	.L80:
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1059              		.loc 1 426 0
 1060 047a 0320     		movs	r0, #3
 1061 047c 1CE0     		b	.L16
 1062              	.L81:
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1063              		.loc 1 452 0
 1064 047e 0320     		movs	r0, #3
 1065 0480 1AE0     		b	.L16
 1066              	.L82:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1067              		.loc 1 469 0
 1068 0482 0320     		movs	r0, #3
 1069 0484 18E0     		b	.L16
 1070              	.LVL102:
 1071              	.L84:
 1072              	.LBB4:
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1073              		.loc 1 502 0
 1074 0486 0320     		movs	r0, #3
 1075 0488 16E0     		b	.L16
 1076              	.L85:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1077              		.loc 1 520 0
 1078 048a 0320     		movs	r0, #3
 1079 048c 14E0     		b	.L16
 1080              	.L86:
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1081              		.loc 1 534 0
 1082 048e 0320     		movs	r0, #3
 1083 0490 12E0     		b	.L16
ARM GAS  /tmp/ccRZXZI7.s 			page 34


 1084              	.LVL103:
 1085              	.L87:
 1086              	.LBE4:
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 1087              		.loc 1 570 0
 1088 0492 0320     		movs	r0, #3
 1089 0494 10E0     		b	.L16
 1090              	.L88:
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1091              		.loc 1 601 0
 1092 0496 0320     		movs	r0, #3
 1093 0498 0EE0     		b	.L16
 1094              	.LVL104:
 1095              	.L89:
 1096              		.loc 1 753 0
 1097 049a 0020     		movs	r0, #0
 1098 049c 0CE0     		b	.L16
 1099              	.LVL105:
 1100              	.L90:
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1101              		.loc 1 690 0
 1102 049e 0320     		movs	r0, #3
 1103 04a0 0AE0     		b	.L16
 1104              	.LVL106:
 1105              	.L91:
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1106              		.loc 1 709 0
 1107 04a2 0320     		movs	r0, #3
 1108 04a4 08E0     		b	.L16
 1109              	.L92:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 1110              		.loc 1 726 0
 1111 04a6 0320     		movs	r0, #3
 1112 04a8 06E0     		b	.L16
 1113              	.LVL107:
 1114              	.L93:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1115              		.loc 1 736 0
 1116 04aa 0120     		movs	r0, #1
 1117 04ac 04E0     		b	.L16
 1118              	.LVL108:
 1119              	.L94:
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1120              		.loc 1 747 0
 1121 04ae 0120     		movs	r0, #1
 1122 04b0 02E0     		b	.L16
 1123              	.LVL109:
 1124              	.L95:
 1125 04b2 0120     		movs	r0, #1
 1126 04b4 00E0     		b	.L16
 1127              	.LVL110:
 1128              	.L96:
 1129              		.loc 1 753 0
 1130 04b6 0020     		movs	r0, #0
 1131              	.LVL111:
 1132              	.L16:
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
ARM GAS  /tmp/ccRZXZI7.s 			page 35


 1133              		.loc 1 754 0
 1134 04b8 02B0     		add	sp, sp, #8
 1135              		@ sp needed
 1136 04ba 70BD     		pop	{r4, r5, r6, pc}
 1137              	.L100:
 1138              		.align	2
 1139              	.L99:
 1140 04bc 00100240 		.word	1073876992
 1141 04c0 FFFFFFFE 		.word	-16777217
 1142 04c4 FFFFC2FF 		.word	-3997697
 1143              		.cfi_endproc
 1144              	.LFE41:
 1146              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1147              		.align	2
 1148              		.global	HAL_RCC_MCOConfig
 1149              		.code	16
 1150              		.thumb_func
 1152              	HAL_RCC_MCOConfig:
 1153              	.LFB43:
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check Null pointer */
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccRZXZI7.s 			page 36


 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the highest APB divider in order to ensure that we do not go through
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
ARM GAS  /tmp/ccRZXZI7.s 			page 37


 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_TIMEOUT;
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccRZXZI7.s 			page 38


 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
ARM GAS  /tmp/ccRZXZI7.s 			page 39


 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1154              		.loc 1 1019 0
ARM GAS  /tmp/ccRZXZI7.s 			page 40


 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 24
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158              	.LVL112:
 1159 0000 70B5     		push	{r4, r5, r6, lr}
 1160              	.LCFI3:
 1161              		.cfi_def_cfa_offset 16
 1162              		.cfi_offset 4, -16
 1163              		.cfi_offset 5, -12
 1164              		.cfi_offset 6, -8
 1165              		.cfi_offset 14, -4
 1166 0002 86B0     		sub	sp, sp, #24
 1167              	.LCFI4:
 1168              		.cfi_def_cfa_offset 40
 1169 0004 0E00     		movs	r6, r1
 1170 0006 1500     		movs	r5, r2
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1171              		.loc 1 1028 0
 1172 0008 0223     		movs	r3, #2
 1173 000a 0293     		str	r3, [sp, #8]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1174              		.loc 1 1029 0
 1175 000c 0133     		adds	r3, r3, #1
 1176 000e 0493     		str	r3, [sp, #16]
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1177              		.loc 1 1030 0
 1178 0010 0023     		movs	r3, #0
 1179 0012 0393     		str	r3, [sp, #12]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1180              		.loc 1 1031 0
 1181 0014 8022     		movs	r2, #128
 1182              	.LVL113:
 1183 0016 5200     		lsls	r2, r2, #1
 1184 0018 0192     		str	r2, [sp, #4]
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1185              		.loc 1 1032 0
 1186 001a 0593     		str	r3, [sp, #20]
 1187              	.LBB5:
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1188              		.loc 1 1035 0
 1189 001c 0B4C     		ldr	r4, .L102
 1190 001e 6269     		ldr	r2, [r4, #20]
 1191 0020 8023     		movs	r3, #128
 1192 0022 9B02     		lsls	r3, r3, #10
 1193 0024 1A43     		orrs	r2, r3
 1194 0026 6261     		str	r2, [r4, #20]
 1195 0028 6269     		ldr	r2, [r4, #20]
ARM GAS  /tmp/ccRZXZI7.s 			page 41


 1196 002a 1340     		ands	r3, r2
 1197 002c 0093     		str	r3, [sp]
 1198 002e 009B     		ldr	r3, [sp]
 1199              	.LBE5:
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1200              		.loc 1 1037 0
 1201 0030 01A9     		add	r1, sp, #4
 1202              	.LVL114:
 1203 0032 9020     		movs	r0, #144
 1204              	.LVL115:
 1205 0034 C005     		lsls	r0, r0, #23
 1206 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1207              	.LVL116:
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1208              		.loc 1 1040 0
 1209 003a 6268     		ldr	r2, [r4, #4]
 1210 003c 044B     		ldr	r3, .L102+4
 1211 003e 1340     		ands	r3, r2
 1212 0040 3543     		orrs	r5, r6
 1213              	.LVL117:
 1214 0042 1D43     		orrs	r5, r3
 1215 0044 6560     		str	r5, [r4, #4]
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1216              		.loc 1 1041 0
 1217 0046 06B0     		add	sp, sp, #24
 1218              		@ sp needed
 1219              	.LVL118:
 1220 0048 70BD     		pop	{r4, r5, r6, pc}
 1221              	.L103:
 1222 004a C046     		.align	2
 1223              	.L102:
 1224 004c 00100240 		.word	1073876992
 1225 0050 FFFFFF80 		.word	-2130706433
 1226              		.cfi_endproc
 1227              	.LFE43:
 1229              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1230              		.align	2
 1231              		.global	HAL_RCC_EnableCSS
 1232              		.code	16
 1233              		.thumb_func
 1235              	HAL_RCC_EnableCSS:
 1236              	.LFB44:
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
ARM GAS  /tmp/ccRZXZI7.s 			page 42


 1237              		.loc 1 1053 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1242              		.loc 1 1054 0
 1243 0000 034A     		ldr	r2, .L105
 1244 0002 1368     		ldr	r3, [r2]
 1245 0004 8021     		movs	r1, #128
 1246 0006 0903     		lsls	r1, r1, #12
 1247 0008 0B43     		orrs	r3, r1
 1248 000a 1360     		str	r3, [r2]
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1249              		.loc 1 1055 0
 1250              		@ sp needed
 1251 000c 7047     		bx	lr
 1252              	.L106:
 1253 000e C046     		.align	2
 1254              	.L105:
 1255 0010 00100240 		.word	1073876992
 1256              		.cfi_endproc
 1257              	.LFE44:
 1259              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1260              		.align	2
 1261              		.global	HAL_RCC_DisableCSS
 1262              		.code	16
 1263              		.thumb_func
 1265              	HAL_RCC_DisableCSS:
 1266              	.LFB45:
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1267              		.loc 1 1062 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1272              		.loc 1 1063 0
 1273 0000 024A     		ldr	r2, .L108
 1274 0002 1168     		ldr	r1, [r2]
 1275 0004 024B     		ldr	r3, .L108+4
 1276 0006 0B40     		ands	r3, r1
 1277 0008 1360     		str	r3, [r2]
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1278              		.loc 1 1064 0
 1279              		@ sp needed
 1280 000a 7047     		bx	lr
 1281              	.L109:
 1282              		.align	2
 1283              	.L108:
 1284 000c 00100240 		.word	1073876992
ARM GAS  /tmp/ccRZXZI7.s 			page 43


 1285 0010 FFFFF7FF 		.word	-524289
 1286              		.cfi_endproc
 1287              	.LFE45:
 1289              		.global	__aeabi_uidiv
 1290              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1291              		.align	2
 1292              		.global	HAL_RCC_GetSysClockFreq
 1293              		.code	16
 1294              		.thumb_func
 1296              	HAL_RCC_GetSysClockFreq:
 1297              	.LFB46:
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1298              		.loc 1 1098 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 32
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302 0000 10B5     		push	{r4, lr}
 1303              	.LCFI5:
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 4, -8
 1306              		.cfi_offset 14, -4
 1307 0002 88B0     		sub	sp, sp, #32
 1308              	.LCFI6:
 1309              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccRZXZI7.s 			page 44


1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1310              		.loc 1 1099 0
 1311 0004 144C     		ldr	r4, .L116
 1312 0006 1022     		movs	r2, #16
 1313 0008 2100     		movs	r1, r4
 1314 000a 04A8     		add	r0, sp, #16
 1315 000c FFF7FEFF 		bl	memcpy
 1316              	.LVL119:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 1317              		.loc 1 1101 0
 1318 0010 2100     		movs	r1, r4
 1319 0012 1031     		adds	r1, r1, #16
 1320 0014 1022     		movs	r2, #16
 1321 0016 6846     		mov	r0, sp
 1322 0018 FFF7FEFF 		bl	memcpy
 1323              	.LVL120:
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1324              		.loc 1 1107 0
 1325 001c 0F4B     		ldr	r3, .L116+4
 1326 001e 5A68     		ldr	r2, [r3, #4]
 1327              	.LVL121:
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1328              		.loc 1 1110 0
 1329 0020 0C23     		movs	r3, #12
 1330 0022 1340     		ands	r3, r2
 1331 0024 082B     		cmp	r3, #8
 1332 0026 13D1     		bne	.L115
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
 1333              		.loc 1 1119 0
 1334 0028 910C     		lsrs	r1, r2, #18
 1335 002a 0F20     		movs	r0, #15
 1336 002c 0140     		ands	r1, r0
 1337 002e 04AB     		add	r3, sp, #16
 1338 0030 5C5C     		ldrb	r4, [r3, r1]
 1339              	.LVL122:
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1340              		.loc 1 1120 0
 1341 0032 0A4B     		ldr	r3, .L116+4
 1342 0034 DB6A     		ldr	r3, [r3, #44]
 1343 0036 0340     		ands	r3, r0
 1344 0038 6946     		mov	r1, sp
ARM GAS  /tmp/ccRZXZI7.s 			page 45


 1345 003a C95C     		ldrb	r1, [r1, r3]
 1346              	.LVL123:
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1347              		.loc 1 1121 0
 1348 003c D303     		lsls	r3, r2, #15
 1349 003e 04D5     		bpl	.L113
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 1350              		.loc 1 1124 0
 1351 0040 0748     		ldr	r0, .L116+8
 1352 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1353              	.LVL124:
 1354 0046 6043     		muls	r0, r4
 1355              	.LVL125:
 1356 0048 03E0     		b	.L111
 1357              	.LVL126:
 1358              	.L113:
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 1359              		.loc 1 1140 0
 1360 004a 0648     		ldr	r0, .L116+12
 1361 004c 6043     		muls	r0, r4
 1362              	.LVL127:
 1363 004e 00E0     		b	.L111
 1364              	.LVL128:
 1365              	.L115:
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1366              		.loc 1 1114 0
 1367 0050 0348     		ldr	r0, .L116+8
 1368              	.LVL129:
 1369              	.L111:
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccRZXZI7.s 			page 46


1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1370              		.loc 1 1161 0
 1371 0052 08B0     		add	sp, sp, #32
 1372              		@ sp needed
 1373 0054 10BD     		pop	{r4, pc}
 1374              	.L117:
 1375 0056 C046     		.align	2
 1376              	.L116:
 1377 0058 00000000 		.word	.LANCHOR0
 1378 005c 00100240 		.word	1073876992
 1379 0060 00127A00 		.word	8000000
 1380 0064 00093D00 		.word	4000000
 1381              		.cfi_endproc
 1382              	.LFE46:
 1384              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1385              		.align	2
 1386              		.global	HAL_RCC_ClockConfig
 1387              		.code	16
 1388              		.thumb_func
 1390              	HAL_RCC_ClockConfig:
 1391              	.LFB42:
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 1392              		.loc 1 780 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              	.LVL130:
 1397 0000 70B5     		push	{r4, r5, r6, lr}
 1398              	.LCFI7:
 1399              		.cfi_def_cfa_offset 16
 1400              		.cfi_offset 4, -16
 1401              		.cfi_offset 5, -12
 1402              		.cfi_offset 6, -8
 1403              		.cfi_offset 14, -4
 1404 0002 0400     		movs	r4, r0
 1405 0004 0D00     		movs	r5, r1
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1406              		.loc 1 784 0
 1407 0006 0028     		cmp	r0, #0
 1408 0008 7AD0     		beq	.L131
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1409              		.loc 1 798 0
 1410 000a 444B     		ldr	r3, .L138
 1411 000c 1B68     		ldr	r3, [r3]
 1412 000e 0122     		movs	r2, #1
 1413 0010 1340     		ands	r3, r2
 1414 0012 8B42     		cmp	r3, r1
 1415 0014 09D2     		bcs	.L120
ARM GAS  /tmp/ccRZXZI7.s 			page 47


 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1416              		.loc 1 801 0
 1417 0016 414A     		ldr	r2, .L138
 1418 0018 1368     		ldr	r3, [r2]
 1419 001a 0121     		movs	r1, #1
 1420              	.LVL131:
 1421 001c 8B43     		bics	r3, r1
 1422 001e 2B43     		orrs	r3, r5
 1423 0020 1360     		str	r3, [r2]
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1424              		.loc 1 805 0
 1425 0022 1368     		ldr	r3, [r2]
 1426 0024 0B40     		ands	r3, r1
 1427 0026 9D42     		cmp	r5, r3
 1428 0028 6CD1     		bne	.L132
 1429              	.L120:
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1430              		.loc 1 812 0
 1431 002a 2368     		ldr	r3, [r4]
 1432 002c 9A07     		lsls	r2, r3, #30
 1433 002e 0ED5     		bpl	.L121
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1434              		.loc 1 816 0
 1435 0030 5B07     		lsls	r3, r3, #29
 1436 0032 05D5     		bpl	.L122
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1437              		.loc 1 818 0
 1438 0034 3A4A     		ldr	r2, .L138+4
 1439 0036 5368     		ldr	r3, [r2, #4]
 1440 0038 E021     		movs	r1, #224
 1441 003a C900     		lsls	r1, r1, #3
 1442 003c 0B43     		orrs	r3, r1
 1443 003e 5360     		str	r3, [r2, #4]
 1444              	.L122:
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1445              		.loc 1 823 0
 1446 0040 374A     		ldr	r2, .L138+4
 1447 0042 5368     		ldr	r3, [r2, #4]
 1448 0044 F021     		movs	r1, #240
 1449 0046 8B43     		bics	r3, r1
 1450 0048 A168     		ldr	r1, [r4, #8]
 1451 004a 0B43     		orrs	r3, r1
 1452 004c 5360     		str	r3, [r2, #4]
 1453              	.L121:
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1454              		.loc 1 827 0
 1455 004e 2368     		ldr	r3, [r4]
 1456 0050 DB07     		lsls	r3, r3, #31
 1457 0052 2AD5     		bpl	.L123
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1458              		.loc 1 832 0
 1459 0054 6268     		ldr	r2, [r4, #4]
 1460 0056 012A     		cmp	r2, #1
 1461 0058 04D1     		bne	.L124
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1462              		.loc 1 835 0
 1463 005a 314B     		ldr	r3, .L138+4
ARM GAS  /tmp/ccRZXZI7.s 			page 48


 1464 005c 1B68     		ldr	r3, [r3]
 1465 005e 9B03     		lsls	r3, r3, #14
 1466 0060 0BD4     		bmi	.L125
 1467 0062 51E0     		b	.L133
 1468              	.L124:
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1469              		.loc 1 841 0
 1470 0064 022A     		cmp	r2, #2
 1471 0066 04D1     		bne	.L126
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1472              		.loc 1 844 0
 1473 0068 2D4B     		ldr	r3, .L138+4
 1474 006a 1B68     		ldr	r3, [r3]
 1475 006c 9B01     		lsls	r3, r3, #6
 1476 006e 04D4     		bmi	.L125
 1477 0070 4CE0     		b	.L134
 1478              	.L126:
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1479              		.loc 1 864 0
 1480 0072 2B4B     		ldr	r3, .L138+4
 1481 0074 1B68     		ldr	r3, [r3]
 1482 0076 9B07     		lsls	r3, r3, #30
 1483 0078 4AD5     		bpl	.L135
 1484              	.L125:
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1485              		.loc 1 869 0
 1486 007a 2949     		ldr	r1, .L138+4
 1487 007c 4B68     		ldr	r3, [r1, #4]
 1488 007e 0320     		movs	r0, #3
 1489              	.LVL132:
 1490 0080 8343     		bics	r3, r0
 1491 0082 1343     		orrs	r3, r2
 1492 0084 4B60     		str	r3, [r1, #4]
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1493              		.loc 1 872 0
 1494 0086 FFF7FEFF 		bl	HAL_GetTick
 1495              	.LVL133:
 1496 008a 0600     		movs	r6, r0
 1497              	.LVL134:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1498              		.loc 1 874 0
 1499 008c 05E0     		b	.L127
 1500              	.LVL135:
 1501              	.L128:
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1502              		.loc 1 876 0
 1503 008e FFF7FEFF 		bl	HAL_GetTick
 1504              	.LVL136:
 1505 0092 801B     		subs	r0, r0, r6
 1506 0094 234B     		ldr	r3, .L138+8
 1507 0096 9842     		cmp	r0, r3
 1508 0098 3CD8     		bhi	.L136
 1509              	.L127:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1510              		.loc 1 874 0
 1511 009a 214B     		ldr	r3, .L138+4
 1512 009c 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccRZXZI7.s 			page 49


 1513 009e 0C22     		movs	r2, #12
 1514 00a0 1A40     		ands	r2, r3
 1515 00a2 6368     		ldr	r3, [r4, #4]
 1516 00a4 9B00     		lsls	r3, r3, #2
 1517 00a6 9A42     		cmp	r2, r3
 1518 00a8 F1D1     		bne	.L128
 1519              	.LVL137:
 1520              	.L123:
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1521              		.loc 1 884 0
 1522 00aa 1C4B     		ldr	r3, .L138
 1523 00ac 1B68     		ldr	r3, [r3]
 1524 00ae 0122     		movs	r2, #1
 1525 00b0 1340     		ands	r3, r2
 1526 00b2 9D42     		cmp	r5, r3
 1527 00b4 09D2     		bcs	.L129
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1528              		.loc 1 887 0
 1529 00b6 194A     		ldr	r2, .L138
 1530 00b8 1368     		ldr	r3, [r2]
 1531 00ba 0121     		movs	r1, #1
 1532 00bc 8B43     		bics	r3, r1
 1533 00be 2B43     		orrs	r3, r5
 1534 00c0 1360     		str	r3, [r2]
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1535              		.loc 1 891 0
 1536 00c2 1368     		ldr	r3, [r2]
 1537 00c4 0B40     		ands	r3, r1
 1538 00c6 9D42     		cmp	r5, r3
 1539 00c8 26D1     		bne	.L137
 1540              	.L129:
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1541              		.loc 1 898 0
 1542 00ca 2368     		ldr	r3, [r4]
 1543 00cc 5B07     		lsls	r3, r3, #29
 1544 00ce 06D5     		bpl	.L130
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1545              		.loc 1 901 0
 1546 00d0 1349     		ldr	r1, .L138+4
 1547 00d2 4A68     		ldr	r2, [r1, #4]
 1548 00d4 144B     		ldr	r3, .L138+12
 1549 00d6 1340     		ands	r3, r2
 1550 00d8 E268     		ldr	r2, [r4, #12]
 1551 00da 1343     		orrs	r3, r2
 1552 00dc 4B60     		str	r3, [r1, #4]
 1553              	.L130:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1554              		.loc 1 905 0
 1555 00de FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1556              	.LVL138:
 1557 00e2 0F4B     		ldr	r3, .L138+4
 1558 00e4 5B68     		ldr	r3, [r3, #4]
 1559 00e6 1B09     		lsrs	r3, r3, #4
 1560 00e8 0F22     		movs	r2, #15
 1561 00ea 1340     		ands	r3, r2
 1562 00ec 0F4A     		ldr	r2, .L138+16
 1563 00ee D35C     		ldrb	r3, [r2, r3]
ARM GAS  /tmp/ccRZXZI7.s 			page 50


 1564 00f0 D840     		lsrs	r0, r0, r3
 1565 00f2 0F4B     		ldr	r3, .L138+20
 1566 00f4 1860     		str	r0, [r3]
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1567              		.loc 1 908 0
 1568 00f6 0320     		movs	r0, #3
 1569 00f8 FFF7FEFF 		bl	HAL_InitTick
 1570              	.LVL139:
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1571              		.loc 1 910 0
 1572 00fc 0020     		movs	r0, #0
 1573 00fe 0CE0     		b	.L119
 1574              	.LVL140:
 1575              	.L131:
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1576              		.loc 1 786 0
 1577 0100 0120     		movs	r0, #1
 1578              	.LVL141:
 1579 0102 0AE0     		b	.L119
 1580              	.LVL142:
 1581              	.L132:
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1582              		.loc 1 807 0
 1583 0104 0120     		movs	r0, #1
 1584              	.LVL143:
 1585 0106 08E0     		b	.L119
 1586              	.LVL144:
 1587              	.L133:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1588              		.loc 1 837 0
 1589 0108 0120     		movs	r0, #1
 1590              	.LVL145:
 1591 010a 06E0     		b	.L119
 1592              	.LVL146:
 1593              	.L134:
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1594              		.loc 1 846 0
 1595 010c 0120     		movs	r0, #1
 1596              	.LVL147:
 1597 010e 04E0     		b	.L119
 1598              	.LVL148:
 1599              	.L135:
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1600              		.loc 1 866 0
 1601 0110 0120     		movs	r0, #1
 1602              	.LVL149:
 1603 0112 02E0     		b	.L119
 1604              	.LVL150:
 1605              	.L136:
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1606              		.loc 1 878 0
 1607 0114 0320     		movs	r0, #3
 1608 0116 00E0     		b	.L119
 1609              	.LVL151:
 1610              	.L137:
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1611              		.loc 1 893 0
ARM GAS  /tmp/ccRZXZI7.s 			page 51


 1612 0118 0120     		movs	r0, #1
 1613              	.L119:
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1614              		.loc 1 911 0
 1615              		@ sp needed
 1616              	.LVL152:
 1617              	.LVL153:
 1618 011a 70BD     		pop	{r4, r5, r6, pc}
 1619              	.L139:
 1620              		.align	2
 1621              	.L138:
 1622 011c 00200240 		.word	1073881088
 1623 0120 00100240 		.word	1073876992
 1624 0124 88130000 		.word	5000
 1625 0128 FFF8FFFF 		.word	-1793
 1626 012c 00000000 		.word	AHBPrescTable
 1627 0130 00000000 		.word	SystemCoreClock
 1628              		.cfi_endproc
 1629              	.LFE42:
 1631              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1632              		.align	2
 1633              		.global	HAL_RCC_GetHCLKFreq
 1634              		.code	16
 1635              		.thumb_func
 1637              	HAL_RCC_GetHCLKFreq:
 1638              	.LFB47:
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1639              		.loc 1 1173 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1644              		.loc 1 1174 0
 1645 0000 014B     		ldr	r3, .L141
 1646 0002 1868     		ldr	r0, [r3]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1647              		.loc 1 1175 0
 1648              		@ sp needed
 1649 0004 7047     		bx	lr
 1650              	.L142:
 1651 0006 C046     		.align	2
 1652              	.L141:
 1653 0008 00000000 		.word	SystemCoreClock
 1654              		.cfi_endproc
 1655              	.LFE47:
ARM GAS  /tmp/ccRZXZI7.s 			page 52


 1657              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1658              		.align	2
 1659              		.global	HAL_RCC_GetPCLK1Freq
 1660              		.code	16
 1661              		.thumb_func
 1663              	HAL_RCC_GetPCLK1Freq:
 1664              	.LFB48:
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1665              		.loc 1 1184 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 0
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669 0000 10B5     		push	{r4, lr}
 1670              	.LCFI8:
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 4, -8
 1673              		.cfi_offset 14, -4
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 1674              		.loc 1 1186 0
 1675 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1676              	.LVL154:
 1677 0006 044B     		ldr	r3, .L144
 1678 0008 5B68     		ldr	r3, [r3, #4]
 1679 000a 1B0A     		lsrs	r3, r3, #8
 1680 000c 0722     		movs	r2, #7
 1681 000e 1340     		ands	r3, r2
 1682 0010 024A     		ldr	r2, .L144+4
 1683 0012 D35C     		ldrb	r3, [r2, r3]
 1684 0014 D840     		lsrs	r0, r0, r3
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1685              		.loc 1 1187 0
 1686              		@ sp needed
 1687 0016 10BD     		pop	{r4, pc}
 1688              	.L145:
 1689              		.align	2
 1690              	.L144:
 1691 0018 00100240 		.word	1073876992
 1692 001c 00000000 		.word	APBPrescTable
 1693              		.cfi_endproc
 1694              	.LFE48:
 1696              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1697              		.align	2
 1698              		.global	HAL_RCC_GetOscConfig
 1699              		.code	16
 1700              		.thumb_func
 1702              	HAL_RCC_GetOscConfig:
 1703              	.LFB49:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccRZXZI7.s 			page 53


1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1704              		.loc 1 1197 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 0
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708              		@ link register save eliminated.
 1709              	.LVL155:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 1710              		.loc 1 1202 0
 1711 0000 1F23     		movs	r3, #31
 1712 0002 0360     		str	r3, [r0]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1713              		.loc 1 1210 0
 1714 0004 2E4B     		ldr	r3, .L161
 1715 0006 1B68     		ldr	r3, [r3]
 1716 0008 5B03     		lsls	r3, r3, #13
 1717 000a 02D5     		bpl	.L147
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1718              		.loc 1 1212 0
 1719 000c 0523     		movs	r3, #5
 1720 000e 4360     		str	r3, [r0, #4]
 1721 0010 08E0     		b	.L148
 1722              	.L147:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1723              		.loc 1 1214 0
 1724 0012 2B4B     		ldr	r3, .L161
 1725 0014 1B68     		ldr	r3, [r3]
 1726 0016 DB03     		lsls	r3, r3, #15
 1727 0018 02D5     		bpl	.L149
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1728              		.loc 1 1216 0
 1729 001a 0123     		movs	r3, #1
 1730 001c 4360     		str	r3, [r0, #4]
 1731 001e 01E0     		b	.L148
 1732              	.L149:
ARM GAS  /tmp/ccRZXZI7.s 			page 54


1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1733              		.loc 1 1220 0
 1734 0020 0023     		movs	r3, #0
 1735 0022 4360     		str	r3, [r0, #4]
 1736              	.L148:
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1737              		.loc 1 1224 0
 1738 0024 264B     		ldr	r3, .L161
 1739 0026 1B68     		ldr	r3, [r3]
 1740 0028 DB07     		lsls	r3, r3, #31
 1741 002a 02D5     		bpl	.L150
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1742              		.loc 1 1226 0
 1743 002c 0123     		movs	r3, #1
 1744 002e C360     		str	r3, [r0, #12]
 1745 0030 01E0     		b	.L151
 1746              	.L150:
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1747              		.loc 1 1230 0
 1748 0032 0023     		movs	r3, #0
 1749 0034 C360     		str	r3, [r0, #12]
 1750              	.L151:
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 1751              		.loc 1 1233 0
 1752 0036 224A     		ldr	r2, .L161
 1753 0038 1368     		ldr	r3, [r2]
 1754 003a DB08     		lsrs	r3, r3, #3
 1755 003c 1F21     		movs	r1, #31
 1756 003e 0B40     		ands	r3, r1
 1757 0040 0361     		str	r3, [r0, #16]
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1758              		.loc 1 1236 0
 1759 0042 136A     		ldr	r3, [r2, #32]
 1760 0044 5B07     		lsls	r3, r3, #29
 1761 0046 02D5     		bpl	.L152
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1762              		.loc 1 1238 0
 1763 0048 0523     		movs	r3, #5
 1764 004a 8360     		str	r3, [r0, #8]
 1765 004c 08E0     		b	.L153
 1766              	.L152:
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccRZXZI7.s 			page 55


1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1767              		.loc 1 1240 0
 1768 004e 1C4B     		ldr	r3, .L161
 1769 0050 1B6A     		ldr	r3, [r3, #32]
 1770 0052 DB07     		lsls	r3, r3, #31
 1771 0054 02D5     		bpl	.L154
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1772              		.loc 1 1242 0
 1773 0056 0123     		movs	r3, #1
 1774 0058 8360     		str	r3, [r0, #8]
 1775 005a 01E0     		b	.L153
 1776              	.L154:
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1777              		.loc 1 1246 0
 1778 005c 0023     		movs	r3, #0
 1779 005e 8360     		str	r3, [r0, #8]
 1780              	.L153:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1781              		.loc 1 1250 0
 1782 0060 174B     		ldr	r3, .L161
 1783 0062 5B6A     		ldr	r3, [r3, #36]
 1784 0064 DB07     		lsls	r3, r3, #31
 1785 0066 02D5     		bpl	.L155
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1786              		.loc 1 1252 0
 1787 0068 0123     		movs	r3, #1
 1788 006a C361     		str	r3, [r0, #28]
 1789 006c 01E0     		b	.L156
 1790              	.L155:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1791              		.loc 1 1256 0
 1792 006e 0023     		movs	r3, #0
 1793 0070 C361     		str	r3, [r0, #28]
 1794              	.L156:
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 1795              		.loc 1 1260 0
 1796 0072 134B     		ldr	r3, .L161
 1797 0074 5B6B     		ldr	r3, [r3, #52]
 1798 0076 DB07     		lsls	r3, r3, #31
 1799 0078 02D5     		bpl	.L157
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 1800              		.loc 1 1262 0
ARM GAS  /tmp/ccRZXZI7.s 			page 56


 1801 007a 0123     		movs	r3, #1
 1802 007c 4361     		str	r3, [r0, #20]
 1803 007e 01E0     		b	.L158
 1804              	.L157:
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
 1805              		.loc 1 1266 0
 1806 0080 0023     		movs	r3, #0
 1807 0082 4361     		str	r3, [r0, #20]
 1808              	.L158:
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 1809              		.loc 1 1269 0
 1810 0084 0E4A     		ldr	r2, .L161
 1811 0086 536B     		ldr	r3, [r2, #52]
 1812 0088 DB08     		lsrs	r3, r3, #3
 1813 008a 1F21     		movs	r1, #31
 1814 008c 0B40     		ands	r3, r1
 1815 008e 8361     		str	r3, [r0, #24]
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1816              		.loc 1 1277 0
 1817 0090 1368     		ldr	r3, [r2]
 1818 0092 DB01     		lsls	r3, r3, #7
 1819 0094 02D5     		bpl	.L159
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1820              		.loc 1 1279 0
 1821 0096 0223     		movs	r3, #2
 1822 0098 0362     		str	r3, [r0, #32]
 1823 009a 01E0     		b	.L160
 1824              	.L159:
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1825              		.loc 1 1283 0
 1826 009c 0123     		movs	r3, #1
 1827 009e 0362     		str	r3, [r0, #32]
 1828              	.L160:
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 1829              		.loc 1 1285 0
 1830 00a0 074B     		ldr	r3, .L161
 1831 00a2 5968     		ldr	r1, [r3, #4]
 1832 00a4 8022     		movs	r2, #128
 1833 00a6 5202     		lsls	r2, r2, #9
 1834 00a8 0A40     		ands	r2, r1
ARM GAS  /tmp/ccRZXZI7.s 			page 57


 1835 00aa 4262     		str	r2, [r0, #36]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 1836              		.loc 1 1286 0
 1837 00ac 5968     		ldr	r1, [r3, #4]
 1838 00ae F022     		movs	r2, #240
 1839 00b0 9203     		lsls	r2, r2, #14
 1840 00b2 0A40     		ands	r2, r1
 1841 00b4 8262     		str	r2, [r0, #40]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 1842              		.loc 1 1287 0
 1843 00b6 DB6A     		ldr	r3, [r3, #44]
 1844 00b8 0F22     		movs	r2, #15
 1845 00ba 1340     		ands	r3, r2
 1846 00bc C362     		str	r3, [r0, #44]
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1847              		.loc 1 1288 0
 1848              		@ sp needed
 1849 00be 7047     		bx	lr
 1850              	.L162:
 1851              		.align	2
 1852              	.L161:
 1853 00c0 00100240 		.word	1073876992
 1854              		.cfi_endproc
 1855              	.LFE49:
 1857              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1858              		.align	2
 1859              		.global	HAL_RCC_GetClockConfig
 1860              		.code	16
 1861              		.thumb_func
 1863              	HAL_RCC_GetClockConfig:
 1864              	.LFB50:
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1865              		.loc 1 1299 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL156:
 1870 0000 10B5     		push	{r4, lr}
 1871              	.LCFI9:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 4, -8
 1874              		.cfi_offset 14, -4
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
ARM GAS  /tmp/ccRZXZI7.s 			page 58


1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 1875              		.loc 1 1305 0
 1876 0002 0723     		movs	r3, #7
 1877 0004 0360     		str	r3, [r0]
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1878              		.loc 1 1308 0
 1879 0006 0A4B     		ldr	r3, .L164
 1880 0008 5A68     		ldr	r2, [r3, #4]
 1881 000a 0324     		movs	r4, #3
 1882 000c 2240     		ands	r2, r4
 1883 000e 4260     		str	r2, [r0, #4]
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 1884              		.loc 1 1311 0
 1885 0010 5A68     		ldr	r2, [r3, #4]
 1886 0012 ED34     		adds	r4, r4, #237
 1887 0014 2240     		ands	r2, r4
 1888 0016 8260     		str	r2, [r0, #8]
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 1889              		.loc 1 1314 0
 1890 0018 5A68     		ldr	r2, [r3, #4]
 1891 001a E023     		movs	r3, #224
 1892 001c DB00     		lsls	r3, r3, #3
 1893 001e 1340     		ands	r3, r2
 1894 0020 C360     		str	r3, [r0, #12]
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY(); 
 1895              		.loc 1 1316 0
 1896 0022 044B     		ldr	r3, .L164+4
 1897 0024 1B68     		ldr	r3, [r3]
 1898 0026 0122     		movs	r2, #1
 1899 0028 1340     		ands	r3, r2
 1900 002a 0B60     		str	r3, [r1]
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1901              		.loc 1 1317 0
 1902              		@ sp needed
 1903 002c 10BD     		pop	{r4, pc}
 1904              	.L165:
 1905 002e C046     		.align	2
 1906              	.L164:
 1907 0030 00100240 		.word	1073876992
 1908 0034 00200240 		.word	1073881088
 1909              		.cfi_endproc
 1910              	.LFE50:
 1912              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1913              		.align	2
 1914              		.weak	HAL_RCC_CSSCallback
 1915              		.code	16
 1916              		.thumb_func
 1918              	HAL_RCC_CSSCallback:
 1919              	.LFB52:
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccRZXZI7.s 			page 59


1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1920              		.loc 1 1342 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              		@ link register save eliminated.
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1925              		.loc 1 1346 0
 1926              		@ sp needed
 1927 0000 7047     		bx	lr
 1928              		.cfi_endproc
 1929              	.LFE52:
 1931 0002 C046     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1932              		.align	2
 1933              		.global	HAL_RCC_NMI_IRQHandler
 1934              		.code	16
 1935              		.thumb_func
 1937              	HAL_RCC_NMI_IRQHandler:
 1938              	.LFB51:
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1939              		.loc 1 1325 0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943 0000 10B5     		push	{r4, lr}
 1944              	.LCFI10:
 1945              		.cfi_def_cfa_offset 8
 1946              		.cfi_offset 4, -8
 1947              		.cfi_offset 14, -4
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1948              		.loc 1 1327 0
ARM GAS  /tmp/ccRZXZI7.s 			page 60


 1949 0002 054B     		ldr	r3, .L169
 1950 0004 9B68     		ldr	r3, [r3, #8]
 1951 0006 1B06     		lsls	r3, r3, #24
 1952 0008 04D5     		bpl	.L167
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1953              		.loc 1 1330 0
 1954 000a FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1955              	.LVL157:
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1956              		.loc 1 1333 0
 1957 000e 8022     		movs	r2, #128
 1958 0010 024B     		ldr	r3, .L169+4
 1959 0012 1A70     		strb	r2, [r3]
 1960              	.L167:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1961              		.loc 1 1335 0
 1962              		@ sp needed
 1963 0014 10BD     		pop	{r4, pc}
 1964              	.L170:
 1965 0016 C046     		.align	2
 1966              	.L169:
 1967 0018 00100240 		.word	1073876992
 1968 001c 0A100240 		.word	1073877002
 1969              		.cfi_endproc
 1970              	.LFE51:
 1972              		.section	.rodata
 1973              		.align	2
 1974              		.set	.LANCHOR0,. + 0
 1975              	.LC0:
 1976 0000 02       		.byte	2
 1977 0001 03       		.byte	3
 1978 0002 04       		.byte	4
 1979 0003 05       		.byte	5
 1980 0004 06       		.byte	6
 1981 0005 07       		.byte	7
 1982 0006 08       		.byte	8
 1983 0007 09       		.byte	9
 1984 0008 0A       		.byte	10
 1985 0009 0B       		.byte	11
 1986 000a 0C       		.byte	12
 1987 000b 0D       		.byte	13
 1988 000c 0E       		.byte	14
 1989 000d 0F       		.byte	15
 1990 000e 10       		.byte	16
 1991 000f 10       		.byte	16
 1992              	.LC1:
 1993 0010 01       		.byte	1
 1994 0011 02       		.byte	2
 1995 0012 03       		.byte	3
 1996 0013 04       		.byte	4
 1997 0014 05       		.byte	5
 1998 0015 06       		.byte	6
 1999 0016 07       		.byte	7
 2000 0017 08       		.byte	8
 2001 0018 09       		.byte	9
 2002 0019 0A       		.byte	10
 2003 001a 0B       		.byte	11
ARM GAS  /tmp/ccRZXZI7.s 			page 61


 2004 001b 0C       		.byte	12
 2005 001c 0D       		.byte	13
 2006 001d 0E       		.byte	14
 2007 001e 0F       		.byte	15
 2008 001f 10       		.byte	16
 2009              		.text
 2010              	.Letext0:
 2011              		.file 2 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 2012              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 2013              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 2014              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2015              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2016              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2017              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2018              		.file 9 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2019              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccRZXZI7.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rcc.c
     /tmp/ccRZXZI7.s:20     .text.HAL_RCC_DeInit:00000000 $t
     /tmp/ccRZXZI7.s:25     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
     /tmp/ccRZXZI7.s:180    .text.HAL_RCC_DeInit:000000b0 $d
     /tmp/ccRZXZI7.s:192    .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/ccRZXZI7.s:197    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/ccRZXZI7.s:804    .text.HAL_RCC_OscConfig:00000324 $d
     /tmp/ccRZXZI7.s:813    .text.HAL_RCC_OscConfig:0000033c $t
     /tmp/ccRZXZI7.s:1140   .text.HAL_RCC_OscConfig:000004bc $d
     /tmp/ccRZXZI7.s:1147   .text.HAL_RCC_MCOConfig:00000000 $t
     /tmp/ccRZXZI7.s:1152   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
     /tmp/ccRZXZI7.s:1224   .text.HAL_RCC_MCOConfig:0000004c $d
     /tmp/ccRZXZI7.s:1230   .text.HAL_RCC_EnableCSS:00000000 $t
     /tmp/ccRZXZI7.s:1235   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
     /tmp/ccRZXZI7.s:1255   .text.HAL_RCC_EnableCSS:00000010 $d
     /tmp/ccRZXZI7.s:1260   .text.HAL_RCC_DisableCSS:00000000 $t
     /tmp/ccRZXZI7.s:1265   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
     /tmp/ccRZXZI7.s:1284   .text.HAL_RCC_DisableCSS:0000000c $d
     /tmp/ccRZXZI7.s:1291   .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/ccRZXZI7.s:1296   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/ccRZXZI7.s:1377   .text.HAL_RCC_GetSysClockFreq:00000058 $d
     /tmp/ccRZXZI7.s:1385   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/ccRZXZI7.s:1390   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/ccRZXZI7.s:1622   .text.HAL_RCC_ClockConfig:0000011c $d
     /tmp/ccRZXZI7.s:1632   .text.HAL_RCC_GetHCLKFreq:00000000 $t
     /tmp/ccRZXZI7.s:1637   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
     /tmp/ccRZXZI7.s:1653   .text.HAL_RCC_GetHCLKFreq:00000008 $d
     /tmp/ccRZXZI7.s:1658   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/ccRZXZI7.s:1663   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccRZXZI7.s:1691   .text.HAL_RCC_GetPCLK1Freq:00000018 $d
     /tmp/ccRZXZI7.s:1697   .text.HAL_RCC_GetOscConfig:00000000 $t
     /tmp/ccRZXZI7.s:1702   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
     /tmp/ccRZXZI7.s:1853   .text.HAL_RCC_GetOscConfig:000000c0 $d
     /tmp/ccRZXZI7.s:1858   .text.HAL_RCC_GetClockConfig:00000000 $t
     /tmp/ccRZXZI7.s:1863   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
     /tmp/ccRZXZI7.s:1907   .text.HAL_RCC_GetClockConfig:00000030 $d
     /tmp/ccRZXZI7.s:1913   .text.HAL_RCC_CSSCallback:00000000 $t
     /tmp/ccRZXZI7.s:1918   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
     /tmp/ccRZXZI7.s:1932   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
     /tmp/ccRZXZI7.s:1937   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccRZXZI7.s:1967   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
     /tmp/ccRZXZI7.s:1973   .rodata:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uidiv
memcpy
AHBPrescTable
APBPrescTable
