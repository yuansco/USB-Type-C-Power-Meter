ARM GAS  /tmp/ccQJ5CSb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  24              	UART_EndTxTransfer:
  25              	.LFB87:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/ccQJ5CSb.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ##### Callback registration #####
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ==================================
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
ARM GAS  /tmp/ccQJ5CSb.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and a pointer to the user callback function.
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     weak (surcharged) function.
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and the Callback ID.
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function allows to reset following callbacks:
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     or HAL_UART_Init() function.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
ARM GAS  /tmp/ccQJ5CSb.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * All rights reserved.</center></h2>
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                       USART_CR1_OVER8)) /*!< UART or USART CR1 fields of parameters
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE |\
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                             USART_CR3_ONEBIT)) /*!< UART or USART CR3 fields of parameters set by U
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccQJ5CSb.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     are available in reference manual).
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
ARM GAS  /tmp/ccQJ5CSb.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   following table.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Table 1. UART frame format.
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQJ5CSb.s 			page 7


 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
ARM GAS  /tmp/ccQJ5CSb.s 			page 8


 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported) and IREN (if IrDA is supported) bits in the USART_CR3 register
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
ARM GAS  /tmp/ccQJ5CSb.s 			page 9


 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart             UART handle.
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the LIN UART instance */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccQJ5CSb.s 			page 10


 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN(if Smartcard is supported) and IREN(if IrDA is supported) bits in the USART_CR3 register.*
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
ARM GAS  /tmp/ccQJ5CSb.s 			page 11


 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart        UART handle.
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
ARM GAS  /tmp/ccQJ5CSb.s 			page 12


 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 13


 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 14


 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (pCallback == NULL)
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccQJ5CSb.s 			page 15


 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccQJ5CSb.s 			page 16


 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 17


 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 18


 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart     Uart handle
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (pCallback == NULL)
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process locked */
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
ARM GAS  /tmp/ccQJ5CSb.s 			page 19


1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Release Lock */
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart     Uart handle
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process locked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Release Lock */
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
ARM GAS  /tmp/ccQJ5CSb.s 			page 20


1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive()
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort()
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         reception services:
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 21


1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            in Interrupt mode reception .
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            user callback is executed.
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
ARM GAS  /tmp/ccQJ5CSb.s 			page 22


1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout management */
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 23


1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled using u16 pointer cast). Depending on compi
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout management */
ARM GAS  /tmp/ccQJ5CSb.s 			page 24


1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /tmp/ccQJ5CSb.s 			page 25


1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR       = NULL;
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
ARM GAS  /tmp/ccQJ5CSb.s 			page 26


1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled using u16 pointer cast). Depending on compi
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check that USART RTOEN bit is set */
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Receiver Timeout Interrupt */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 27


1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
ARM GAS  /tmp/ccQJ5CSb.s 			page 28


1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA error callback */
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA abort callback */
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set error code to DMA */
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_ERROR;
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the parity bit (MSB position).
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled by DMA from halfword frontier). Depending o
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccQJ5CSb.s 			page 29


1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check that USART RTOEN bit is set */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Receiver Timeout Interrupt */
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccQJ5CSb.s 			page 30


1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccQJ5CSb.s 			page 31


1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
ARM GAS  /tmp/ccQJ5CSb.s 			page 32


1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccQJ5CSb.s 			page 33


1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccQJ5CSb.s 			page 34


1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
ARM GAS  /tmp/ccQJ5CSb.s 			page 35


1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
ARM GAS  /tmp/ccQJ5CSb.s 			page 36


1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQJ5CSb.s 			page 37


2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear ISR function pointers */
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = NULL;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 38


2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Discard the received data */
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
ARM GAS  /tmp/ccQJ5CSb.s 			page 39


2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U;
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = NULL;
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccQJ5CSb.s 			page 40


2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U;
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Discard the received data */
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
ARM GAS  /tmp/ccQJ5CSb.s 			page 41


2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorcode;
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == 0U)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQJ5CSb.s 			page 42


2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->RxISR != NULL)
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxISR(huart);
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((errorflags != 0U)
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
ARM GAS  /tmp/ccQJ5CSb.s 			page 43


2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (huart->RxISR != NULL)
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxISR(huart);
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Receiver Timeout error in Reception
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Overrun error in Reception
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - any error occurs in DMA mode reception
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       */
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call registered error callback*/
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->ErrorCallback(huart);
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
ARM GAS  /tmp/ccQJ5CSb.s 			page 44


2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call registered error callback*/
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered error callback*/
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check current reception Mode :
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* DMA mode enabled */
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          (DMA cplt callback will be called).
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Reception is not complete */
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccQJ5CSb.s 			page 45


2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              in the UART CR3 register */
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* DMA mode not enabled */
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && (nb_rx_data > 0U))
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Clear RxISR function pointer */
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxISR = NULL;
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
ARM GAS  /tmp/ccQJ5CSb.s 			page 46


2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxISR != NULL)
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR(huart);
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
ARM GAS  /tmp/ccQJ5CSb.s 			page 47


2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART error callback.
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccQJ5CSb.s 			page 48


2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               reception buffer until which, data are available)
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccQJ5CSb.s 			page 49


2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(Size);
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
ARM GAS  /tmp/ccQJ5CSb.s 			page 50


2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  /tmp/ccQJ5CSb.s 			page 51


2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccQJ5CSb.s 			page 52


2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Transmit break characters.
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 53


2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Send break characters */
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Return the UART handle state.
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1;
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp2;
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccQJ5CSb.s 			page 54


2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval none
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init the UART Callback settings */
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg;
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp;
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t usartdiv;
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
ARM GAS  /tmp/ccQJ5CSb.s 			page 55


3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to huart->Init.StopBits value */
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = 0U;
ARM GAS  /tmp/ccQJ5CSb.s 			page 56


3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (pclk != 0U)
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = 0U;
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (pclk != 0U)
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 57


3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear ISR function pointers */
3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
ARM GAS  /tmp/ccQJ5CSb.s 			page 58


3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout management */
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQJ5CSb.s 			page 59


3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart     UART handle.
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Tickstart Tick start value
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            interrupts for the interrupt process */
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              interrupts for the interrupt process */
ARM GAS  /tmp/ccQJ5CSb.s 			page 60


3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXE
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Process Unlocked */
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferSize  = Size;
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = Size;
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR       = NULL;
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the Rx ISR function pointer according to the data word length */
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = UART_RxISR_16BIT;
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = UART_RxISR_8BIT;
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 61


3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferSize = Size;
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set error code to DMA */
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 62


3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   in the UART CR3 register */
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  27              		.loc 1 3470 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB564:
  38              	.LBB565:
  39              	.LBB566:
  40              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/ccQJ5CSb.s 			page 63


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/ccQJ5CSb.s 			page 64


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccQJ5CSb.s 			page 65


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccQJ5CSb.s 			page 66


 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccQJ5CSb.s 			page 67


 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/ccQJ5CSb.s 			page 68


 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
ARM GAS  /tmp/ccQJ5CSb.s 			page 69


 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  41              		.loc 2 386 0
  42              		.syntax divided
  43              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0002 EFF31081 		MRS r1, primask
  45              	@ 0 "" 2
  46              	.LVL1:
  47              		.thumb
  48              		.syntax unified
  49              	.LBE566:
  50              	.LBE565:
  51              	.LBB567:
  52              	.LBB568:
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
ARM GAS  /tmp/ccQJ5CSb.s 			page 70


 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
  53              		.loc 2 414 0
  54 0006 0123     		movs	r3, #1
  55              		.syntax divided
  56              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  57 0008 83F31088 		MSR primask, r3
  58              	@ 0 "" 2
  59              	.LVL2:
  60              		.thumb
  61              		.syntax unified
  62              	.LBE568:
  63              	.LBE567:
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  64              		.loc 1 3472 0
  65 000c 0268     		ldr	r2, [r0]
  66 000e 1368     		ldr	r3, [r2]
  67 0010 C024     		movs	r4, #192
  68 0012 A343     		bics	r3, r4
  69 0014 1360     		str	r3, [r2]
  70              	.LBB569:
  71              	.LBB570:
  72              		.loc 2 414 0
  73              		.syntax divided
  74              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  75 0016 81F31088 		MSR primask, r1
  76              	@ 0 "" 2
  77              		.thumb
  78              		.syntax unified
  79              	.LBE570:
  80              	.LBE569:
  81              	.LBE564:
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  82              		.loc 1 3475 0
  83 001a 2023     		movs	r3, #32
  84 001c 8367     		str	r3, [r0, #120]
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  85              		.loc 1 3476 0
  86              		@ sp needed
  87 001e 10BD     		pop	{r4, pc}
  88              		.cfi_endproc
  89              	.LFE87:
  91              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  92              		.align	2
  93              		.code	16
  94              		.thumb_func
  96              	UART_EndRxTransfer:
  97              	.LFB88:
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccQJ5CSb.s 			page 71


3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  98              		.loc 1 3485 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL3:
 103 0000 30B5     		push	{r4, r5, lr}
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 12
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
 109              	.LBB571:
 110              	.LBB572:
 111              	.LBB573:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 112              		.loc 2 386 0
 113              		.syntax divided
 114              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 115 0002 EFF31084 		MRS r4, primask
 116              	@ 0 "" 2
 117              	.LVL4:
 118              		.thumb
 119              		.syntax unified
 120              	.LBE573:
 121              	.LBE572:
 122              	.LBB574:
 123              	.LBB575:
 124              		.loc 2 414 0
 125 0006 0121     		movs	r1, #1
 126              		.syntax divided
 127              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 128 0008 81F31088 		MSR primask, r1
 129              	@ 0 "" 2
 130              	.LVL5:
 131              		.thumb
 132              		.syntax unified
 133              	.LBE575:
 134              	.LBE574:
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 135              		.loc 1 3487 0
 136 000c 0268     		ldr	r2, [r0]
 137 000e 1568     		ldr	r5, [r2]
 138 0010 114B     		ldr	r3, .L4
 139 0012 2B40     		ands	r3, r5
 140 0014 1360     		str	r3, [r2]
 141              	.LBB576:
 142              	.LBB577:
 143              		.loc 2 414 0
 144              		.syntax divided
 145              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 146 0016 84F31088 		MSR primask, r4
 147              	@ 0 "" 2
 148              		.thumb
ARM GAS  /tmp/ccQJ5CSb.s 			page 72


 149              		.syntax unified
 150              	.LBE577:
 151              	.LBE576:
 152              	.LBE571:
 153              	.LBB578:
 154              	.LBB579:
 155              	.LBB580:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 156              		.loc 2 386 0
 157              		.syntax divided
 158              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 159 001a EFF31084 		MRS r4, primask
 160              	@ 0 "" 2
 161              	.LVL6:
 162              		.thumb
 163              		.syntax unified
 164              	.LBE580:
 165              	.LBE579:
 166              	.LBB581:
 167              	.LBB582:
 168              		.loc 2 414 0
 169 001e 0123     		movs	r3, #1
 170              		.syntax divided
 171              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 172 0020 83F31088 		MSR primask, r3
 173              	@ 0 "" 2
 174              	.LVL7:
 175              		.thumb
 176              		.syntax unified
 177              	.LBE582:
 178              	.LBE581:
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 179              		.loc 1 3488 0
 180 0024 0268     		ldr	r2, [r0]
 181 0026 9368     		ldr	r3, [r2, #8]
 182 0028 8B43     		bics	r3, r1
 183 002a 9360     		str	r3, [r2, #8]
 184              	.LBB583:
 185              	.LBB584:
 186              		.loc 2 414 0
 187              		.syntax divided
 188              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 189 002c 84F31088 		MSR primask, r4
 190              	@ 0 "" 2
 191              		.thumb
 192              		.syntax unified
 193              	.LBE584:
 194              	.LBE583:
 195              	.LBE578:
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 196              		.loc 1 3491 0
 197 0030 036E     		ldr	r3, [r0, #96]
 198 0032 012B     		cmp	r3, #1
 199 0034 0AD1     		bne	.L3
 200              	.LBB585:
ARM GAS  /tmp/ccQJ5CSb.s 			page 73


 201              	.LBB586:
 202              	.LBB587:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 203              		.loc 2 386 0
 204              		.syntax divided
 205              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 206 0036 EFF31081 		MRS r1, primask
 207              	@ 0 "" 2
 208              	.LVL8:
 209              		.thumb
 210              		.syntax unified
 211              	.LBE587:
 212              	.LBE586:
 213              	.LBB588:
 214              	.LBB589:
 215              		.loc 2 414 0
 216              		.syntax divided
 217              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 218 003a 83F31088 		MSR primask, r3
 219              	@ 0 "" 2
 220              	.LVL9:
 221              		.thumb
 222              		.syntax unified
 223              	.LBE589:
 224              	.LBE588:
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 225              		.loc 1 3493 0
 226 003e 0268     		ldr	r2, [r0]
 227 0040 1368     		ldr	r3, [r2]
 228 0042 1024     		movs	r4, #16
 229 0044 A343     		bics	r3, r4
 230 0046 1360     		str	r3, [r2]
 231              	.LBB590:
 232              	.LBB591:
 233              		.loc 2 414 0
 234              		.syntax divided
 235              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 236 0048 81F31088 		MSR primask, r1
 237              	@ 0 "" 2
 238              		.thumb
 239              		.syntax unified
 240              	.L3:
 241              	.LBE591:
 242              	.LBE590:
 243              	.LBE585:
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 244              		.loc 1 3497 0
 245 004c 2023     		movs	r3, #32
 246 004e C367     		str	r3, [r0, #124]
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 247              		.loc 1 3498 0
 248 0050 0023     		movs	r3, #0
 249 0052 0366     		str	r3, [r0, #96]
ARM GAS  /tmp/ccQJ5CSb.s 			page 74


3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
 250              		.loc 1 3501 0
 251 0054 4366     		str	r3, [r0, #100]
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 252              		.loc 1 3502 0
 253              		@ sp needed
 254 0056 30BD     		pop	{r4, r5, pc}
 255              	.L5:
 256              		.align	2
 257              	.L4:
 258 0058 DFFEFFFF 		.word	-289
 259              		.cfi_endproc
 260              	.LFE88:
 262              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 263              		.align	2
 264              		.code	16
 265              		.thumb_func
 267              	UART_TxISR_8BIT:
 268              	.LFB99:
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 75


3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check current reception Mode :
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
ARM GAS  /tmp/ccQJ5CSb.s 			page 76


3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check current reception Mode :
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccQJ5CSb.s 			page 77


3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
ARM GAS  /tmp/ccQJ5CSb.s 			page 78


3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccQJ5CSb.s 			page 79


3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 80


3824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
3874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccQJ5CSb.s 			page 81


 269              		.loc 1 3880 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL10:
 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI2:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
3881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 279              		.loc 1 3882 0
 280 0002 836F     		ldr	r3, [r0, #120]
 281 0004 212B     		cmp	r3, #33
 282 0006 29D1     		bne	.L6
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 283              		.loc 1 3884 0
 284 0008 3133     		adds	r3, r3, #49
 285 000a C35A     		ldrh	r3, [r0, r3]
 286 000c 9BB2     		uxth	r3, r3
 287 000e 002B     		cmp	r3, #0
 288 0010 18D1     		bne	.L8
 289              	.LBB592:
 290              	.LBB593:
 291              	.LBB594:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292              		.loc 2 386 0
 293              		.syntax divided
 294              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 295 0012 EFF31081 		MRS r1, primask
 296              	@ 0 "" 2
 297              	.LVL11:
 298              		.thumb
 299              		.syntax unified
 300              	.LBE594:
 301              	.LBE593:
 302              	.LBB595:
 303              	.LBB596:
 304              		.loc 2 414 0
 305 0016 0133     		adds	r3, r3, #1
 306              		.syntax divided
 307              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 308 0018 83F31088 		MSR primask, r3
 309              	@ 0 "" 2
 310              	.LVL12:
 311              		.thumb
 312              		.syntax unified
 313              	.LBE596:
 314              	.LBE595:
3885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 315              		.loc 1 3887 0
 316 001c 0268     		ldr	r2, [r0]
 317 001e 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccQJ5CSb.s 			page 82


 318 0020 8024     		movs	r4, #128
 319 0022 A343     		bics	r3, r4
 320 0024 1360     		str	r3, [r2]
 321              	.LBB597:
 322              	.LBB598:
 323              		.loc 2 414 0
 324              		.syntax divided
 325              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 326 0026 81F31088 		MSR primask, r1
 327              	@ 0 "" 2
 328              		.thumb
 329              		.syntax unified
 330              	.LBE598:
 331              	.LBE597:
 332              	.LBE592:
 333              	.LBB599:
 334              	.LBB600:
 335              	.LBB601:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 336              		.loc 2 386 0
 337              		.syntax divided
 338              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 339 002a EFF31081 		MRS r1, primask
 340              	@ 0 "" 2
 341              	.LVL13:
 342              		.thumb
 343              		.syntax unified
 344              	.LBE601:
 345              	.LBE600:
 346              	.LBB602:
 347              	.LBB603:
 348              		.loc 2 414 0
 349 002e 0123     		movs	r3, #1
 350              		.syntax divided
 351              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 352 0030 83F31088 		MSR primask, r3
 353              	@ 0 "" 2
 354              	.LVL14:
 355              		.thumb
 356              		.syntax unified
 357              	.LBE603:
 358              	.LBE602:
3888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 359              		.loc 1 3890 0
 360 0034 0268     		ldr	r2, [r0]
 361 0036 1068     		ldr	r0, [r2]
 362              	.LVL15:
 363 0038 3F33     		adds	r3, r3, #63
 364 003a 0343     		orrs	r3, r0
 365 003c 1360     		str	r3, [r2]
 366              	.LBB604:
 367              	.LBB605:
 368              		.loc 2 414 0
 369              		.syntax divided
 370              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccQJ5CSb.s 			page 83


 371 003e 81F31088 		MSR primask, r1
 372              	@ 0 "" 2
 373              		.thumb
 374              		.syntax unified
 375 0042 0BE0     		b	.L6
 376              	.LVL16:
 377              	.L8:
 378              	.LBE605:
 379              	.LBE604:
 380              	.LBE599:
3891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 381              		.loc 1 3894 0
 382 0044 C36C     		ldr	r3, [r0, #76]
 383 0046 1B78     		ldrb	r3, [r3]
 384 0048 0268     		ldr	r2, [r0]
 385 004a 1385     		strh	r3, [r2, #40]
3895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 386              		.loc 1 3895 0
 387 004c C36C     		ldr	r3, [r0, #76]
 388 004e 0133     		adds	r3, r3, #1
 389 0050 C364     		str	r3, [r0, #76]
3896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 390              		.loc 1 3896 0
 391 0052 5222     		movs	r2, #82
 392 0054 835A     		ldrh	r3, [r0, r2]
 393 0056 013B     		subs	r3, r3, #1
 394 0058 9BB2     		uxth	r3, r3
 395 005a 8352     		strh	r3, [r0, r2]
 396              	.LVL17:
 397              	.L6:
3897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 398              		.loc 1 3899 0
 399              		@ sp needed
 400 005c 10BD     		pop	{r4, pc}
 401              		.cfi_endproc
 402              	.LFE99:
 404 005e C046     		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 405              		.align	2
 406              		.code	16
 407              		.thumb_func
 409              	UART_TxISR_16BIT:
 410              	.LFB100:
3900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccQJ5CSb.s 			page 84


 411              		.loc 1 3909 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              	.LVL18:
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI3:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
3910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
3911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 421              		.loc 1 3913 0
 422 0002 836F     		ldr	r3, [r0, #120]
 423 0004 212B     		cmp	r3, #33
 424 0006 2BD1     		bne	.L9
3914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 425              		.loc 1 3915 0
 426 0008 3133     		adds	r3, r3, #49
 427 000a C35A     		ldrh	r3, [r0, r3]
 428 000c 9BB2     		uxth	r3, r3
 429 000e 002B     		cmp	r3, #0
 430 0010 18D1     		bne	.L11
 431              	.LBB606:
 432              	.LBB607:
 433              	.LBB608:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 434              		.loc 2 386 0
 435              		.syntax divided
 436              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 437 0012 EFF31081 		MRS r1, primask
 438              	@ 0 "" 2
 439              	.LVL19:
 440              		.thumb
 441              		.syntax unified
 442              	.LBE608:
 443              	.LBE607:
 444              	.LBB609:
 445              	.LBB610:
 446              		.loc 2 414 0
 447 0016 0133     		adds	r3, r3, #1
 448              		.syntax divided
 449              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 450 0018 83F31088 		MSR primask, r3
 451              	@ 0 "" 2
 452              	.LVL20:
 453              		.thumb
 454              		.syntax unified
 455              	.LBE610:
 456              	.LBE609:
3916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 457              		.loc 1 3918 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 85


 458 001c 0268     		ldr	r2, [r0]
 459 001e 1368     		ldr	r3, [r2]
 460 0020 8024     		movs	r4, #128
 461 0022 A343     		bics	r3, r4
 462 0024 1360     		str	r3, [r2]
 463              	.LBB611:
 464              	.LBB612:
 465              		.loc 2 414 0
 466              		.syntax divided
 467              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 468 0026 81F31088 		MSR primask, r1
 469              	@ 0 "" 2
 470              		.thumb
 471              		.syntax unified
 472              	.LBE612:
 473              	.LBE611:
 474              	.LBE606:
 475              	.LBB613:
 476              	.LBB614:
 477              	.LBB615:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 478              		.loc 2 386 0
 479              		.syntax divided
 480              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 481 002a EFF31081 		MRS r1, primask
 482              	@ 0 "" 2
 483              	.LVL21:
 484              		.thumb
 485              		.syntax unified
 486              	.LBE615:
 487              	.LBE614:
 488              	.LBB616:
 489              	.LBB617:
 490              		.loc 2 414 0
 491 002e 0123     		movs	r3, #1
 492              		.syntax divided
 493              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 494 0030 83F31088 		MSR primask, r3
 495              	@ 0 "" 2
 496              	.LVL22:
 497              		.thumb
 498              		.syntax unified
 499              	.LBE617:
 500              	.LBE616:
3919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 501              		.loc 1 3921 0
 502 0034 0268     		ldr	r2, [r0]
 503 0036 1068     		ldr	r0, [r2]
 504              	.LVL23:
 505 0038 3F33     		adds	r3, r3, #63
 506 003a 0343     		orrs	r3, r0
 507 003c 1360     		str	r3, [r2]
 508              	.LBB618:
 509              	.LBB619:
 510              		.loc 2 414 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 86


 511              		.syntax divided
 512              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 513 003e 81F31088 		MSR primask, r1
 514              	@ 0 "" 2
 515              		.thumb
 516              		.syntax unified
 517 0042 0DE0     		b	.L9
 518              	.LVL24:
 519              	.L11:
 520              	.LBE619:
 521              	.LBE618:
 522              	.LBE613:
3922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 523              		.loc 1 3926 0
 524 0044 C36C     		ldr	r3, [r0, #76]
 525 0046 1B88     		ldrh	r3, [r3]
 526 0048 DB05     		lsls	r3, r3, #23
 527 004a DB0D     		lsrs	r3, r3, #23
 528 004c 0268     		ldr	r2, [r0]
 529 004e 1385     		strh	r3, [r2, #40]
 530              	.LVL25:
3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 531              		.loc 1 3927 0
 532 0050 C36C     		ldr	r3, [r0, #76]
 533 0052 0233     		adds	r3, r3, #2
 534 0054 C364     		str	r3, [r0, #76]
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 535              		.loc 1 3928 0
 536 0056 5222     		movs	r2, #82
 537 0058 835A     		ldrh	r3, [r0, r2]
 538 005a 013B     		subs	r3, r3, #1
 539 005c 9BB2     		uxth	r3, r3
 540 005e 8352     		strh	r3, [r0, r2]
 541              	.LVL26:
 542              	.L9:
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 543              		.loc 1 3931 0
 544              		@ sp needed
 545 0060 10BD     		pop	{r4, pc}
 546              		.cfi_endproc
 547              	.LFE100:
 549 0062 C046     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 550              		.align	2
 551              		.weak	HAL_UART_MspInit
 552              		.code	16
 553              		.thumb_func
 555              	HAL_UART_MspInit:
 556              	.LFB44:
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 557              		.loc 1 713 0
 558              		.cfi_startproc
ARM GAS  /tmp/ccQJ5CSb.s 			page 87


 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL27:
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 563              		.loc 1 720 0
 564              		@ sp needed
 565 0000 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE44:
 569 0002 C046     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 570              		.align	2
 571              		.weak	HAL_UART_MspDeInit
 572              		.code	16
 573              		.thumb_func
 575              	HAL_UART_MspDeInit:
 576              	.LFB45:
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 577              		.loc 1 728 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL28:
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583              		.loc 1 735 0
 584              		@ sp needed
 585 0000 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE45:
 589 0002 C046     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 590              		.align	2
 591              		.global	HAL_UART_DeInit
 592              		.code	16
 593              		.thumb_func
 595              	HAL_UART_DeInit:
 596              	.LFB43:
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 597              		.loc 1 667 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL29:
 602 0000 70B5     		push	{r4, r5, r6, lr}
 603              	.LCFI4:
 604              		.cfi_def_cfa_offset 16
 605              		.cfi_offset 4, -16
 606              		.cfi_offset 5, -12
 607              		.cfi_offset 6, -8
 608              		.cfi_offset 14, -4
 609 0002 041E     		subs	r4, r0, #0
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 610              		.loc 1 669 0
 611 0004 18D0     		beq	.L16
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612              		.loc 1 677 0
 613 0006 2423     		movs	r3, #36
ARM GAS  /tmp/ccQJ5CSb.s 			page 88


 614 0008 8367     		str	r3, [r0, #120]
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 615              		.loc 1 679 0
 616 000a 0268     		ldr	r2, [r0]
 617 000c 1368     		ldr	r3, [r2]
 618 000e 0121     		movs	r1, #1
 619 0010 8B43     		bics	r3, r1
 620 0012 1360     		str	r3, [r2]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 621              		.loc 1 681 0
 622 0014 0368     		ldr	r3, [r0]
 623 0016 0025     		movs	r5, #0
 624 0018 1D60     		str	r5, [r3]
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 625              		.loc 1 682 0
 626 001a 0368     		ldr	r3, [r0]
 627 001c 5D60     		str	r5, [r3, #4]
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 628              		.loc 1 683 0
 629 001e 0368     		ldr	r3, [r0]
 630 0020 9D60     		str	r5, [r3, #8]
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 631              		.loc 1 694 0
 632 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 633              	.LVL30:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 634              		.loc 1 697 0
 635 0026 8023     		movs	r3, #128
 636 0028 E550     		str	r5, [r4, r3]
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 637              		.loc 1 698 0
 638 002a A567     		str	r5, [r4, #120]
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 639              		.loc 1 699 0
 640 002c E567     		str	r5, [r4, #124]
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641              		.loc 1 700 0
 642 002e 2566     		str	r5, [r4, #96]
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 643              		.loc 1 702 0
 644 0030 0C3B     		subs	r3, r3, #12
 645 0032 E554     		strb	r5, [r4, r3]
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 646              		.loc 1 704 0
 647 0034 0020     		movs	r0, #0
 648 0036 00E0     		b	.L15
 649              	.LVL31:
 650              	.L16:
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 651              		.loc 1 671 0
 652 0038 0120     		movs	r0, #1
 653              	.LVL32:
 654              	.L15:
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 655              		.loc 1 705 0
 656              		@ sp needed
 657              	.LVL33:
ARM GAS  /tmp/ccQJ5CSb.s 			page 89


 658 003a 70BD     		pop	{r4, r5, r6, pc}
 659              		.cfi_endproc
 660              	.LFE43:
 662              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 663              		.align	2
 664              		.global	HAL_UART_Transmit_IT
 665              		.code	16
 666              		.thumb_func
 668              	HAL_UART_Transmit_IT:
 669              	.LFB48:
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 670              		.loc 1 1357 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              	.LVL34:
 675 0000 30B5     		push	{r4, r5, lr}
 676              	.LCFI5:
 677              		.cfi_def_cfa_offset 12
 678              		.cfi_offset 4, -12
 679              		.cfi_offset 5, -8
 680              		.cfi_offset 14, -4
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 681              		.loc 1 1359 0
 682 0002 836F     		ldr	r3, [r0, #120]
 683 0004 202B     		cmp	r3, #32
 684 0006 3CD1     		bne	.L22
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 685              		.loc 1 1361 0
 686 0008 0029     		cmp	r1, #0
 687 000a 3CD0     		beq	.L23
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 688              		.loc 1 1361 0 is_stmt 0 discriminator 1
 689 000c 002A     		cmp	r2, #0
 690 000e 3CD0     		beq	.L24
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 691              		.loc 1 1369 0 is_stmt 1
 692 0010 8368     		ldr	r3, [r0, #8]
 693 0012 8024     		movs	r4, #128
 694 0014 6401     		lsls	r4, r4, #5
 695 0016 A342     		cmp	r3, r4
 696 0018 04D1     		bne	.L19
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 697              		.loc 1 1369 0 is_stmt 0 discriminator 1
 698 001a 0469     		ldr	r4, [r0, #16]
 699 001c 002C     		cmp	r4, #0
 700 001e 01D1     		bne	.L19
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 701              		.loc 1 1371 0 is_stmt 1
 702 0020 CC07     		lsls	r4, r1, #31
 703 0022 34D4     		bmi	.L25
 704              	.L19:
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 705              		.loc 1 1377 0
 706 0024 7424     		movs	r4, #116
 707 0026 045D     		ldrb	r4, [r0, r4]
 708 0028 012C     		cmp	r4, #1
ARM GAS  /tmp/ccQJ5CSb.s 			page 90


 709 002a 32D0     		beq	.L26
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 710              		.loc 1 1377 0 is_stmt 0 discriminator 2
 711 002c 0125     		movs	r5, #1
 712 002e 7424     		movs	r4, #116
 713 0030 0555     		strb	r5, [r0, r4]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 714              		.loc 1 1379 0 is_stmt 1 discriminator 2
 715 0032 C164     		str	r1, [r0, #76]
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 716              		.loc 1 1380 0 discriminator 2
 717 0034 5021     		movs	r1, #80
 718              	.LVL35:
 719 0036 4252     		strh	r2, [r0, r1]
 720              	.LVL36:
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR       = NULL;
 721              		.loc 1 1381 0 discriminator 2
 722 0038 0231     		adds	r1, r1, #2
 723 003a 4252     		strh	r2, [r0, r1]
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724              		.loc 1 1382 0 discriminator 2
 725 003c 0022     		movs	r2, #0
 726              	.LVL37:
 727 003e 8266     		str	r2, [r0, #104]
 728              	.LVL38:
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 729              		.loc 1 1384 0 discriminator 2
 730 0040 2E31     		adds	r1, r1, #46
 731 0042 4250     		str	r2, [r0, r1]
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 732              		.loc 1 1385 0 discriminator 2
 733 0044 2132     		adds	r2, r2, #33
 734 0046 8267     		str	r2, [r0, #120]
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 735              		.loc 1 1388 0 discriminator 2
 736 0048 8022     		movs	r2, #128
 737 004a 5201     		lsls	r2, r2, #5
 738 004c 9342     		cmp	r3, r2
 739 004e 05D1     		bne	.L20
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 740              		.loc 1 1388 0 is_stmt 0 discriminator 1
 741 0050 0369     		ldr	r3, [r0, #16]
 742 0052 002B     		cmp	r3, #0
 743 0054 02D1     		bne	.L20
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744              		.loc 1 1390 0 is_stmt 1
 745 0056 104B     		ldr	r3, .L27
 746 0058 8366     		str	r3, [r0, #104]
 747 005a 01E0     		b	.L21
 748              	.L20:
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 749              		.loc 1 1394 0
 750 005c 0F4B     		ldr	r3, .L27+4
 751 005e 8366     		str	r3, [r0, #104]
 752              	.L21:
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 753              		.loc 1 1397 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 91


 754 0060 0022     		movs	r2, #0
 755 0062 7423     		movs	r3, #116
 756 0064 C254     		strb	r2, [r0, r3]
 757              	.LBB620:
 758              	.LBB621:
 759              	.LBB622:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 760              		.loc 2 386 0
 761              		.syntax divided
 762              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 763 0066 EFF31081 		MRS r1, primask
 764              	@ 0 "" 2
 765              	.LVL39:
 766              		.thumb
 767              		.syntax unified
 768              	.LBE622:
 769              	.LBE621:
 770              	.LBB623:
 771              	.LBB624:
 772              		.loc 2 414 0
 773 006a 733B     		subs	r3, r3, #115
 774              		.syntax divided
 775              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 776 006c 83F31088 		MSR primask, r3
 777              	@ 0 "" 2
 778              	.LVL40:
 779              		.thumb
 780              		.syntax unified
 781              	.LBE624:
 782              	.LBE623:
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 783              		.loc 1 1400 0
 784 0070 0268     		ldr	r2, [r0]
 785 0072 1068     		ldr	r0, [r2]
 786              	.LVL41:
 787 0074 7F33     		adds	r3, r3, #127
 788 0076 0343     		orrs	r3, r0
 789 0078 1360     		str	r3, [r2]
 790              	.LBB625:
 791              	.LBB626:
 792              		.loc 2 414 0
 793              		.syntax divided
 794              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 795 007a 81F31088 		MSR primask, r1
 796              	@ 0 "" 2
 797              		.thumb
 798              		.syntax unified
 799              	.LBE626:
 800              	.LBE625:
 801              	.LBE620:
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 802              		.loc 1 1402 0
 803 007e 0020     		movs	r0, #0
 804 0080 08E0     		b	.L18
 805              	.LVL42:
 806              	.L22:
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccQJ5CSb.s 			page 92


 807              		.loc 1 1406 0
 808 0082 0220     		movs	r0, #2
 809              	.LVL43:
 810 0084 06E0     		b	.L18
 811              	.LVL44:
 812              	.L23:
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 813              		.loc 1 1363 0
 814 0086 0120     		movs	r0, #1
 815              	.LVL45:
 816 0088 04E0     		b	.L18
 817              	.LVL46:
 818              	.L24:
 819 008a 0120     		movs	r0, #1
 820              	.LVL47:
 821 008c 02E0     		b	.L18
 822              	.LVL48:
 823              	.L25:
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824              		.loc 1 1373 0
 825 008e 0120     		movs	r0, #1
 826              	.LVL49:
 827 0090 00E0     		b	.L18
 828              	.LVL50:
 829              	.L26:
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 830              		.loc 1 1377 0
 831 0092 0220     		movs	r0, #2
 832              	.LVL51:
 833              	.L18:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 834              		.loc 1 1408 0
 835              		@ sp needed
 836 0094 30BD     		pop	{r4, r5, pc}
 837              	.L28:
 838 0096 C046     		.align	2
 839              	.L27:
 840 0098 00000000 		.word	UART_TxISR_16BIT
 841 009c 00000000 		.word	UART_TxISR_8BIT
 842              		.cfi_endproc
 843              	.LFE48:
 845              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 846              		.align	2
 847              		.global	HAL_UART_Transmit_DMA
 848              		.code	16
 849              		.thumb_func
 851              	HAL_UART_Transmit_DMA:
 852              	.LFB50:
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 853              		.loc 1 1482 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              	.LVL52:
 858 0000 10B5     		push	{r4, lr}
 859              	.LCFI6:
 860              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQJ5CSb.s 			page 93


 861              		.cfi_offset 4, -8
 862              		.cfi_offset 14, -4
 863 0002 0400     		movs	r4, r0
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 864              		.loc 1 1484 0
 865 0004 806F     		ldr	r0, [r0, #120]
 866              	.LVL53:
 867 0006 2028     		cmp	r0, #32
 868 0008 54D1     		bne	.L33
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 869              		.loc 1 1486 0
 870 000a 0029     		cmp	r1, #0
 871 000c 54D0     		beq	.L34
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 872              		.loc 1 1486 0 is_stmt 0 discriminator 1
 873 000e 002A     		cmp	r2, #0
 874 0010 54D0     		beq	.L35
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 875              		.loc 1 1494 0 is_stmt 1
 876 0012 8023     		movs	r3, #128
 877 0014 5B01     		lsls	r3, r3, #5
 878 0016 A068     		ldr	r0, [r4, #8]
 879 0018 9842     		cmp	r0, r3
 880 001a 04D1     		bne	.L31
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 881              		.loc 1 1494 0 is_stmt 0 discriminator 1
 882 001c 2369     		ldr	r3, [r4, #16]
 883 001e 002B     		cmp	r3, #0
 884 0020 01D1     		bne	.L31
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 885              		.loc 1 1496 0 is_stmt 1
 886 0022 CB07     		lsls	r3, r1, #31
 887 0024 4CD4     		bmi	.L36
 888              	.L31:
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889              		.loc 1 1502 0
 890 0026 7423     		movs	r3, #116
 891 0028 E35C     		ldrb	r3, [r4, r3]
 892 002a 012B     		cmp	r3, #1
 893 002c 4AD0     		beq	.L37
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 894              		.loc 1 1502 0 is_stmt 0 discriminator 2
 895 002e 0120     		movs	r0, #1
 896 0030 7423     		movs	r3, #116
 897 0032 E054     		strb	r0, [r4, r3]
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 898              		.loc 1 1504 0 is_stmt 1 discriminator 2
 899 0034 E164     		str	r1, [r4, #76]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 900              		.loc 1 1505 0 discriminator 2
 901 0036 243B     		subs	r3, r3, #36
 902 0038 E252     		strh	r2, [r4, r3]
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 903              		.loc 1 1506 0 discriminator 2
 904 003a 0233     		adds	r3, r3, #2
 905 003c E252     		strh	r2, [r4, r3]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccQJ5CSb.s 			page 94


 906              		.loc 1 1508 0 discriminator 2
 907 003e 0021     		movs	r1, #0
 908              	.LVL54:
 909 0040 2E33     		adds	r3, r3, #46
 910 0042 E150     		str	r1, [r4, r3]
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 911              		.loc 1 1509 0 discriminator 2
 912 0044 5F3B     		subs	r3, r3, #95
 913 0046 A367     		str	r3, [r4, #120]
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 914              		.loc 1 1511 0 discriminator 2
 915 0048 E36E     		ldr	r3, [r4, #108]
 916 004a 002B     		cmp	r3, #0
 917 004c 1ED0     		beq	.L32
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 918              		.loc 1 1514 0
 919 004e 1E49     		ldr	r1, .L38
 920 0050 9962     		str	r1, [r3, #40]
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 921              		.loc 1 1517 0
 922 0052 E36E     		ldr	r3, [r4, #108]
 923 0054 1D49     		ldr	r1, .L38+4
 924 0056 D962     		str	r1, [r3, #44]
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 925              		.loc 1 1520 0
 926 0058 E36E     		ldr	r3, [r4, #108]
 927 005a 1D49     		ldr	r1, .L38+8
 928 005c 1963     		str	r1, [r3, #48]
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 929              		.loc 1 1523 0
 930 005e E36E     		ldr	r3, [r4, #108]
 931 0060 0021     		movs	r1, #0
 932 0062 5963     		str	r1, [r3, #52]
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 933              		.loc 1 1526 0
 934 0064 2168     		ldr	r1, [r4]
 935 0066 2831     		adds	r1, r1, #40
 936 0068 1300     		movs	r3, r2
 937 006a 0A00     		movs	r2, r1
 938              	.LVL55:
 939 006c E16C     		ldr	r1, [r4, #76]
 940 006e E06E     		ldr	r0, [r4, #108]
 941 0070 FFF7FEFF 		bl	HAL_DMA_Start_IT
 942              	.LVL56:
 943 0074 0028     		cmp	r0, #0
 944 0076 09D0     		beq	.L32
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945              		.loc 1 1529 0
 946 0078 1022     		movs	r2, #16
 947 007a 8023     		movs	r3, #128
 948 007c E250     		str	r2, [r4, r3]
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 949              		.loc 1 1531 0
 950 007e 0022     		movs	r2, #0
 951 0080 0C3B     		subs	r3, r3, #12
 952 0082 E254     		strb	r2, [r4, r3]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 95


 953              		.loc 1 1534 0
 954 0084 543B     		subs	r3, r3, #84
 955 0086 A367     		str	r3, [r4, #120]
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 956              		.loc 1 1536 0
 957 0088 0120     		movs	r0, #1
 958 008a 1CE0     		b	.L30
 959              	.L32:
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960              		.loc 1 1540 0
 961 008c 2368     		ldr	r3, [r4]
 962 008e 4022     		movs	r2, #64
 963 0090 1A62     		str	r2, [r3, #32]
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 964              		.loc 1 1542 0
 965 0092 0022     		movs	r2, #0
 966 0094 7423     		movs	r3, #116
 967 0096 E254     		strb	r2, [r4, r3]
 968              	.LBB627:
 969              	.LBB628:
 970              	.LBB629:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 971              		.loc 2 386 0
 972              		.syntax divided
 973              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 974 0098 EFF31081 		MRS r1, primask
 975              	@ 0 "" 2
 976              	.LVL57:
 977              		.thumb
 978              		.syntax unified
 979              	.LBE629:
 980              	.LBE628:
 981              	.LBB630:
 982              	.LBB631:
 983              		.loc 2 414 0
 984 009c 733B     		subs	r3, r3, #115
 985              		.syntax divided
 986              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 987 009e 83F31088 		MSR primask, r3
 988              	@ 0 "" 2
 989              	.LVL58:
 990              		.thumb
 991              		.syntax unified
 992              	.LBE631:
 993              	.LBE630:
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 994              		.loc 1 1546 0
 995 00a2 2268     		ldr	r2, [r4]
 996 00a4 9068     		ldr	r0, [r2, #8]
 997 00a6 7F33     		adds	r3, r3, #127
 998 00a8 0343     		orrs	r3, r0
 999 00aa 9360     		str	r3, [r2, #8]
 1000              	.LBB632:
 1001              	.LBB633:
 1002              		.loc 2 414 0
 1003              		.syntax divided
 1004              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccQJ5CSb.s 			page 96


 1005 00ac 81F31088 		MSR primask, r1
 1006              	@ 0 "" 2
 1007              		.thumb
 1008              		.syntax unified
 1009              	.LBE633:
 1010              	.LBE632:
 1011              	.LBE627:
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1012              		.loc 1 1548 0
 1013 00b0 0020     		movs	r0, #0
 1014 00b2 08E0     		b	.L30
 1015              	.LVL59:
 1016              	.L33:
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1017              		.loc 1 1552 0
 1018 00b4 0220     		movs	r0, #2
 1019 00b6 06E0     		b	.L30
 1020              	.L34:
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1021              		.loc 1 1488 0
 1022 00b8 0120     		movs	r0, #1
 1023 00ba 04E0     		b	.L30
 1024              	.L35:
 1025 00bc 0120     		movs	r0, #1
 1026 00be 02E0     		b	.L30
 1027              	.L36:
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1028              		.loc 1 1498 0
 1029 00c0 0120     		movs	r0, #1
 1030 00c2 00E0     		b	.L30
 1031              	.L37:
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1032              		.loc 1 1502 0
 1033 00c4 0220     		movs	r0, #2
 1034              	.LVL60:
 1035              	.L30:
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1036              		.loc 1 1554 0
 1037              		@ sp needed
 1038              	.LVL61:
 1039 00c6 10BD     		pop	{r4, pc}
 1040              	.L39:
 1041              		.align	2
 1042              	.L38:
 1043 00c8 00000000 		.word	UART_DMATransmitCplt
 1044 00cc 00000000 		.word	UART_DMATxHalfCplt
 1045 00d0 00000000 		.word	UART_DMAError
 1046              		.cfi_endproc
 1047              	.LFE50:
 1049              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1050              		.align	2
 1051              		.global	HAL_UART_DMAPause
 1052              		.code	16
 1053              		.thumb_func
 1055              	HAL_UART_DMAPause:
 1056              	.LFB52:
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
ARM GAS  /tmp/ccQJ5CSb.s 			page 97


 1057              		.loc 1 1620 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              	.LVL62:
 1062 0000 30B5     		push	{r4, r5, lr}
 1063              	.LCFI7:
 1064              		.cfi_def_cfa_offset 12
 1065              		.cfi_offset 4, -12
 1066              		.cfi_offset 5, -8
 1067              		.cfi_offset 14, -4
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1068              		.loc 1 1621 0
 1069 0002 816F     		ldr	r1, [r0, #120]
 1070              	.LVL63:
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1071              		.loc 1 1622 0
 1072 0004 C26F     		ldr	r2, [r0, #124]
 1073              	.LVL64:
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1074              		.loc 1 1624 0
 1075 0006 7423     		movs	r3, #116
 1076 0008 C35C     		ldrb	r3, [r0, r3]
 1077 000a 012B     		cmp	r3, #1
 1078 000c 42D0     		beq	.L44
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1079              		.loc 1 1624 0 is_stmt 0 discriminator 2
 1080 000e 0124     		movs	r4, #1
 1081 0010 7423     		movs	r3, #116
 1082 0012 C454     		strb	r4, [r0, r3]
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1083              		.loc 1 1626 0 is_stmt 1 discriminator 2
 1084 0014 0368     		ldr	r3, [r0]
 1085 0016 9B68     		ldr	r3, [r3, #8]
 1086 0018 1B06     		lsls	r3, r3, #24
 1087 001a 0DD5     		bpl	.L42
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1088              		.loc 1 1626 0 is_stmt 0 discriminator 1
 1089 001c 2129     		cmp	r1, #33
 1090 001e 0BD1     		bne	.L42
 1091              	.LBB634:
 1092              	.LBB635:
 1093              	.LBB636:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1094              		.loc 2 386 0 is_stmt 1
 1095              		.syntax divided
 1096              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1097 0020 EFF31084 		MRS r4, primask
 1098              	@ 0 "" 2
 1099              	.LVL65:
 1100              		.thumb
 1101              		.syntax unified
 1102              	.LBE636:
 1103              	.LBE635:
 1104              	.LBB637:
 1105              	.LBB638:
 1106              		.loc 2 414 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 98


 1107 0024 0123     		movs	r3, #1
 1108              		.syntax divided
 1109              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1110 0026 83F31088 		MSR primask, r3
 1111              	@ 0 "" 2
 1112              	.LVL66:
 1113              		.thumb
 1114              		.syntax unified
 1115              	.LBE638:
 1116              	.LBE637:
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1117              		.loc 1 1630 0
 1118 002a 0168     		ldr	r1, [r0]
 1119              	.LVL67:
 1120 002c 8B68     		ldr	r3, [r1, #8]
 1121 002e 8025     		movs	r5, #128
 1122 0030 AB43     		bics	r3, r5
 1123 0032 8B60     		str	r3, [r1, #8]
 1124              	.LBB639:
 1125              	.LBB640:
 1126              		.loc 2 414 0
 1127              		.syntax divided
 1128              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1129 0034 84F31088 		MSR primask, r4
 1130              	@ 0 "" 2
 1131              		.thumb
 1132              		.syntax unified
 1133              	.L42:
 1134              	.LBE640:
 1135              	.LBE639:
 1136              	.LBE634:
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1137              		.loc 1 1632 0
 1138 0038 0368     		ldr	r3, [r0]
 1139 003a 9B68     		ldr	r3, [r3, #8]
 1140 003c 5B06     		lsls	r3, r3, #25
 1141 003e 24D5     		bpl	.L43
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1142              		.loc 1 1632 0 is_stmt 0 discriminator 1
 1143 0040 222A     		cmp	r2, #34
 1144 0042 22D1     		bne	.L43
 1145              	.LBB641:
 1146              	.LBB642:
 1147              	.LBB643:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1148              		.loc 2 386 0 is_stmt 1
 1149              		.syntax divided
 1150              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1151 0044 EFF31084 		MRS r4, primask
 1152              	@ 0 "" 2
 1153              	.LVL68:
 1154              		.thumb
 1155              		.syntax unified
 1156              	.LBE643:
 1157              	.LBE642:
 1158              	.LBB644:
 1159              	.LBB645:
ARM GAS  /tmp/ccQJ5CSb.s 			page 99


 1160              		.loc 2 414 0
 1161 0048 0121     		movs	r1, #1
 1162              		.syntax divided
 1163              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1164 004a 81F31088 		MSR primask, r1
 1165              	@ 0 "" 2
 1166              	.LVL69:
 1167              		.thumb
 1168              		.syntax unified
 1169              	.LBE645:
 1170              	.LBE644:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1171              		.loc 1 1636 0
 1172 004e 0268     		ldr	r2, [r0]
 1173              	.LVL70:
 1174 0050 1568     		ldr	r5, [r2]
 1175 0052 114B     		ldr	r3, .L45
 1176 0054 2B40     		ands	r3, r5
 1177 0056 1360     		str	r3, [r2]
 1178              	.LBB646:
 1179              	.LBB647:
 1180              		.loc 2 414 0
 1181              		.syntax divided
 1182              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1183 0058 84F31088 		MSR primask, r4
 1184              	@ 0 "" 2
 1185              		.thumb
 1186              		.syntax unified
 1187              	.LBE647:
 1188              	.LBE646:
 1189              	.LBE641:
 1190              	.LBB648:
 1191              	.LBB649:
 1192              	.LBB650:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1193              		.loc 2 386 0
 1194              		.syntax divided
 1195              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1196 005c EFF31084 		MRS r4, primask
 1197              	@ 0 "" 2
 1198              	.LVL71:
 1199              		.thumb
 1200              		.syntax unified
 1201              	.LBE650:
 1202              	.LBE649:
 1203              	.LBB651:
 1204              	.LBB652:
 1205              		.loc 2 414 0
 1206 0060 0123     		movs	r3, #1
 1207              		.syntax divided
 1208              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1209 0062 83F31088 		MSR primask, r3
 1210              	@ 0 "" 2
 1211              	.LVL72:
 1212              		.thumb
 1213              		.syntax unified
 1214              	.LBE652:
ARM GAS  /tmp/ccQJ5CSb.s 			page 100


 1215              	.LBE651:
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1216              		.loc 1 1637 0
 1217 0066 0268     		ldr	r2, [r0]
 1218 0068 9368     		ldr	r3, [r2, #8]
 1219 006a 8B43     		bics	r3, r1
 1220 006c 9360     		str	r3, [r2, #8]
 1221              	.LBB653:
 1222              	.LBB654:
 1223              		.loc 2 414 0
 1224              		.syntax divided
 1225              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1226 006e 84F31088 		MSR primask, r4
 1227              	@ 0 "" 2
 1228              		.thumb
 1229              		.syntax unified
 1230              	.LBE654:
 1231              	.LBE653:
 1232              	.LBE648:
 1233              	.LBB655:
 1234              	.LBB656:
 1235              	.LBB657:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1236              		.loc 2 386 0
 1237              		.syntax divided
 1238              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1239 0072 EFF31081 		MRS r1, primask
 1240              	@ 0 "" 2
 1241              	.LVL73:
 1242              		.thumb
 1243              		.syntax unified
 1244              	.LBE657:
 1245              	.LBE656:
 1246              	.LBB658:
 1247              	.LBB659:
 1248              		.loc 2 414 0
 1249 0076 0123     		movs	r3, #1
 1250              		.syntax divided
 1251              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1252 0078 83F31088 		MSR primask, r3
 1253              	@ 0 "" 2
 1254              	.LVL74:
 1255              		.thumb
 1256              		.syntax unified
 1257              	.LBE659:
 1258              	.LBE658:
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1259              		.loc 1 1640 0
 1260 007c 0268     		ldr	r2, [r0]
 1261 007e 9368     		ldr	r3, [r2, #8]
 1262 0080 4024     		movs	r4, #64
 1263 0082 A343     		bics	r3, r4
 1264 0084 9360     		str	r3, [r2, #8]
 1265              	.LBB660:
 1266              	.LBB661:
 1267              		.loc 2 414 0
 1268              		.syntax divided
ARM GAS  /tmp/ccQJ5CSb.s 			page 101


 1269              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1270 0086 81F31088 		MSR primask, r1
 1271              	@ 0 "" 2
 1272              		.thumb
 1273              		.syntax unified
 1274              	.L43:
 1275              	.LBE661:
 1276              	.LBE660:
 1277              	.LBE655:
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1278              		.loc 1 1643 0
 1279 008a 0022     		movs	r2, #0
 1280 008c 7423     		movs	r3, #116
 1281 008e C254     		strb	r2, [r0, r3]
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1282              		.loc 1 1645 0
 1283 0090 0020     		movs	r0, #0
 1284              	.LVL75:
 1285 0092 00E0     		b	.L41
 1286              	.LVL76:
 1287              	.L44:
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1288              		.loc 1 1624 0
 1289 0094 0220     		movs	r0, #2
 1290              	.LVL77:
 1291              	.L41:
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1292              		.loc 1 1646 0
 1293              		@ sp needed
 1294 0096 30BD     		pop	{r4, r5, pc}
 1295              	.L46:
 1296              		.align	2
 1297              	.L45:
 1298 0098 FFFEFFFF 		.word	-257
 1299              		.cfi_endproc
 1300              	.LFE52:
 1302              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1303              		.align	2
 1304              		.global	HAL_UART_DMAResume
 1305              		.code	16
 1306              		.thumb_func
 1308              	HAL_UART_DMAResume:
 1309              	.LFB53:
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 1310              		.loc 1 1654 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              	.LVL78:
 1315 0000 30B5     		push	{r4, r5, lr}
 1316              	.LCFI8:
 1317              		.cfi_def_cfa_offset 12
 1318              		.cfi_offset 4, -12
 1319              		.cfi_offset 5, -8
 1320              		.cfi_offset 14, -4
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1321              		.loc 1 1655 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 102


 1322 0002 7423     		movs	r3, #116
 1323 0004 C35C     		ldrb	r3, [r0, r3]
 1324 0006 012B     		cmp	r3, #1
 1325 0008 40D0     		beq	.L51
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1326              		.loc 1 1655 0 is_stmt 0 discriminator 2
 1327 000a 0122     		movs	r2, #1
 1328 000c 7423     		movs	r3, #116
 1329 000e C254     		strb	r2, [r0, r3]
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1330              		.loc 1 1657 0 is_stmt 1 discriminator 2
 1331 0010 836F     		ldr	r3, [r0, #120]
 1332 0012 212B     		cmp	r3, #33
 1333 0014 0BD1     		bne	.L49
 1334              	.LBB662:
 1335              	.LBB663:
 1336              	.LBB664:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1337              		.loc 2 386 0
 1338              		.syntax divided
 1339              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1340 0016 EFF31081 		MRS r1, primask
 1341              	@ 0 "" 2
 1342              	.LVL79:
 1343              		.thumb
 1344              		.syntax unified
 1345              	.LBE664:
 1346              	.LBE663:
 1347              	.LBB665:
 1348              	.LBB666:
 1349              		.loc 2 414 0
 1350 001a 203B     		subs	r3, r3, #32
 1351              		.syntax divided
 1352              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1353 001c 83F31088 		MSR primask, r3
 1354              	@ 0 "" 2
 1355              	.LVL80:
 1356              		.thumb
 1357              		.syntax unified
 1358              	.LBE666:
 1359              	.LBE665:
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1360              		.loc 1 1660 0
 1361 0020 0268     		ldr	r2, [r0]
 1362 0022 9468     		ldr	r4, [r2, #8]
 1363 0024 7F33     		adds	r3, r3, #127
 1364 0026 2343     		orrs	r3, r4
 1365 0028 9360     		str	r3, [r2, #8]
 1366              	.LBB667:
 1367              	.LBB668:
 1368              		.loc 2 414 0
 1369              		.syntax divided
 1370              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1371 002a 81F31088 		MSR primask, r1
 1372              	@ 0 "" 2
 1373              		.thumb
 1374              		.syntax unified
ARM GAS  /tmp/ccQJ5CSb.s 			page 103


 1375              	.L49:
 1376              	.LBE668:
 1377              	.LBE667:
 1378              	.LBE662:
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1379              		.loc 1 1662 0
 1380 002e C36F     		ldr	r3, [r0, #124]
 1381 0030 222B     		cmp	r3, #34
 1382 0032 26D1     		bne	.L50
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1383              		.loc 1 1665 0
 1384 0034 0368     		ldr	r3, [r0]
 1385 0036 0822     		movs	r2, #8
 1386 0038 1A62     		str	r2, [r3, #32]
 1387              	.LBB669:
 1388              	.LBB670:
 1389              	.LBB671:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1390              		.loc 2 386 0
 1391              		.syntax divided
 1392              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1393 003a EFF31084 		MRS r4, primask
 1394              	@ 0 "" 2
 1395              	.LVL81:
 1396              		.thumb
 1397              		.syntax unified
 1398              	.LBE671:
 1399              	.LBE670:
 1400              	.LBB672:
 1401              	.LBB673:
 1402              		.loc 2 414 0
 1403 003e 0123     		movs	r3, #1
 1404              		.syntax divided
 1405              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1406 0040 83F31088 		MSR primask, r3
 1407              	@ 0 "" 2
 1408              	.LVL82:
 1409              		.thumb
 1410              		.syntax unified
 1411              	.LBE673:
 1412              	.LBE672:
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1413              		.loc 1 1668 0
 1414 0044 0168     		ldr	r1, [r0]
 1415 0046 0A68     		ldr	r2, [r1]
 1416 0048 8025     		movs	r5, #128
 1417 004a 6D00     		lsls	r5, r5, #1
 1418 004c 2A43     		orrs	r2, r5
 1419 004e 0A60     		str	r2, [r1]
 1420              	.LBB674:
 1421              	.LBB675:
 1422              		.loc 2 414 0
 1423              		.syntax divided
 1424              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1425 0050 84F31088 		MSR primask, r4
 1426              	@ 0 "" 2
 1427              		.thumb
ARM GAS  /tmp/ccQJ5CSb.s 			page 104


 1428              		.syntax unified
 1429              	.LBE675:
 1430              	.LBE674:
 1431              	.LBE669:
 1432              	.LBB676:
 1433              	.LBB677:
 1434              	.LBB678:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1435              		.loc 2 386 0
 1436              		.syntax divided
 1437              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1438 0054 EFF31081 		MRS r1, primask
 1439              	@ 0 "" 2
 1440              	.LVL83:
 1441              		.thumb
 1442              		.syntax unified
 1443              	.LBE678:
 1444              	.LBE677:
 1445              	.LBB679:
 1446              	.LBB680:
 1447              		.loc 2 414 0
 1448 0058 0122     		movs	r2, #1
 1449              		.syntax divided
 1450              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1451 005a 82F31088 		MSR primask, r2
 1452              	@ 0 "" 2
 1453              	.LVL84:
 1454              		.thumb
 1455              		.syntax unified
 1456              	.LBE680:
 1457              	.LBE679:
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1458              		.loc 1 1669 0
 1459 005e 0268     		ldr	r2, [r0]
 1460 0060 9468     		ldr	r4, [r2, #8]
 1461 0062 2343     		orrs	r3, r4
 1462 0064 9360     		str	r3, [r2, #8]
 1463              	.LBB681:
 1464              	.LBB682:
 1465              		.loc 2 414 0
 1466              		.syntax divided
 1467              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1468 0066 81F31088 		MSR primask, r1
 1469              	@ 0 "" 2
 1470              		.thumb
 1471              		.syntax unified
 1472              	.LBE682:
 1473              	.LBE681:
 1474              	.LBE676:
 1475              	.LBB683:
 1476              	.LBB684:
 1477              	.LBB685:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1478              		.loc 2 386 0
 1479              		.syntax divided
 1480              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1481 006a EFF31081 		MRS r1, primask
ARM GAS  /tmp/ccQJ5CSb.s 			page 105


 1482              	@ 0 "" 2
 1483              	.LVL85:
 1484              		.thumb
 1485              		.syntax unified
 1486              	.LBE685:
 1487              	.LBE684:
 1488              	.LBB686:
 1489              	.LBB687:
 1490              		.loc 2 414 0
 1491 006e 0123     		movs	r3, #1
 1492              		.syntax divided
 1493              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1494 0070 83F31088 		MSR primask, r3
 1495              	@ 0 "" 2
 1496              	.LVL86:
 1497              		.thumb
 1498              		.syntax unified
 1499              	.LBE687:
 1500              	.LBE686:
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1501              		.loc 1 1672 0
 1502 0074 0268     		ldr	r2, [r0]
 1503 0076 9468     		ldr	r4, [r2, #8]
 1504 0078 3F33     		adds	r3, r3, #63
 1505 007a 2343     		orrs	r3, r4
 1506 007c 9360     		str	r3, [r2, #8]
 1507              	.LBB688:
 1508              	.LBB689:
 1509              		.loc 2 414 0
 1510              		.syntax divided
 1511              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1512 007e 81F31088 		MSR primask, r1
 1513              	@ 0 "" 2
 1514              		.thumb
 1515              		.syntax unified
 1516              	.L50:
 1517              	.LBE689:
 1518              	.LBE688:
 1519              	.LBE683:
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1520              		.loc 1 1675 0
 1521 0082 0022     		movs	r2, #0
 1522 0084 7423     		movs	r3, #116
 1523 0086 C254     		strb	r2, [r0, r3]
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1524              		.loc 1 1677 0
 1525 0088 0020     		movs	r0, #0
 1526              	.LVL87:
 1527 008a 00E0     		b	.L48
 1528              	.LVL88:
 1529              	.L51:
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1530              		.loc 1 1655 0
 1531 008c 0220     		movs	r0, #2
 1532              	.LVL89:
 1533              	.L48:
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 106


 1534              		.loc 1 1678 0
 1535              		@ sp needed
 1536 008e 30BD     		pop	{r4, r5, pc}
 1537              		.cfi_endproc
 1538              	.LFE53:
 1540              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1541              		.align	2
 1542              		.global	HAL_UART_DMAStop
 1543              		.code	16
 1544              		.thumb_func
 1546              	HAL_UART_DMAStop:
 1547              	.LFB54:
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1548              		.loc 1 1686 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              	.LVL90:
 1553 0000 70B5     		push	{r4, r5, r6, lr}
 1554              	.LCFI9:
 1555              		.cfi_def_cfa_offset 16
 1556              		.cfi_offset 4, -16
 1557              		.cfi_offset 5, -12
 1558              		.cfi_offset 6, -8
 1559              		.cfi_offset 14, -4
 1560 0002 0400     		movs	r4, r0
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1561              		.loc 1 1694 0
 1562 0004 826F     		ldr	r2, [r0, #120]
 1563              	.LVL91:
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1564              		.loc 1 1695 0
 1565 0006 C56F     		ldr	r5, [r0, #124]
 1566              	.LVL92:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1567              		.loc 1 1698 0
 1568 0008 0368     		ldr	r3, [r0]
 1569 000a 9B68     		ldr	r3, [r3, #8]
 1570 000c 1B06     		lsls	r3, r3, #24
 1571 000e 21D5     		bpl	.L53
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1572              		.loc 1 1698 0 is_stmt 0 discriminator 1
 1573 0010 212A     		cmp	r2, #33
 1574 0012 1FD1     		bne	.L53
 1575              	.LBB690:
 1576              	.LBB691:
 1577              	.LBB692:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1578              		.loc 2 386 0 is_stmt 1
 1579              		.syntax divided
 1580              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1581 0014 EFF31081 		MRS r1, primask
 1582              	@ 0 "" 2
 1583              	.LVL93:
 1584              		.thumb
 1585              		.syntax unified
 1586              	.LBE692:
ARM GAS  /tmp/ccQJ5CSb.s 			page 107


 1587              	.LBE691:
 1588              	.LBB693:
 1589              	.LBB694:
 1590              		.loc 2 414 0
 1591 0018 0123     		movs	r3, #1
 1592              		.syntax divided
 1593              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1594 001a 83F31088 		MSR primask, r3
 1595              	@ 0 "" 2
 1596              	.LVL94:
 1597              		.thumb
 1598              		.syntax unified
 1599              	.LBE694:
 1600              	.LBE693:
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1601              		.loc 1 1701 0
 1602 001e 0268     		ldr	r2, [r0]
 1603              	.LVL95:
 1604 0020 9368     		ldr	r3, [r2, #8]
 1605 0022 8020     		movs	r0, #128
 1606              	.LVL96:
 1607 0024 8343     		bics	r3, r0
 1608 0026 9360     		str	r3, [r2, #8]
 1609              	.LBB695:
 1610              	.LBB696:
 1611              		.loc 2 414 0
 1612              		.syntax divided
 1613              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1614 0028 81F31088 		MSR primask, r1
 1615              	@ 0 "" 2
 1616              		.thumb
 1617              		.syntax unified
 1618              	.LBE696:
 1619              	.LBE695:
 1620              	.LBE690:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1621              		.loc 1 1704 0
 1622 002c E06E     		ldr	r0, [r4, #108]
 1623 002e 0028     		cmp	r0, #0
 1624 0030 0DD0     		beq	.L54
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1625              		.loc 1 1706 0
 1626 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1627              	.LVL97:
 1628 0036 0028     		cmp	r0, #0
 1629 0038 09D0     		beq	.L54
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1630              		.loc 1 1708 0
 1631 003a E06E     		ldr	r0, [r4, #108]
 1632 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1633              	.LVL98:
 1634 0040 2028     		cmp	r0, #32
 1635 0042 04D1     		bne	.L54
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1636              		.loc 1 1711 0
 1637 0044 1022     		movs	r2, #16
 1638 0046 8023     		movs	r3, #128
ARM GAS  /tmp/ccQJ5CSb.s 			page 108


 1639 0048 E250     		str	r2, [r4, r3]
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1640              		.loc 1 1713 0
 1641 004a 1D38     		subs	r0, r0, #29
 1642 004c 2DE0     		b	.L55
 1643              	.L54:
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1644              		.loc 1 1718 0
 1645 004e 2000     		movs	r0, r4
 1646 0050 FFF7FEFF 		bl	UART_EndTxTransfer
 1647              	.LVL99:
 1648              	.L53:
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1649              		.loc 1 1722 0
 1650 0054 2368     		ldr	r3, [r4]
 1651 0056 9B68     		ldr	r3, [r3, #8]
 1652 0058 5B06     		lsls	r3, r3, #25
 1653 005a 23D5     		bpl	.L57
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1654              		.loc 1 1722 0 is_stmt 0 discriminator 1
 1655 005c 222D     		cmp	r5, #34
 1656 005e 23D1     		bne	.L58
 1657              	.LBB697:
 1658              	.LBB698:
 1659              	.LBB699:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1660              		.loc 2 386 0 is_stmt 1
 1661              		.syntax divided
 1662              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1663 0060 EFF31081 		MRS r1, primask
 1664              	@ 0 "" 2
 1665              	.LVL100:
 1666              		.thumb
 1667              		.syntax unified
 1668              	.LBE699:
 1669              	.LBE698:
 1670              	.LBB700:
 1671              	.LBB701:
 1672              		.loc 2 414 0
 1673 0064 0123     		movs	r3, #1
 1674              		.syntax divided
 1675              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1676 0066 83F31088 		MSR primask, r3
 1677              	@ 0 "" 2
 1678              	.LVL101:
 1679              		.thumb
 1680              		.syntax unified
 1681              	.LBE701:
 1682              	.LBE700:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1683              		.loc 1 1725 0
 1684 006a 2268     		ldr	r2, [r4]
 1685 006c 9368     		ldr	r3, [r2, #8]
 1686 006e 4020     		movs	r0, #64
 1687 0070 8343     		bics	r3, r0
 1688 0072 9360     		str	r3, [r2, #8]
 1689              	.LBB702:
ARM GAS  /tmp/ccQJ5CSb.s 			page 109


 1690              	.LBB703:
 1691              		.loc 2 414 0
 1692              		.syntax divided
 1693              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1694 0074 81F31088 		MSR primask, r1
 1695              	@ 0 "" 2
 1696              		.thumb
 1697              		.syntax unified
 1698              	.LBE703:
 1699              	.LBE702:
 1700              	.LBE697:
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1701              		.loc 1 1728 0
 1702 0078 206F     		ldr	r0, [r4, #112]
 1703 007a 0028     		cmp	r0, #0
 1704 007c 0DD0     		beq	.L56
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1705              		.loc 1 1730 0
 1706 007e FFF7FEFF 		bl	HAL_DMA_Abort
 1707              	.LVL102:
 1708 0082 0028     		cmp	r0, #0
 1709 0084 09D0     		beq	.L56
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1710              		.loc 1 1732 0
 1711 0086 206F     		ldr	r0, [r4, #112]
 1712 0088 FFF7FEFF 		bl	HAL_DMA_GetError
 1713              	.LVL103:
 1714 008c 2028     		cmp	r0, #32
 1715 008e 04D1     		bne	.L56
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1716              		.loc 1 1735 0
 1717 0090 1022     		movs	r2, #16
 1718 0092 8023     		movs	r3, #128
 1719 0094 E250     		str	r2, [r4, r3]
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1720              		.loc 1 1737 0
 1721 0096 1D38     		subs	r0, r0, #29
 1722 0098 07E0     		b	.L55
 1723              	.L56:
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1724              		.loc 1 1742 0
 1725 009a 2000     		movs	r0, r4
 1726 009c FFF7FEFF 		bl	UART_EndRxTransfer
 1727              	.LVL104:
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1728              		.loc 1 1745 0
 1729 00a0 0020     		movs	r0, #0
 1730 00a2 02E0     		b	.L55
 1731              	.L57:
 1732 00a4 0020     		movs	r0, #0
 1733 00a6 00E0     		b	.L55
 1734              	.L58:
 1735 00a8 0020     		movs	r0, #0
 1736              	.L55:
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1737              		.loc 1 1746 0
 1738              		@ sp needed
ARM GAS  /tmp/ccQJ5CSb.s 			page 110


 1739              	.LVL105:
 1740              	.LVL106:
 1741 00aa 70BD     		pop	{r4, r5, r6, pc}
 1742              		.cfi_endproc
 1743              	.LFE54:
 1745              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1746              		.align	2
 1747              		.global	HAL_UART_Abort
 1748              		.code	16
 1749              		.thumb_func
 1751              	HAL_UART_Abort:
 1752              	.LFB55:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1753              		.loc 1 1761 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 0
 1756              		@ frame_needed = 0, uses_anonymous_args = 0
 1757              	.LVL107:
 1758 0000 70B5     		push	{r4, r5, r6, lr}
 1759              	.LCFI10:
 1760              		.cfi_def_cfa_offset 16
 1761              		.cfi_offset 4, -16
 1762              		.cfi_offset 5, -12
 1763              		.cfi_offset 6, -8
 1764              		.cfi_offset 14, -4
 1765 0002 0400     		movs	r4, r0
 1766              	.LBB704:
 1767              	.LBB705:
 1768              	.LBB706:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1769              		.loc 2 386 0
 1770              		.syntax divided
 1771              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1772 0004 EFF31080 		MRS r0, primask
 1773              	@ 0 "" 2
 1774              	.LVL108:
 1775              		.thumb
 1776              		.syntax unified
 1777              	.LBE706:
 1778              	.LBE705:
 1779              	.LBB707:
 1780              	.LBB708:
 1781              		.loc 2 414 0
 1782 0008 0121     		movs	r1, #1
 1783              		.syntax divided
 1784              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1785 000a 81F31088 		MSR primask, r1
 1786              	@ 0 "" 2
 1787              	.LVL109:
 1788              		.thumb
 1789              		.syntax unified
 1790              	.LBE708:
 1791              	.LBE707:
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1792              		.loc 1 1763 0
 1793 000e 2268     		ldr	r2, [r4]
 1794 0010 1568     		ldr	r5, [r2]
ARM GAS  /tmp/ccQJ5CSb.s 			page 111


 1795 0012 3D4B     		ldr	r3, .L64
 1796 0014 2B40     		ands	r3, r5
 1797 0016 1360     		str	r3, [r2]
 1798              	.LBB709:
 1799              	.LBB710:
 1800              		.loc 2 414 0
 1801              		.syntax divided
 1802              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1803 0018 80F31088 		MSR primask, r0
 1804              	@ 0 "" 2
 1805              		.thumb
 1806              		.syntax unified
 1807              	.LBE710:
 1808              	.LBE709:
 1809              	.LBE704:
 1810              	.LBB711:
 1811              	.LBB712:
 1812              	.LBB713:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1813              		.loc 2 386 0
 1814              		.syntax divided
 1815              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1816 001c EFF31080 		MRS r0, primask
 1817              	@ 0 "" 2
 1818              	.LVL110:
 1819              		.thumb
 1820              		.syntax unified
 1821              	.LBE713:
 1822              	.LBE712:
 1823              	.LBB714:
 1824              	.LBB715:
 1825              		.loc 2 414 0
 1826 0020 0123     		movs	r3, #1
 1827              		.syntax divided
 1828              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1829 0022 83F31088 		MSR primask, r3
 1830              	@ 0 "" 2
 1831              	.LVL111:
 1832              		.thumb
 1833              		.syntax unified
 1834              	.LBE715:
 1835              	.LBE714:
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1836              		.loc 1 1764 0
 1837 0026 2268     		ldr	r2, [r4]
 1838 0028 9368     		ldr	r3, [r2, #8]
 1839 002a 8B43     		bics	r3, r1
 1840 002c 9360     		str	r3, [r2, #8]
 1841              	.LBB716:
 1842              	.LBB717:
 1843              		.loc 2 414 0
 1844              		.syntax divided
 1845              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1846 002e 80F31088 		MSR primask, r0
 1847              	@ 0 "" 2
 1848              		.thumb
 1849              		.syntax unified
ARM GAS  /tmp/ccQJ5CSb.s 			page 112


 1850              	.LBE717:
 1851              	.LBE716:
 1852              	.LBE711:
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1853              		.loc 1 1767 0
 1854 0032 236E     		ldr	r3, [r4, #96]
 1855 0034 012B     		cmp	r3, #1
 1856 0036 0AD1     		bne	.L60
 1857              	.LBB718:
 1858              	.LBB719:
 1859              	.LBB720:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1860              		.loc 2 386 0
 1861              		.syntax divided
 1862              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1863 0038 EFF31081 		MRS r1, primask
 1864              	@ 0 "" 2
 1865              	.LVL112:
 1866              		.thumb
 1867              		.syntax unified
 1868              	.LBE720:
 1869              	.LBE719:
 1870              	.LBB721:
 1871              	.LBB722:
 1872              		.loc 2 414 0
 1873              		.syntax divided
 1874              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1875 003c 83F31088 		MSR primask, r3
 1876              	@ 0 "" 2
 1877              	.LVL113:
 1878              		.thumb
 1879              		.syntax unified
 1880              	.LBE722:
 1881              	.LBE721:
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1882              		.loc 1 1769 0
 1883 0040 2268     		ldr	r2, [r4]
 1884 0042 1368     		ldr	r3, [r2]
 1885 0044 1020     		movs	r0, #16
 1886 0046 8343     		bics	r3, r0
 1887 0048 1360     		str	r3, [r2]
 1888              	.LBB723:
 1889              	.LBB724:
 1890              		.loc 2 414 0
 1891              		.syntax divided
 1892              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1893 004a 81F31088 		MSR primask, r1
 1894              	@ 0 "" 2
 1895              		.thumb
 1896              		.syntax unified
 1897              	.L60:
 1898              	.LBE724:
 1899              	.LBE723:
 1900              	.LBE718:
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1901              		.loc 1 1773 0
 1902 004e 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccQJ5CSb.s 			page 113


 1903 0050 9B68     		ldr	r3, [r3, #8]
 1904 0052 1B06     		lsls	r3, r3, #24
 1905 0054 1FD5     		bpl	.L61
 1906              	.LBB725:
 1907              	.LBB726:
 1908              	.LBB727:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1909              		.loc 2 386 0
 1910              		.syntax divided
 1911              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1912 0056 EFF31081 		MRS r1, primask
 1913              	@ 0 "" 2
 1914              	.LVL114:
 1915              		.thumb
 1916              		.syntax unified
 1917              	.LBE727:
 1918              	.LBE726:
 1919              	.LBB728:
 1920              	.LBB729:
 1921              		.loc 2 414 0
 1922 005a 0123     		movs	r3, #1
 1923              		.syntax divided
 1924              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1925 005c 83F31088 		MSR primask, r3
 1926              	@ 0 "" 2
 1927              	.LVL115:
 1928              		.thumb
 1929              		.syntax unified
 1930              	.LBE729:
 1931              	.LBE728:
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1932              		.loc 1 1775 0
 1933 0060 2268     		ldr	r2, [r4]
 1934 0062 9368     		ldr	r3, [r2, #8]
 1935 0064 8020     		movs	r0, #128
 1936 0066 8343     		bics	r3, r0
 1937 0068 9360     		str	r3, [r2, #8]
 1938              	.LBB730:
 1939              	.LBB731:
 1940              		.loc 2 414 0
 1941              		.syntax divided
 1942              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1943 006a 81F31088 		MSR primask, r1
 1944              	@ 0 "" 2
 1945              		.thumb
 1946              		.syntax unified
 1947              	.LBE731:
 1948              	.LBE730:
 1949              	.LBE725:
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1950              		.loc 1 1778 0
 1951 006e E36E     		ldr	r3, [r4, #108]
 1952 0070 002B     		cmp	r3, #0
 1953 0072 10D0     		beq	.L61
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1954              		.loc 1 1782 0
 1955 0074 0022     		movs	r2, #0
ARM GAS  /tmp/ccQJ5CSb.s 			page 114


 1956 0076 5A63     		str	r2, [r3, #52]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1957              		.loc 1 1784 0
 1958 0078 E06E     		ldr	r0, [r4, #108]
 1959 007a FFF7FEFF 		bl	HAL_DMA_Abort
 1960              	.LVL116:
 1961 007e 0028     		cmp	r0, #0
 1962 0080 09D0     		beq	.L61
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1963              		.loc 1 1786 0
 1964 0082 E06E     		ldr	r0, [r4, #108]
 1965 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 1966              	.LVL117:
 1967 0088 2028     		cmp	r0, #32
 1968 008a 04D1     		bne	.L61
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1969              		.loc 1 1789 0
 1970 008c 1022     		movs	r2, #16
 1971 008e 8023     		movs	r3, #128
 1972 0090 E250     		str	r2, [r4, r3]
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1973              		.loc 1 1791 0
 1974 0092 1D38     		subs	r0, r0, #29
 1975 0094 37E0     		b	.L62
 1976              	.L61:
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1977              		.loc 1 1798 0
 1978 0096 2368     		ldr	r3, [r4]
 1979 0098 9B68     		ldr	r3, [r3, #8]
 1980 009a 5B06     		lsls	r3, r3, #25
 1981 009c 1FD5     		bpl	.L63
 1982              	.LBB732:
 1983              	.LBB733:
 1984              	.LBB734:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1985              		.loc 2 386 0
 1986              		.syntax divided
 1987              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1988 009e EFF31081 		MRS r1, primask
 1989              	@ 0 "" 2
 1990              	.LVL118:
 1991              		.thumb
 1992              		.syntax unified
 1993              	.LBE734:
 1994              	.LBE733:
 1995              	.LBB735:
 1996              	.LBB736:
 1997              		.loc 2 414 0
 1998 00a2 0123     		movs	r3, #1
 1999              		.syntax divided
 2000              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2001 00a4 83F31088 		MSR primask, r3
 2002              	@ 0 "" 2
 2003              	.LVL119:
 2004              		.thumb
 2005              		.syntax unified
 2006              	.LBE736:
ARM GAS  /tmp/ccQJ5CSb.s 			page 115


 2007              	.LBE735:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2008              		.loc 1 1800 0
 2009 00a8 2268     		ldr	r2, [r4]
 2010 00aa 9368     		ldr	r3, [r2, #8]
 2011 00ac 4020     		movs	r0, #64
 2012 00ae 8343     		bics	r3, r0
 2013 00b0 9360     		str	r3, [r2, #8]
 2014              	.LBB737:
 2015              	.LBB738:
 2016              		.loc 2 414 0
 2017              		.syntax divided
 2018              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2019 00b2 81F31088 		MSR primask, r1
 2020              	@ 0 "" 2
 2021              		.thumb
 2022              		.syntax unified
 2023              	.LBE738:
 2024              	.LBE737:
 2025              	.LBE732:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2026              		.loc 1 1803 0
 2027 00b6 236F     		ldr	r3, [r4, #112]
 2028 00b8 002B     		cmp	r3, #0
 2029 00ba 10D0     		beq	.L63
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2030              		.loc 1 1807 0
 2031 00bc 0022     		movs	r2, #0
 2032 00be 5A63     		str	r2, [r3, #52]
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2033              		.loc 1 1809 0
 2034 00c0 206F     		ldr	r0, [r4, #112]
 2035 00c2 FFF7FEFF 		bl	HAL_DMA_Abort
 2036              	.LVL120:
 2037 00c6 0028     		cmp	r0, #0
 2038 00c8 09D0     		beq	.L63
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 2039              		.loc 1 1811 0
 2040 00ca 206F     		ldr	r0, [r4, #112]
 2041 00cc FFF7FEFF 		bl	HAL_DMA_GetError
 2042              	.LVL121:
 2043 00d0 2028     		cmp	r0, #32
 2044 00d2 04D1     		bne	.L63
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2045              		.loc 1 1814 0
 2046 00d4 1022     		movs	r2, #16
 2047 00d6 8023     		movs	r3, #128
 2048 00d8 E250     		str	r2, [r4, r3]
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 2049              		.loc 1 1816 0
 2050 00da 1D38     		subs	r0, r0, #29
 2051 00dc 13E0     		b	.L62
 2052              	.L63:
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2053              		.loc 1 1823 0
 2054 00de 0023     		movs	r3, #0
 2055 00e0 5222     		movs	r2, #82
ARM GAS  /tmp/ccQJ5CSb.s 			page 116


 2056 00e2 A352     		strh	r3, [r4, r2]
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2057              		.loc 1 1824 0
 2058 00e4 0832     		adds	r2, r2, #8
 2059 00e6 A352     		strh	r3, [r4, r2]
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2060              		.loc 1 1827 0
 2061 00e8 2268     		ldr	r2, [r4]
 2062 00ea 0F21     		movs	r1, #15
 2063 00ec 1162     		str	r1, [r2, #32]
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2064              		.loc 1 1831 0
 2065 00ee 2168     		ldr	r1, [r4]
 2066 00f0 8869     		ldr	r0, [r1, #24]
 2067 00f2 0822     		movs	r2, #8
 2068 00f4 0243     		orrs	r2, r0
 2069 00f6 8A61     		str	r2, [r1, #24]
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2070              		.loc 1 1834 0
 2071 00f8 2022     		movs	r2, #32
 2072 00fa A267     		str	r2, [r4, #120]
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2073              		.loc 1 1835 0
 2074 00fc E267     		str	r2, [r4, #124]
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2075              		.loc 1 1836 0
 2076 00fe 2366     		str	r3, [r4, #96]
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2077              		.loc 1 1838 0
 2078 0100 6032     		adds	r2, r2, #96
 2079 0102 A350     		str	r3, [r4, r2]
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2080              		.loc 1 1840 0
 2081 0104 0020     		movs	r0, #0
 2082              	.L62:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2083              		.loc 1 1841 0
 2084              		@ sp needed
 2085              	.LVL122:
 2086 0106 70BD     		pop	{r4, r5, r6, pc}
 2087              	.L65:
 2088              		.align	2
 2089              	.L64:
 2090 0108 1FFEFFFF 		.word	-481
 2091              		.cfi_endproc
 2092              	.LFE55:
 2094              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2095              		.align	2
 2096              		.global	HAL_UART_AbortTransmit
 2097              		.code	16
 2098              		.thumb_func
 2100              	HAL_UART_AbortTransmit:
 2101              	.LFB56:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2102              		.loc 1 1856 0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 117


 2105              		@ frame_needed = 0, uses_anonymous_args = 0
 2106              	.LVL123:
 2107 0000 10B5     		push	{r4, lr}
 2108              	.LCFI11:
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 4, -8
 2111              		.cfi_offset 14, -4
 2112 0002 0400     		movs	r4, r0
 2113              	.LBB739:
 2114              	.LBB740:
 2115              	.LBB741:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2116              		.loc 2 386 0
 2117              		.syntax divided
 2118              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2119 0004 EFF31081 		MRS r1, primask
 2120              	@ 0 "" 2
 2121              	.LVL124:
 2122              		.thumb
 2123              		.syntax unified
 2124              	.LBE741:
 2125              	.LBE740:
 2126              	.LBB742:
 2127              	.LBB743:
 2128              		.loc 2 414 0
 2129 0008 0123     		movs	r3, #1
 2130              		.syntax divided
 2131              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2132 000a 83F31088 		MSR primask, r3
 2133              	@ 0 "" 2
 2134              	.LVL125:
 2135              		.thumb
 2136              		.syntax unified
 2137              	.LBE743:
 2138              	.LBE742:
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2139              		.loc 1 1858 0
 2140 000e 0268     		ldr	r2, [r0]
 2141 0010 1368     		ldr	r3, [r2]
 2142 0012 C020     		movs	r0, #192
 2143              	.LVL126:
 2144 0014 8343     		bics	r3, r0
 2145 0016 1360     		str	r3, [r2]
 2146              	.LBB744:
 2147              	.LBB745:
 2148              		.loc 2 414 0
 2149              		.syntax divided
 2150              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2151 0018 81F31088 		MSR primask, r1
 2152              	@ 0 "" 2
 2153              		.thumb
 2154              		.syntax unified
 2155              	.LBE745:
 2156              	.LBE744:
 2157              	.LBE739:
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2158              		.loc 1 1861 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 118


 2159 001c 2368     		ldr	r3, [r4]
 2160 001e 9B68     		ldr	r3, [r3, #8]
 2161 0020 1B06     		lsls	r3, r3, #24
 2162 0022 1FD5     		bpl	.L67
 2163              	.LBB746:
 2164              	.LBB747:
 2165              	.LBB748:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2166              		.loc 2 386 0
 2167              		.syntax divided
 2168              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2169 0024 EFF31081 		MRS r1, primask
 2170              	@ 0 "" 2
 2171              	.LVL127:
 2172              		.thumb
 2173              		.syntax unified
 2174              	.LBE748:
 2175              	.LBE747:
 2176              	.LBB749:
 2177              	.LBB750:
 2178              		.loc 2 414 0
 2179 0028 0123     		movs	r3, #1
 2180              		.syntax divided
 2181              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2182 002a 83F31088 		MSR primask, r3
 2183              	@ 0 "" 2
 2184              	.LVL128:
 2185              		.thumb
 2186              		.syntax unified
 2187              	.LBE750:
 2188              	.LBE749:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2189              		.loc 1 1863 0
 2190 002e 2268     		ldr	r2, [r4]
 2191 0030 9368     		ldr	r3, [r2, #8]
 2192 0032 4038     		subs	r0, r0, #64
 2193 0034 8343     		bics	r3, r0
 2194 0036 9360     		str	r3, [r2, #8]
 2195              	.LBB751:
 2196              	.LBB752:
 2197              		.loc 2 414 0
 2198              		.syntax divided
 2199              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2200 0038 81F31088 		MSR primask, r1
 2201              	@ 0 "" 2
 2202              		.thumb
 2203              		.syntax unified
 2204              	.LBE752:
 2205              	.LBE751:
 2206              	.LBE746:
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2207              		.loc 1 1866 0
 2208 003c E36E     		ldr	r3, [r4, #108]
 2209 003e 002B     		cmp	r3, #0
 2210 0040 10D0     		beq	.L67
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2211              		.loc 1 1870 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 119


 2212 0042 0022     		movs	r2, #0
 2213 0044 5A63     		str	r2, [r3, #52]
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2214              		.loc 1 1872 0
 2215 0046 E06E     		ldr	r0, [r4, #108]
 2216 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 2217              	.LVL129:
 2218 004c 0028     		cmp	r0, #0
 2219 004e 09D0     		beq	.L67
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 2220              		.loc 1 1874 0
 2221 0050 E06E     		ldr	r0, [r4, #108]
 2222 0052 FFF7FEFF 		bl	HAL_DMA_GetError
 2223              	.LVL130:
 2224 0056 2028     		cmp	r0, #32
 2225 0058 04D1     		bne	.L67
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2226              		.loc 1 1877 0
 2227 005a 1022     		movs	r2, #16
 2228 005c 8023     		movs	r3, #128
 2229 005e E250     		str	r2, [r4, r3]
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 2230              		.loc 1 1879 0
 2231 0060 1D38     		subs	r0, r0, #29
 2232 0062 05E0     		b	.L68
 2233              	.L67:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2234              		.loc 1 1886 0
 2235 0064 0022     		movs	r2, #0
 2236 0066 5223     		movs	r3, #82
 2237 0068 E252     		strh	r2, [r4, r3]
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2238              		.loc 1 1890 0
 2239 006a 323B     		subs	r3, r3, #50
 2240 006c A367     		str	r3, [r4, #120]
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2241              		.loc 1 1892 0
 2242 006e 0020     		movs	r0, #0
 2243              	.L68:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2244              		.loc 1 1893 0
 2245              		@ sp needed
 2246              	.LVL131:
 2247 0070 10BD     		pop	{r4, pc}
 2248              		.cfi_endproc
 2249              	.LFE56:
 2251 0072 C046     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2252              		.align	2
 2253              		.global	HAL_UART_AbortReceive
 2254              		.code	16
 2255              		.thumb_func
 2257              	HAL_UART_AbortReceive:
 2258              	.LFB57:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2259              		.loc 1 1908 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 120


 2262              		@ frame_needed = 0, uses_anonymous_args = 0
 2263              	.LVL132:
 2264 0000 70B5     		push	{r4, r5, r6, lr}
 2265              	.LCFI12:
 2266              		.cfi_def_cfa_offset 16
 2267              		.cfi_offset 4, -16
 2268              		.cfi_offset 5, -12
 2269              		.cfi_offset 6, -8
 2270              		.cfi_offset 14, -4
 2271 0002 0400     		movs	r4, r0
 2272              	.LBB753:
 2273              	.LBB754:
 2274              	.LBB755:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2275              		.loc 2 386 0
 2276              		.syntax divided
 2277              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2278 0004 EFF31080 		MRS r0, primask
 2279              	@ 0 "" 2
 2280              	.LVL133:
 2281              		.thumb
 2282              		.syntax unified
 2283              	.LBE755:
 2284              	.LBE754:
 2285              	.LBB756:
 2286              	.LBB757:
 2287              		.loc 2 414 0
 2288 0008 0121     		movs	r1, #1
 2289              		.syntax divided
 2290              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2291 000a 81F31088 		MSR primask, r1
 2292              	@ 0 "" 2
 2293              	.LVL134:
 2294              		.thumb
 2295              		.syntax unified
 2296              	.LBE757:
 2297              	.LBE756:
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2298              		.loc 1 1910 0
 2299 000e 2268     		ldr	r2, [r4]
 2300 0010 1568     		ldr	r5, [r2]
 2301 0012 294B     		ldr	r3, .L73
 2302 0014 2B40     		ands	r3, r5
 2303 0016 1360     		str	r3, [r2]
 2304              	.LBB758:
 2305              	.LBB759:
 2306              		.loc 2 414 0
 2307              		.syntax divided
 2308              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2309 0018 80F31088 		MSR primask, r0
 2310              	@ 0 "" 2
 2311              		.thumb
 2312              		.syntax unified
 2313              	.LBE759:
 2314              	.LBE758:
 2315              	.LBE753:
 2316              	.LBB760:
ARM GAS  /tmp/ccQJ5CSb.s 			page 121


 2317              	.LBB761:
 2318              	.LBB762:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2319              		.loc 2 386 0
 2320              		.syntax divided
 2321              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2322 001c EFF31080 		MRS r0, primask
 2323              	@ 0 "" 2
 2324              	.LVL135:
 2325              		.thumb
 2326              		.syntax unified
 2327              	.LBE762:
 2328              	.LBE761:
 2329              	.LBB763:
 2330              	.LBB764:
 2331              		.loc 2 414 0
 2332 0020 0123     		movs	r3, #1
 2333              		.syntax divided
 2334              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2335 0022 83F31088 		MSR primask, r3
 2336              	@ 0 "" 2
 2337              	.LVL136:
 2338              		.thumb
 2339              		.syntax unified
 2340              	.LBE764:
 2341              	.LBE763:
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2342              		.loc 1 1911 0
 2343 0026 2268     		ldr	r2, [r4]
 2344 0028 9368     		ldr	r3, [r2, #8]
 2345 002a 8B43     		bics	r3, r1
 2346 002c 9360     		str	r3, [r2, #8]
 2347              	.LBB765:
 2348              	.LBB766:
 2349              		.loc 2 414 0
 2350              		.syntax divided
 2351              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2352 002e 80F31088 		MSR primask, r0
 2353              	@ 0 "" 2
 2354              		.thumb
 2355              		.syntax unified
 2356              	.LBE766:
 2357              	.LBE765:
 2358              	.LBE760:
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2359              		.loc 1 1914 0
 2360 0032 236E     		ldr	r3, [r4, #96]
 2361 0034 012B     		cmp	r3, #1
 2362 0036 0AD1     		bne	.L70
 2363              	.LBB767:
 2364              	.LBB768:
 2365              	.LBB769:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2366              		.loc 2 386 0
 2367              		.syntax divided
 2368              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2369 0038 EFF31081 		MRS r1, primask
ARM GAS  /tmp/ccQJ5CSb.s 			page 122


 2370              	@ 0 "" 2
 2371              	.LVL137:
 2372              		.thumb
 2373              		.syntax unified
 2374              	.LBE769:
 2375              	.LBE768:
 2376              	.LBB770:
 2377              	.LBB771:
 2378              		.loc 2 414 0
 2379              		.syntax divided
 2380              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2381 003c 83F31088 		MSR primask, r3
 2382              	@ 0 "" 2
 2383              	.LVL138:
 2384              		.thumb
 2385              		.syntax unified
 2386              	.LBE771:
 2387              	.LBE770:
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2388              		.loc 1 1916 0
 2389 0040 2268     		ldr	r2, [r4]
 2390 0042 1368     		ldr	r3, [r2]
 2391 0044 1020     		movs	r0, #16
 2392 0046 8343     		bics	r3, r0
 2393 0048 1360     		str	r3, [r2]
 2394              	.LBB772:
 2395              	.LBB773:
 2396              		.loc 2 414 0
 2397              		.syntax divided
 2398              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2399 004a 81F31088 		MSR primask, r1
 2400              	@ 0 "" 2
 2401              		.thumb
 2402              		.syntax unified
 2403              	.L70:
 2404              	.LBE773:
 2405              	.LBE772:
 2406              	.LBE767:
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2407              		.loc 1 1920 0
 2408 004e 2368     		ldr	r3, [r4]
 2409 0050 9B68     		ldr	r3, [r3, #8]
 2410 0052 5B06     		lsls	r3, r3, #25
 2411 0054 1FD5     		bpl	.L71
 2412              	.LBB774:
 2413              	.LBB775:
 2414              	.LBB776:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2415              		.loc 2 386 0
 2416              		.syntax divided
 2417              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2418 0056 EFF31081 		MRS r1, primask
 2419              	@ 0 "" 2
 2420              	.LVL139:
 2421              		.thumb
 2422              		.syntax unified
 2423              	.LBE776:
ARM GAS  /tmp/ccQJ5CSb.s 			page 123


 2424              	.LBE775:
 2425              	.LBB777:
 2426              	.LBB778:
 2427              		.loc 2 414 0
 2428 005a 0123     		movs	r3, #1
 2429              		.syntax divided
 2430              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2431 005c 83F31088 		MSR primask, r3
 2432              	@ 0 "" 2
 2433              	.LVL140:
 2434              		.thumb
 2435              		.syntax unified
 2436              	.LBE778:
 2437              	.LBE777:
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2438              		.loc 1 1922 0
 2439 0060 2268     		ldr	r2, [r4]
 2440 0062 9368     		ldr	r3, [r2, #8]
 2441 0064 4020     		movs	r0, #64
 2442 0066 8343     		bics	r3, r0
 2443 0068 9360     		str	r3, [r2, #8]
 2444              	.LBB779:
 2445              	.LBB780:
 2446              		.loc 2 414 0
 2447              		.syntax divided
 2448              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2449 006a 81F31088 		MSR primask, r1
 2450              	@ 0 "" 2
 2451              		.thumb
 2452              		.syntax unified
 2453              	.LBE780:
 2454              	.LBE779:
 2455              	.LBE774:
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2456              		.loc 1 1925 0
 2457 006e 236F     		ldr	r3, [r4, #112]
 2458 0070 002B     		cmp	r3, #0
 2459 0072 10D0     		beq	.L71
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2460              		.loc 1 1929 0
 2461 0074 0022     		movs	r2, #0
 2462 0076 5A63     		str	r2, [r3, #52]
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2463              		.loc 1 1931 0
 2464 0078 206F     		ldr	r0, [r4, #112]
 2465 007a FFF7FEFF 		bl	HAL_DMA_Abort
 2466              	.LVL141:
 2467 007e 0028     		cmp	r0, #0
 2468 0080 09D0     		beq	.L71
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 2469              		.loc 1 1933 0
 2470 0082 206F     		ldr	r0, [r4, #112]
 2471 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 2472              	.LVL142:
 2473 0088 2028     		cmp	r0, #32
 2474 008a 04D1     		bne	.L71
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 124


 2475              		.loc 1 1936 0
 2476 008c 1022     		movs	r2, #16
 2477 008e 8023     		movs	r3, #128
 2478 0090 E250     		str	r2, [r4, r3]
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 2479              		.loc 1 1938 0
 2480 0092 1D38     		subs	r0, r0, #29
 2481 0094 0EE0     		b	.L72
 2482              	.L71:
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2483              		.loc 1 1945 0
 2484 0096 0022     		movs	r2, #0
 2485 0098 5A23     		movs	r3, #90
 2486 009a E252     		strh	r2, [r4, r3]
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2487              		.loc 1 1948 0
 2488 009c 2368     		ldr	r3, [r4]
 2489 009e 0F21     		movs	r1, #15
 2490 00a0 1962     		str	r1, [r3, #32]
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2491              		.loc 1 1951 0
 2492 00a2 2168     		ldr	r1, [r4]
 2493 00a4 8869     		ldr	r0, [r1, #24]
 2494 00a6 0823     		movs	r3, #8
 2495 00a8 0343     		orrs	r3, r0
 2496 00aa 8B61     		str	r3, [r1, #24]
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2497              		.loc 1 1954 0
 2498 00ac 2023     		movs	r3, #32
 2499 00ae E367     		str	r3, [r4, #124]
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2500              		.loc 1 1955 0
 2501 00b0 2266     		str	r2, [r4, #96]
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2502              		.loc 1 1957 0
 2503 00b2 0020     		movs	r0, #0
 2504              	.L72:
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2505              		.loc 1 1958 0
 2506              		@ sp needed
 2507              	.LVL143:
 2508 00b4 70BD     		pop	{r4, r5, r6, pc}
 2509              	.L74:
 2510 00b6 C046     		.align	2
 2511              	.L73:
 2512 00b8 DFFEFFFF 		.word	-289
 2513              		.cfi_endproc
 2514              	.LFE57:
 2516              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2517              		.align	2
 2518              		.weak	HAL_UART_TxCpltCallback
 2519              		.code	16
 2520              		.thumb_func
 2522              	HAL_UART_TxCpltCallback:
 2523              	.LFB62:
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2524              		.loc 1 2592 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 125


 2525              		.cfi_startproc
 2526              		@ args = 0, pretend = 0, frame = 0
 2527              		@ frame_needed = 0, uses_anonymous_args = 0
 2528              		@ link register save eliminated.
 2529              	.LVL144:
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2530              		.loc 1 2599 0
 2531              		@ sp needed
 2532 0000 7047     		bx	lr
 2533              		.cfi_endproc
 2534              	.LFE62:
 2536 0002 C046     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2537              		.align	2
 2538              		.code	16
 2539              		.thumb_func
 2541              	UART_DMATransmitCplt:
 2542              	.LFB89:
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2543              		.loc 1 3511 0
 2544              		.cfi_startproc
 2545              		@ args = 0, pretend = 0, frame = 0
 2546              		@ frame_needed = 0, uses_anonymous_args = 0
 2547              	.LVL145:
 2548 0000 10B5     		push	{r4, lr}
 2549              	.LCFI13:
 2550              		.cfi_def_cfa_offset 8
 2551              		.cfi_offset 4, -8
 2552              		.cfi_offset 14, -4
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2553              		.loc 1 3512 0
 2554 0002 436A     		ldr	r3, [r0, #36]
 2555              	.LVL146:
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2556              		.loc 1 3515 0
 2557 0004 8269     		ldr	r2, [r0, #24]
 2558 0006 202A     		cmp	r2, #32
 2559 0008 1BD0     		beq	.L77
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2560              		.loc 1 3517 0
 2561 000a 0021     		movs	r1, #0
 2562 000c 5222     		movs	r2, #82
 2563 000e 9952     		strh	r1, [r3, r2]
 2564              	.LBB781:
 2565              	.LBB782:
 2566              	.LBB783:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2567              		.loc 2 386 0
 2568              		.syntax divided
 2569              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2570 0010 EFF31080 		MRS r0, primask
 2571              	@ 0 "" 2
 2572              	.LVL147:
 2573              		.thumb
 2574              		.syntax unified
 2575              	.LBE783:
 2576              	.LBE782:
 2577              	.LBB784:
ARM GAS  /tmp/ccQJ5CSb.s 			page 126


 2578              	.LBB785:
 2579              		.loc 2 414 0
 2580 0014 513A     		subs	r2, r2, #81
 2581              		.syntax divided
 2582              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2583 0016 82F31088 		MSR primask, r2
 2584              	@ 0 "" 2
 2585              	.LVL148:
 2586              		.thumb
 2587              		.syntax unified
 2588              	.LBE785:
 2589              	.LBE784:
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2590              		.loc 1 3521 0
 2591 001a 1968     		ldr	r1, [r3]
 2592 001c 8A68     		ldr	r2, [r1, #8]
 2593 001e 8024     		movs	r4, #128
 2594 0020 A243     		bics	r2, r4
 2595 0022 8A60     		str	r2, [r1, #8]
 2596              	.LBB786:
 2597              	.LBB787:
 2598              		.loc 2 414 0
 2599              		.syntax divided
 2600              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2601 0024 80F31088 		MSR primask, r0
 2602              	@ 0 "" 2
 2603              		.thumb
 2604              		.syntax unified
 2605              	.LBE787:
 2606              	.LBE786:
 2607              	.LBE781:
 2608              	.LBB788:
 2609              	.LBB789:
 2610              	.LBB790:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2611              		.loc 2 386 0
 2612              		.syntax divided
 2613              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2614 0028 EFF31081 		MRS r1, primask
 2615              	@ 0 "" 2
 2616              	.LVL149:
 2617              		.thumb
 2618              		.syntax unified
 2619              	.LBE790:
 2620              	.LBE789:
 2621              	.LBB791:
 2622              	.LBB792:
 2623              		.loc 2 414 0
 2624 002c 0122     		movs	r2, #1
 2625              		.syntax divided
 2626              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2627 002e 82F31088 		MSR primask, r2
 2628              	@ 0 "" 2
 2629              	.LVL150:
 2630              		.thumb
 2631              		.syntax unified
 2632              	.LBE792:
ARM GAS  /tmp/ccQJ5CSb.s 			page 127


 2633              	.LBE791:
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2634              		.loc 1 3524 0
 2635 0032 1A68     		ldr	r2, [r3]
 2636 0034 1068     		ldr	r0, [r2]
 2637 0036 4023     		movs	r3, #64
 2638              	.LVL151:
 2639 0038 0343     		orrs	r3, r0
 2640 003a 1360     		str	r3, [r2]
 2641              	.LBB793:
 2642              	.LBB794:
 2643              		.loc 2 414 0
 2644              		.syntax divided
 2645              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2646 003c 81F31088 		MSR primask, r1
 2647              	@ 0 "" 2
 2648              		.thumb
 2649              		.syntax unified
 2650 0040 02E0     		b	.L76
 2651              	.LVL152:
 2652              	.L77:
 2653              	.LBE794:
 2654              	.LBE793:
 2655              	.LBE788:
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2656              		.loc 1 3534 0
 2657 0042 1800     		movs	r0, r3
 2658              	.LVL153:
 2659 0044 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2660              	.LVL154:
 2661              	.L76:
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2662              		.loc 1 3537 0
 2663              		@ sp needed
 2664 0048 10BD     		pop	{r4, pc}
 2665              		.cfi_endproc
 2666              	.LFE89:
 2668              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2669              		.align	2
 2670              		.code	16
 2671              		.thumb_func
 2673              	UART_EndTransmit_IT:
 2674              	.LFB101:
3932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2675              		.loc 1 3941 0
 2676              		.cfi_startproc
 2677              		@ args = 0, pretend = 0, frame = 0
 2678              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 128


 2679              	.LVL155:
 2680 0000 10B5     		push	{r4, lr}
 2681              	.LCFI14:
 2682              		.cfi_def_cfa_offset 8
 2683              		.cfi_offset 4, -8
 2684              		.cfi_offset 14, -4
 2685              	.LBB795:
 2686              	.LBB796:
 2687              	.LBB797:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2688              		.loc 2 386 0
 2689              		.syntax divided
 2690              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2691 0002 EFF31081 		MRS r1, primask
 2692              	@ 0 "" 2
 2693              	.LVL156:
 2694              		.thumb
 2695              		.syntax unified
 2696              	.LBE797:
 2697              	.LBE796:
 2698              	.LBB798:
 2699              	.LBB799:
 2700              		.loc 2 414 0
 2701 0006 0123     		movs	r3, #1
 2702              		.syntax divided
 2703              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2704 0008 83F31088 		MSR primask, r3
 2705              	@ 0 "" 2
 2706              	.LVL157:
 2707              		.thumb
 2708              		.syntax unified
 2709              	.LBE799:
 2710              	.LBE798:
3942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 2711              		.loc 1 3943 0
 2712 000c 0268     		ldr	r2, [r0]
 2713 000e 1368     		ldr	r3, [r2]
 2714 0010 4024     		movs	r4, #64
 2715 0012 A343     		bics	r3, r4
 2716 0014 1360     		str	r3, [r2]
 2717              	.LBB800:
 2718              	.LBB801:
 2719              		.loc 2 414 0
 2720              		.syntax divided
 2721              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2722 0016 81F31088 		MSR primask, r1
 2723              	@ 0 "" 2
 2724              		.thumb
 2725              		.syntax unified
 2726              	.LBE801:
 2727              	.LBE800:
 2728              	.LBE795:
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2729              		.loc 1 3946 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 129


 2730 001a 2023     		movs	r3, #32
 2731 001c 8367     		str	r3, [r0, #120]
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 2732              		.loc 1 3949 0
 2733 001e 0023     		movs	r3, #0
 2734 0020 8366     		str	r3, [r0, #104]
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2735              		.loc 1 3956 0
 2736 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2737              	.LVL158:
3957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2738              		.loc 1 3958 0
 2739              		@ sp needed
 2740 0026 10BD     		pop	{r4, pc}
 2741              		.cfi_endproc
 2742              	.LFE101:
 2744              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2745              		.align	2
 2746              		.weak	HAL_UART_TxHalfCpltCallback
 2747              		.code	16
 2748              		.thumb_func
 2750              	HAL_UART_TxHalfCpltCallback:
 2751              	.LFB63:
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2752              		.loc 1 2607 0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 0
 2755              		@ frame_needed = 0, uses_anonymous_args = 0
 2756              		@ link register save eliminated.
 2757              	.LVL159:
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2758              		.loc 1 2614 0
 2759              		@ sp needed
 2760 0000 7047     		bx	lr
 2761              		.cfi_endproc
 2762              	.LFE63:
 2764 0002 C046     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2765              		.align	2
 2766              		.code	16
 2767              		.thumb_func
 2769              	UART_DMATxHalfCplt:
 2770              	.LFB90:
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2771              		.loc 1 3545 0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
 2775              	.LVL160:
ARM GAS  /tmp/ccQJ5CSb.s 			page 130


 2776 0000 10B5     		push	{r4, lr}
 2777              	.LCFI15:
 2778              		.cfi_def_cfa_offset 8
 2779              		.cfi_offset 4, -8
 2780              		.cfi_offset 14, -4
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2781              		.loc 1 3546 0
 2782 0002 406A     		ldr	r0, [r0, #36]
 2783              	.LVL161:
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2784              		.loc 1 3553 0
 2785 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2786              	.LVL162:
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2787              		.loc 1 3555 0
 2788              		@ sp needed
 2789 0008 10BD     		pop	{r4, pc}
 2790              		.cfi_endproc
 2791              	.LFE90:
 2793 000a C046     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2794              		.align	2
 2795              		.weak	HAL_UART_RxCpltCallback
 2796              		.code	16
 2797              		.thumb_func
 2799              	HAL_UART_RxCpltCallback:
 2800              	.LFB64:
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2801              		.loc 1 2622 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 0
 2804              		@ frame_needed = 0, uses_anonymous_args = 0
 2805              		@ link register save eliminated.
 2806              	.LVL163:
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2807              		.loc 1 2629 0
 2808              		@ sp needed
 2809 0000 7047     		bx	lr
 2810              		.cfi_endproc
 2811              	.LFE64:
 2813 0002 C046     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2814              		.align	2
 2815              		.weak	HAL_UART_RxHalfCpltCallback
 2816              		.code	16
 2817              		.thumb_func
 2819              	HAL_UART_RxHalfCpltCallback:
 2820              	.LFB65:
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2821              		.loc 1 2637 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 0
 2824              		@ frame_needed = 0, uses_anonymous_args = 0
 2825              		@ link register save eliminated.
 2826              	.LVL164:
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2827              		.loc 1 2644 0
 2828              		@ sp needed
 2829 0000 7047     		bx	lr
ARM GAS  /tmp/ccQJ5CSb.s 			page 131


 2830              		.cfi_endproc
 2831              	.LFE65:
 2833 0002 C046     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2834              		.align	2
 2835              		.weak	HAL_UART_ErrorCallback
 2836              		.code	16
 2837              		.thumb_func
 2839              	HAL_UART_ErrorCallback:
 2840              	.LFB66:
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2841              		.loc 1 2652 0
 2842              		.cfi_startproc
 2843              		@ args = 0, pretend = 0, frame = 0
 2844              		@ frame_needed = 0, uses_anonymous_args = 0
 2845              		@ link register save eliminated.
 2846              	.LVL165:
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2847              		.loc 1 2659 0
 2848              		@ sp needed
 2849 0000 7047     		bx	lr
 2850              		.cfi_endproc
 2851              	.LFE66:
 2853 0002 C046     		.section	.text.UART_DMAError,"ax",%progbits
 2854              		.align	2
 2855              		.code	16
 2856              		.thumb_func
 2858              	UART_DMAError:
 2859              	.LFB93:
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2860              		.loc 1 3654 0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
 2864              	.LVL166:
 2865 0000 70B5     		push	{r4, r5, r6, lr}
 2866              	.LCFI16:
 2867              		.cfi_def_cfa_offset 16
 2868              		.cfi_offset 4, -16
 2869              		.cfi_offset 5, -12
 2870              		.cfi_offset 6, -8
 2871              		.cfi_offset 14, -4
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2872              		.loc 1 3655 0
 2873 0002 446A     		ldr	r4, [r0, #36]
 2874              	.LVL167:
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2875              		.loc 1 3657 0
 2876 0004 A26F     		ldr	r2, [r4, #120]
 2877              	.LVL168:
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2878              		.loc 1 3658 0
 2879 0006 E56F     		ldr	r5, [r4, #124]
 2880              	.LVL169:
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2881              		.loc 1 3661 0
 2882 0008 2368     		ldr	r3, [r4]
 2883 000a 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccQJ5CSb.s 			page 132


 2884 000c 1B06     		lsls	r3, r3, #24
 2885 000e 07D5     		bpl	.L86
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2886              		.loc 1 3661 0 is_stmt 0 discriminator 1
 2887 0010 212A     		cmp	r2, #33
 2888 0012 05D1     		bne	.L86
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2889              		.loc 1 3664 0 is_stmt 1
 2890 0014 0022     		movs	r2, #0
 2891              	.LVL170:
 2892 0016 5223     		movs	r3, #82
 2893 0018 E252     		strh	r2, [r4, r3]
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2894              		.loc 1 3665 0
 2895 001a 2000     		movs	r0, r4
 2896              	.LVL171:
 2897 001c FFF7FEFF 		bl	UART_EndTxTransfer
 2898              	.LVL172:
 2899              	.L86:
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2900              		.loc 1 3669 0
 2901 0020 2368     		ldr	r3, [r4]
 2902 0022 9B68     		ldr	r3, [r3, #8]
 2903 0024 5B06     		lsls	r3, r3, #25
 2904 0026 07D5     		bpl	.L87
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2905              		.loc 1 3669 0 is_stmt 0 discriminator 1
 2906 0028 222D     		cmp	r5, #34
 2907 002a 05D1     		bne	.L87
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2908              		.loc 1 3672 0 is_stmt 1
 2909 002c 0022     		movs	r2, #0
 2910 002e 5A23     		movs	r3, #90
 2911 0030 E252     		strh	r2, [r4, r3]
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2912              		.loc 1 3673 0
 2913 0032 2000     		movs	r0, r4
 2914 0034 FFF7FEFF 		bl	UART_EndRxTransfer
 2915              	.LVL173:
 2916              	.L87:
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2917              		.loc 1 3676 0
 2918 0038 8022     		movs	r2, #128
 2919 003a A158     		ldr	r1, [r4, r2]
 2920 003c 1023     		movs	r3, #16
 2921 003e 0B43     		orrs	r3, r1
 2922 0040 A350     		str	r3, [r4, r2]
3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2923              		.loc 1 3683 0
 2924 0042 2000     		movs	r0, r4
 2925 0044 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2926              	.LVL174:
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2927              		.loc 1 3685 0
 2928              		@ sp needed
 2929              	.LVL175:
 2930              	.LVL176:
ARM GAS  /tmp/ccQJ5CSb.s 			page 133


 2931 0048 70BD     		pop	{r4, r5, r6, pc}
 2932              		.cfi_endproc
 2933              	.LFE93:
 2935 004a C046     		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2936              		.align	2
 2937              		.code	16
 2938              		.thumb_func
 2940              	UART_DMAAbortOnError:
 2941              	.LFB94:
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2942              		.loc 1 3694 0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 0
 2945              		@ frame_needed = 0, uses_anonymous_args = 0
 2946              	.LVL177:
 2947 0000 10B5     		push	{r4, lr}
 2948              	.LCFI17:
 2949              		.cfi_def_cfa_offset 8
 2950              		.cfi_offset 4, -8
 2951              		.cfi_offset 14, -4
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2952              		.loc 1 3695 0
 2953 0002 406A     		ldr	r0, [r0, #36]
 2954              	.LVL178:
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2955              		.loc 1 3696 0
 2956 0004 0023     		movs	r3, #0
 2957 0006 5A22     		movs	r2, #90
 2958 0008 8352     		strh	r3, [r0, r2]
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2959              		.loc 1 3697 0
 2960 000a 083A     		subs	r2, r2, #8
 2961 000c 8352     		strh	r3, [r0, r2]
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2962              		.loc 1 3704 0
 2963 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2964              	.LVL179:
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2965              		.loc 1 3706 0
 2966              		@ sp needed
 2967 0012 10BD     		pop	{r4, pc}
 2968              		.cfi_endproc
 2969              	.LFE94:
 2971              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2972              		.align	2
 2973              		.weak	HAL_UART_AbortCpltCallback
 2974              		.code	16
 2975              		.thumb_func
 2977              	HAL_UART_AbortCpltCallback:
 2978              	.LFB67:
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2979              		.loc 1 2667 0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 0
 2982              		@ frame_needed = 0, uses_anonymous_args = 0
 2983              		@ link register save eliminated.
 2984              	.LVL180:
ARM GAS  /tmp/ccQJ5CSb.s 			page 134


2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2985              		.loc 1 2674 0
 2986              		@ sp needed
 2987 0000 7047     		bx	lr
 2988              		.cfi_endproc
 2989              	.LFE67:
 2991 0002 C046     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2992              		.align	2
 2993              		.global	HAL_UART_Abort_IT
 2994              		.code	16
 2995              		.thumb_func
 2997              	HAL_UART_Abort_IT:
 2998              	.LFB58:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2999              		.loc 1 1975 0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
 3003              	.LVL181:
 3004 0000 70B5     		push	{r4, r5, r6, lr}
 3005              	.LCFI18:
 3006              		.cfi_def_cfa_offset 16
 3007              		.cfi_offset 4, -16
 3008              		.cfi_offset 5, -12
 3009              		.cfi_offset 6, -8
 3010              		.cfi_offset 14, -4
 3011 0002 0400     		movs	r4, r0
 3012              	.LVL182:
 3013              	.LBB802:
 3014              	.LBB803:
 3015              	.LBB804:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3016              		.loc 2 386 0
 3017              		.syntax divided
 3018              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3019 0004 EFF31080 		MRS r0, primask
 3020              	@ 0 "" 2
 3021              	.LVL183:
 3022              		.thumb
 3023              		.syntax unified
 3024              	.LBE804:
 3025              	.LBE803:
 3026              	.LBB805:
 3027              	.LBB806:
 3028              		.loc 2 414 0
 3029 0008 0121     		movs	r1, #1
 3030              		.syntax divided
 3031              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3032 000a 81F31088 		MSR primask, r1
 3033              	@ 0 "" 2
 3034              	.LVL184:
 3035              		.thumb
 3036              		.syntax unified
 3037              	.LBE806:
 3038              	.LBE805:
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3039              		.loc 1 1979 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 135


 3040 000e 2268     		ldr	r2, [r4]
 3041 0010 1568     		ldr	r5, [r2]
 3042 0012 484B     		ldr	r3, .L103
 3043 0014 2B40     		ands	r3, r5
 3044 0016 1360     		str	r3, [r2]
 3045              	.LBB807:
 3046              	.LBB808:
 3047              		.loc 2 414 0
 3048              		.syntax divided
 3049              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3050 0018 80F31088 		MSR primask, r0
 3051              	@ 0 "" 2
 3052              		.thumb
 3053              		.syntax unified
 3054              	.LBE808:
 3055              	.LBE807:
 3056              	.LBE802:
 3057              	.LBB809:
 3058              	.LBB810:
 3059              	.LBB811:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3060              		.loc 2 386 0
 3061              		.syntax divided
 3062              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3063 001c EFF31080 		MRS r0, primask
 3064              	@ 0 "" 2
 3065              	.LVL185:
 3066              		.thumb
 3067              		.syntax unified
 3068              	.LBE811:
 3069              	.LBE810:
 3070              	.LBB812:
 3071              	.LBB813:
 3072              		.loc 2 414 0
 3073 0020 0123     		movs	r3, #1
 3074              		.syntax divided
 3075              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3076 0022 83F31088 		MSR primask, r3
 3077              	@ 0 "" 2
 3078              	.LVL186:
 3079              		.thumb
 3080              		.syntax unified
 3081              	.LBE813:
 3082              	.LBE812:
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3083              		.loc 1 1980 0
 3084 0026 2268     		ldr	r2, [r4]
 3085 0028 9368     		ldr	r3, [r2, #8]
 3086 002a 8B43     		bics	r3, r1
 3087 002c 9360     		str	r3, [r2, #8]
 3088              	.LBB814:
 3089              	.LBB815:
 3090              		.loc 2 414 0
 3091              		.syntax divided
 3092              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3093 002e 80F31088 		MSR primask, r0
 3094              	@ 0 "" 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 136


 3095              		.thumb
 3096              		.syntax unified
 3097              	.LBE815:
 3098              	.LBE814:
 3099              	.LBE809:
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3100              		.loc 1 1983 0
 3101 0032 236E     		ldr	r3, [r4, #96]
 3102 0034 012B     		cmp	r3, #1
 3103 0036 0AD1     		bne	.L91
 3104              	.LBB816:
 3105              	.LBB817:
 3106              	.LBB818:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3107              		.loc 2 386 0
 3108              		.syntax divided
 3109              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3110 0038 EFF31081 		MRS r1, primask
 3111              	@ 0 "" 2
 3112              	.LVL187:
 3113              		.thumb
 3114              		.syntax unified
 3115              	.LBE818:
 3116              	.LBE817:
 3117              	.LBB819:
 3118              	.LBB820:
 3119              		.loc 2 414 0
 3120              		.syntax divided
 3121              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3122 003c 83F31088 		MSR primask, r3
 3123              	@ 0 "" 2
 3124              	.LVL188:
 3125              		.thumb
 3126              		.syntax unified
 3127              	.LBE820:
 3128              	.LBE819:
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3129              		.loc 1 1985 0
 3130 0040 2268     		ldr	r2, [r4]
 3131 0042 1368     		ldr	r3, [r2]
 3132 0044 1020     		movs	r0, #16
 3133 0046 8343     		bics	r3, r0
 3134 0048 1360     		str	r3, [r2]
 3135              	.LBB821:
 3136              	.LBB822:
 3137              		.loc 2 414 0
 3138              		.syntax divided
 3139              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3140 004a 81F31088 		MSR primask, r1
 3141              	@ 0 "" 2
 3142              		.thumb
 3143              		.syntax unified
 3144              	.L91:
 3145              	.LBE822:
 3146              	.LBE821:
 3147              	.LBE816:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccQJ5CSb.s 			page 137


 3148              		.loc 1 1991 0
 3149 004e E36E     		ldr	r3, [r4, #108]
 3150 0050 002B     		cmp	r3, #0
 3151 0052 08D0     		beq	.L92
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3152              		.loc 1 1995 0
 3153 0054 2268     		ldr	r2, [r4]
 3154 0056 9268     		ldr	r2, [r2, #8]
 3155 0058 1206     		lsls	r2, r2, #24
 3156 005a 02D5     		bpl	.L93
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3157              		.loc 1 1997 0
 3158 005c 364A     		ldr	r2, .L103+4
 3159 005e 5A63     		str	r2, [r3, #52]
 3160 0060 01E0     		b	.L92
 3161              	.L93:
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3162              		.loc 1 2001 0
 3163 0062 0022     		movs	r2, #0
 3164 0064 5A63     		str	r2, [r3, #52]
 3165              	.L92:
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3166              		.loc 1 2005 0
 3167 0066 236F     		ldr	r3, [r4, #112]
 3168 0068 002B     		cmp	r3, #0
 3169 006a 08D0     		beq	.L94
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3170              		.loc 1 2009 0
 3171 006c 2268     		ldr	r2, [r4]
 3172 006e 9268     		ldr	r2, [r2, #8]
 3173 0070 5206     		lsls	r2, r2, #25
 3174 0072 02D5     		bpl	.L95
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3175              		.loc 1 2011 0
 3176 0074 314A     		ldr	r2, .L103+8
 3177 0076 5A63     		str	r2, [r3, #52]
 3178 0078 01E0     		b	.L94
 3179              	.L95:
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3180              		.loc 1 2015 0
 3181 007a 0022     		movs	r2, #0
 3182 007c 5A63     		str	r2, [r3, #52]
 3183              	.L94:
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3184              		.loc 1 2020 0
 3185 007e 2368     		ldr	r3, [r4]
 3186 0080 9B68     		ldr	r3, [r3, #8]
 3187 0082 1B06     		lsls	r3, r3, #24
 3188 0084 17D5     		bpl	.L99
 3189              	.LBB823:
 3190              	.LBB824:
 3191              	.LBB825:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3192              		.loc 2 386 0
 3193              		.syntax divided
 3194              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3195 0086 EFF31081 		MRS r1, primask
ARM GAS  /tmp/ccQJ5CSb.s 			page 138


 3196              	@ 0 "" 2
 3197              	.LVL189:
 3198              		.thumb
 3199              		.syntax unified
 3200              	.LBE825:
 3201              	.LBE824:
 3202              	.LBB826:
 3203              	.LBB827:
 3204              		.loc 2 414 0
 3205 008a 0123     		movs	r3, #1
 3206              		.syntax divided
 3207              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3208 008c 83F31088 		MSR primask, r3
 3209              	@ 0 "" 2
 3210              	.LVL190:
 3211              		.thumb
 3212              		.syntax unified
 3213              	.LBE827:
 3214              	.LBE826:
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3215              		.loc 1 2023 0
 3216 0090 2268     		ldr	r2, [r4]
 3217 0092 9368     		ldr	r3, [r2, #8]
 3218 0094 8020     		movs	r0, #128
 3219 0096 8343     		bics	r3, r0
 3220 0098 9360     		str	r3, [r2, #8]
 3221              	.LBB828:
 3222              	.LBB829:
 3223              		.loc 2 414 0
 3224              		.syntax divided
 3225              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3226 009a 81F31088 		MSR primask, r1
 3227              	@ 0 "" 2
 3228              		.thumb
 3229              		.syntax unified
 3230              	.LBE829:
 3231              	.LBE828:
 3232              	.LBE823:
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3233              		.loc 1 2026 0
 3234 009e E06E     		ldr	r0, [r4, #108]
 3235 00a0 0028     		cmp	r0, #0
 3236 00a2 0AD0     		beq	.L100
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3237              		.loc 1 2032 0
 3238 00a4 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3239              	.LVL191:
 3240 00a8 0028     		cmp	r0, #0
 3241 00aa 08D0     		beq	.L101
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3242              		.loc 1 2034 0
 3243 00ac E36E     		ldr	r3, [r4, #108]
 3244 00ae 0022     		movs	r2, #0
 3245 00b0 5A63     		str	r2, [r3, #52]
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3246              		.loc 1 1976 0
 3247 00b2 0123     		movs	r3, #1
ARM GAS  /tmp/ccQJ5CSb.s 			page 139


 3248 00b4 04E0     		b	.L96
 3249              	.L99:
 3250 00b6 0123     		movs	r3, #1
 3251 00b8 02E0     		b	.L96
 3252              	.L100:
 3253 00ba 0123     		movs	r3, #1
 3254 00bc 00E0     		b	.L96
 3255              	.L101:
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3256              		.loc 1 2038 0
 3257 00be 0023     		movs	r3, #0
 3258              	.L96:
 3259              	.LVL192:
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3260              		.loc 1 2044 0
 3261 00c0 2268     		ldr	r2, [r4]
 3262 00c2 9268     		ldr	r2, [r2, #8]
 3263 00c4 5206     		lsls	r2, r2, #25
 3264 00c6 18D5     		bpl	.L97
 3265              	.LBB830:
 3266              	.LBB831:
 3267              	.LBB832:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3268              		.loc 2 386 0
 3269              		.syntax divided
 3270              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3271 00c8 EFF31080 		MRS r0, primask
 3272              	@ 0 "" 2
 3273              	.LVL193:
 3274              		.thumb
 3275              		.syntax unified
 3276              	.LBE832:
 3277              	.LBE831:
 3278              	.LBB833:
 3279              	.LBB834:
 3280              		.loc 2 414 0
 3281 00cc 0122     		movs	r2, #1
 3282              		.syntax divided
 3283              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3284 00ce 82F31088 		MSR primask, r2
 3285              	@ 0 "" 2
 3286              	.LVL194:
 3287              		.thumb
 3288              		.syntax unified
 3289              	.LBE834:
 3290              	.LBE833:
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3291              		.loc 1 2046 0
 3292 00d2 2168     		ldr	r1, [r4]
 3293 00d4 8A68     		ldr	r2, [r1, #8]
 3294 00d6 4025     		movs	r5, #64
 3295 00d8 AA43     		bics	r2, r5
 3296 00da 8A60     		str	r2, [r1, #8]
 3297              	.LBB835:
 3298              	.LBB836:
 3299              		.loc 2 414 0
 3300              		.syntax divided
ARM GAS  /tmp/ccQJ5CSb.s 			page 140


 3301              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3302 00dc 80F31088 		MSR primask, r0
 3303              	@ 0 "" 2
 3304              		.thumb
 3305              		.syntax unified
 3306              	.LBE836:
 3307              	.LBE835:
 3308              	.LBE830:
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3309              		.loc 1 2049 0
 3310 00e0 206F     		ldr	r0, [r4, #112]
 3311 00e2 0028     		cmp	r0, #0
 3312 00e4 09D0     		beq	.L97
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3313              		.loc 1 2055 0
 3314 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3315              	.LVL195:
 3316 00ea 0028     		cmp	r0, #0
 3317 00ec 04D0     		beq	.L102
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 3318              		.loc 1 2057 0
 3319 00ee 236F     		ldr	r3, [r4, #112]
 3320 00f0 0022     		movs	r2, #0
 3321 00f2 5A63     		str	r2, [r3, #52]
 3322              	.LVL196:
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3323              		.loc 1 2058 0
 3324 00f4 0123     		movs	r3, #1
 3325 00f6 00E0     		b	.L97
 3326              	.LVL197:
 3327              	.L102:
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3328              		.loc 1 2062 0
 3329 00f8 0023     		movs	r3, #0
 3330              	.L97:
 3331              	.LVL198:
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3332              		.loc 1 2068 0
 3333 00fa 012B     		cmp	r3, #1
 3334 00fc 17D1     		bne	.L98
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3335              		.loc 1 2071 0
 3336 00fe 0023     		movs	r3, #0
 3337              	.LVL199:
 3338 0100 5222     		movs	r2, #82
 3339 0102 A352     		strh	r3, [r4, r2]
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3340              		.loc 1 2072 0
 3341 0104 0832     		adds	r2, r2, #8
 3342 0106 A352     		strh	r3, [r4, r2]
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
 3343              		.loc 1 2075 0
 3344 0108 6366     		str	r3, [r4, #100]
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3345              		.loc 1 2076 0
 3346 010a A366     		str	r3, [r4, #104]
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 141


 3347              		.loc 1 2079 0
 3348 010c 2632     		adds	r2, r2, #38
 3349 010e A350     		str	r3, [r4, r2]
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3350              		.loc 1 2082 0
 3351 0110 2268     		ldr	r2, [r4]
 3352 0112 0F21     		movs	r1, #15
 3353 0114 1162     		str	r1, [r2, #32]
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3354              		.loc 1 2086 0
 3355 0116 2168     		ldr	r1, [r4]
 3356 0118 8869     		ldr	r0, [r1, #24]
 3357 011a 0822     		movs	r2, #8
 3358 011c 0243     		orrs	r2, r0
 3359 011e 8A61     		str	r2, [r1, #24]
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3360              		.loc 1 2089 0
 3361 0120 2022     		movs	r2, #32
 3362 0122 A267     		str	r2, [r4, #120]
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3363              		.loc 1 2090 0
 3364 0124 E267     		str	r2, [r4, #124]
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3365              		.loc 1 2091 0
 3366 0126 2366     		str	r3, [r4, #96]
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3367              		.loc 1 2099 0
 3368 0128 2000     		movs	r0, r4
 3369 012a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3370              	.LVL200:
 3371              	.L98:
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3372              		.loc 1 2104 0
 3373 012e 0020     		movs	r0, #0
 3374              		@ sp needed
 3375              	.LVL201:
 3376 0130 70BD     		pop	{r4, r5, r6, pc}
 3377              	.L104:
 3378 0132 C046     		.align	2
 3379              	.L103:
 3380 0134 1FFEFFFF 		.word	-481
 3381 0138 00000000 		.word	UART_DMATxAbortCallback
 3382 013c 00000000 		.word	UART_DMARxAbortCallback
 3383              		.cfi_endproc
 3384              	.LFE58:
 3386              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3387              		.align	2
 3388              		.code	16
 3389              		.thumb_func
 3391              	UART_DMARxAbortCallback:
 3392              	.LFB96:
3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3393              		.loc 1 3767 0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 0
 3396              		@ frame_needed = 0, uses_anonymous_args = 0
 3397              	.LVL202:
ARM GAS  /tmp/ccQJ5CSb.s 			page 142


 3398 0000 10B5     		push	{r4, lr}
 3399              	.LCFI19:
 3400              		.cfi_def_cfa_offset 8
 3401              		.cfi_offset 4, -8
 3402              		.cfi_offset 14, -4
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3403              		.loc 1 3768 0
 3404 0002 406A     		ldr	r0, [r0, #36]
 3405              	.LVL203:
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3406              		.loc 1 3770 0
 3407 0004 036F     		ldr	r3, [r0, #112]
 3408 0006 0022     		movs	r2, #0
 3409 0008 5A63     		str	r2, [r3, #52]
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3410              		.loc 1 3773 0
 3411 000a C36E     		ldr	r3, [r0, #108]
 3412 000c 002B     		cmp	r3, #0
 3413 000e 02D0     		beq	.L106
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3414              		.loc 1 3775 0
 3415 0010 5B6B     		ldr	r3, [r3, #52]
 3416 0012 002B     		cmp	r3, #0
 3417 0014 14D1     		bne	.L105
 3418              	.L106:
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3419              		.loc 1 3782 0
 3420 0016 0023     		movs	r3, #0
 3421 0018 5222     		movs	r2, #82
 3422 001a 8352     		strh	r3, [r0, r2]
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3423              		.loc 1 3783 0
 3424 001c 0832     		adds	r2, r2, #8
 3425 001e 8352     		strh	r3, [r0, r2]
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3426              		.loc 1 3786 0
 3427 0020 2632     		adds	r2, r2, #38
 3428 0022 8350     		str	r3, [r0, r2]
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3429              		.loc 1 3789 0
 3430 0024 0268     		ldr	r2, [r0]
 3431 0026 0F21     		movs	r1, #15
 3432 0028 1162     		str	r1, [r2, #32]
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3433              		.loc 1 3792 0
 3434 002a 0168     		ldr	r1, [r0]
 3435 002c 8C69     		ldr	r4, [r1, #24]
 3436 002e 0822     		movs	r2, #8
 3437 0030 2243     		orrs	r2, r4
 3438 0032 8A61     		str	r2, [r1, #24]
3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3439              		.loc 1 3795 0
 3440 0034 2022     		movs	r2, #32
 3441 0036 8267     		str	r2, [r0, #120]
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3442              		.loc 1 3796 0
 3443 0038 C267     		str	r2, [r0, #124]
ARM GAS  /tmp/ccQJ5CSb.s 			page 143


3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3444              		.loc 1 3797 0
 3445 003a 0366     		str	r3, [r0, #96]
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3446              		.loc 1 3805 0
 3447 003c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3448              	.LVL204:
 3449              	.L105:
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3450              		.loc 1 3807 0
 3451              		@ sp needed
 3452 0040 10BD     		pop	{r4, pc}
 3453              		.cfi_endproc
 3454              	.LFE96:
 3456 0042 C046     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3457              		.align	2
 3458              		.code	16
 3459              		.thumb_func
 3461              	UART_DMATxAbortCallback:
 3462              	.LFB95:
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3463              		.loc 1 3717 0
 3464              		.cfi_startproc
 3465              		@ args = 0, pretend = 0, frame = 0
 3466              		@ frame_needed = 0, uses_anonymous_args = 0
 3467              	.LVL205:
 3468 0000 10B5     		push	{r4, lr}
 3469              	.LCFI20:
 3470              		.cfi_def_cfa_offset 8
 3471              		.cfi_offset 4, -8
 3472              		.cfi_offset 14, -4
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3473              		.loc 1 3718 0
 3474 0002 406A     		ldr	r0, [r0, #36]
 3475              	.LVL206:
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3476              		.loc 1 3720 0
 3477 0004 C36E     		ldr	r3, [r0, #108]
 3478 0006 0022     		movs	r2, #0
 3479 0008 5A63     		str	r2, [r3, #52]
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3480              		.loc 1 3723 0
 3481 000a 036F     		ldr	r3, [r0, #112]
 3482 000c 002B     		cmp	r3, #0
 3483 000e 02D0     		beq	.L109
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3484              		.loc 1 3725 0
 3485 0010 5B6B     		ldr	r3, [r3, #52]
 3486 0012 002B     		cmp	r3, #0
 3487 0014 0FD1     		bne	.L108
 3488              	.L109:
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3489              		.loc 1 3732 0
 3490 0016 0023     		movs	r3, #0
 3491 0018 5222     		movs	r2, #82
 3492 001a 8352     		strh	r3, [r0, r2]
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 144


 3493              		.loc 1 3733 0
 3494 001c 0832     		adds	r2, r2, #8
 3495 001e 8352     		strh	r3, [r0, r2]
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3496              		.loc 1 3736 0
 3497 0020 2632     		adds	r2, r2, #38
 3498 0022 8350     		str	r3, [r0, r2]
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3499              		.loc 1 3739 0
 3500 0024 0268     		ldr	r2, [r0]
 3501 0026 0F21     		movs	r1, #15
 3502 0028 1162     		str	r1, [r2, #32]
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3503              		.loc 1 3743 0
 3504 002a 2022     		movs	r2, #32
 3505 002c 8267     		str	r2, [r0, #120]
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3506              		.loc 1 3744 0
 3507 002e C267     		str	r2, [r0, #124]
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3508              		.loc 1 3745 0
 3509 0030 0366     		str	r3, [r0, #96]
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3510              		.loc 1 3753 0
 3511 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3512              	.LVL207:
 3513              	.L108:
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3514              		.loc 1 3755 0
 3515              		@ sp needed
 3516 0036 10BD     		pop	{r4, pc}
 3517              		.cfi_endproc
 3518              	.LFE95:
 3520              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3521              		.align	2
 3522              		.weak	HAL_UART_AbortTransmitCpltCallback
 3523              		.code	16
 3524              		.thumb_func
 3526              	HAL_UART_AbortTransmitCpltCallback:
 3527              	.LFB68:
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3528              		.loc 1 2682 0
 3529              		.cfi_startproc
 3530              		@ args = 0, pretend = 0, frame = 0
 3531              		@ frame_needed = 0, uses_anonymous_args = 0
 3532              		@ link register save eliminated.
 3533              	.LVL208:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3534              		.loc 1 2689 0
 3535              		@ sp needed
 3536 0000 7047     		bx	lr
 3537              		.cfi_endproc
 3538              	.LFE68:
 3540 0002 C046     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3541              		.align	2
 3542              		.global	HAL_UART_AbortTransmit_IT
 3543              		.code	16
ARM GAS  /tmp/ccQJ5CSb.s 			page 145


 3544              		.thumb_func
 3546              	HAL_UART_AbortTransmit_IT:
 3547              	.LFB59:
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
 3548              		.loc 1 2121 0
 3549              		.cfi_startproc
 3550              		@ args = 0, pretend = 0, frame = 0
 3551              		@ frame_needed = 0, uses_anonymous_args = 0
 3552              	.LVL209:
 3553 0000 10B5     		push	{r4, lr}
 3554              	.LCFI21:
 3555              		.cfi_def_cfa_offset 8
 3556              		.cfi_offset 4, -8
 3557              		.cfi_offset 14, -4
 3558 0002 0400     		movs	r4, r0
 3559              	.LBB837:
 3560              	.LBB838:
 3561              	.LBB839:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3562              		.loc 2 386 0
 3563              		.syntax divided
 3564              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3565 0004 EFF31081 		MRS r1, primask
 3566              	@ 0 "" 2
 3567              	.LVL210:
 3568              		.thumb
 3569              		.syntax unified
 3570              	.LBE839:
 3571              	.LBE838:
 3572              	.LBB840:
 3573              	.LBB841:
 3574              		.loc 2 414 0
 3575 0008 0123     		movs	r3, #1
 3576              		.syntax divided
 3577              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3578 000a 83F31088 		MSR primask, r3
 3579              	@ 0 "" 2
 3580              	.LVL211:
 3581              		.thumb
 3582              		.syntax unified
 3583              	.LBE841:
 3584              	.LBE840:
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3585              		.loc 1 2123 0
 3586 000e 0268     		ldr	r2, [r0]
 3587 0010 1368     		ldr	r3, [r2]
 3588 0012 C020     		movs	r0, #192
 3589              	.LVL212:
 3590 0014 8343     		bics	r3, r0
 3591 0016 1360     		str	r3, [r2]
 3592              	.LBB842:
 3593              	.LBB843:
 3594              		.loc 2 414 0
 3595              		.syntax divided
 3596              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3597 0018 81F31088 		MSR primask, r1
 3598              	@ 0 "" 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 146


 3599              		.thumb
 3600              		.syntax unified
 3601              	.LBE843:
 3602              	.LBE842:
 3603              	.LBE837:
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3604              		.loc 1 2126 0
 3605 001c 2368     		ldr	r3, [r4]
 3606 001e 9B68     		ldr	r3, [r3, #8]
 3607 0020 1B06     		lsls	r3, r3, #24
 3608 0022 23D5     		bpl	.L113
 3609              	.LBB844:
 3610              	.LBB845:
 3611              	.LBB846:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3612              		.loc 2 386 0
 3613              		.syntax divided
 3614              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3615 0024 EFF31081 		MRS r1, primask
 3616              	@ 0 "" 2
 3617              	.LVL213:
 3618              		.thumb
 3619              		.syntax unified
 3620              	.LBE846:
 3621              	.LBE845:
 3622              	.LBB847:
 3623              	.LBB848:
 3624              		.loc 2 414 0
 3625 0028 0123     		movs	r3, #1
 3626              		.syntax divided
 3627              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3628 002a 83F31088 		MSR primask, r3
 3629              	@ 0 "" 2
 3630              	.LVL214:
 3631              		.thumb
 3632              		.syntax unified
 3633              	.LBE848:
 3634              	.LBE847:
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3635              		.loc 1 2128 0
 3636 002e 2268     		ldr	r2, [r4]
 3637 0030 9368     		ldr	r3, [r2, #8]
 3638 0032 4038     		subs	r0, r0, #64
 3639 0034 8343     		bics	r3, r0
 3640 0036 9360     		str	r3, [r2, #8]
 3641              	.LBB849:
 3642              	.LBB850:
 3643              		.loc 2 414 0
 3644              		.syntax divided
 3645              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3646 0038 81F31088 		MSR primask, r1
 3647              	@ 0 "" 2
 3648              		.thumb
 3649              		.syntax unified
 3650              	.LBE850:
 3651              	.LBE849:
 3652              	.LBE844:
ARM GAS  /tmp/ccQJ5CSb.s 			page 147


2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3653              		.loc 1 2131 0
 3654 003c E36E     		ldr	r3, [r4, #108]
 3655 003e 002B     		cmp	r3, #0
 3656 0040 0AD0     		beq	.L114
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3657              		.loc 1 2135 0
 3658 0042 104A     		ldr	r2, .L116
 3659 0044 5A63     		str	r2, [r3, #52]
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3660              		.loc 1 2138 0
 3661 0046 E06E     		ldr	r0, [r4, #108]
 3662 0048 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3663              	.LVL215:
 3664 004c 0028     		cmp	r0, #0
 3665 004e 16D0     		beq	.L115
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3666              		.loc 1 2141 0
 3667 0050 E06E     		ldr	r0, [r4, #108]
 3668 0052 436B     		ldr	r3, [r0, #52]
 3669 0054 9847     		blx	r3
 3670              	.LVL216:
 3671 0056 12E0     		b	.L115
 3672              	.L114:
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3673              		.loc 1 2147 0
 3674 0058 0023     		movs	r3, #0
 3675 005a 5222     		movs	r2, #82
 3676 005c A352     		strh	r3, [r4, r2]
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3677              		.loc 1 2150 0
 3678 005e A366     		str	r3, [r4, #104]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3679              		.loc 1 2153 0
 3680 0060 2033     		adds	r3, r3, #32
 3681 0062 A367     		str	r3, [r4, #120]
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3682              		.loc 1 2161 0
 3683 0064 2000     		movs	r0, r4
 3684 0066 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3685              	.LVL217:
 3686 006a 08E0     		b	.L115
 3687              	.L113:
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3688              		.loc 1 2168 0
 3689 006c 0023     		movs	r3, #0
 3690 006e 5222     		movs	r2, #82
 3691 0070 A352     		strh	r3, [r4, r2]
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3692              		.loc 1 2171 0
 3693 0072 A366     		str	r3, [r4, #104]
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3694              		.loc 1 2175 0
 3695 0074 2033     		adds	r3, r3, #32
 3696 0076 A367     		str	r3, [r4, #120]
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3697              		.loc 1 2183 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 148


 3698 0078 2000     		movs	r0, r4
 3699 007a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3700              	.LVL218:
 3701              	.L115:
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3702              		.loc 1 2188 0
 3703 007e 0020     		movs	r0, #0
 3704              		@ sp needed
 3705              	.LVL219:
 3706 0080 10BD     		pop	{r4, pc}
 3707              	.L117:
 3708 0082 C046     		.align	2
 3709              	.L116:
 3710 0084 00000000 		.word	UART_DMATxOnlyAbortCallback
 3711              		.cfi_endproc
 3712              	.LFE59:
 3714              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3715              		.align	2
 3716              		.code	16
 3717              		.thumb_func
 3719              	UART_DMATxOnlyAbortCallback:
 3720              	.LFB97:
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3721              		.loc 1 3819 0
 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 0
 3724              		@ frame_needed = 0, uses_anonymous_args = 0
 3725              	.LVL220:
 3726 0000 10B5     		push	{r4, lr}
 3727              	.LCFI22:
 3728              		.cfi_def_cfa_offset 8
 3729              		.cfi_offset 4, -8
 3730              		.cfi_offset 14, -4
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3731              		.loc 1 3820 0
 3732 0002 406A     		ldr	r0, [r0, #36]
 3733              	.LVL221:
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3734              		.loc 1 3822 0
 3735 0004 0022     		movs	r2, #0
 3736 0006 5223     		movs	r3, #82
 3737 0008 C252     		strh	r2, [r0, r3]
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3738              		.loc 1 3826 0
 3739 000a 323B     		subs	r3, r3, #50
 3740 000c 8367     		str	r3, [r0, #120]
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3741              		.loc 1 3834 0
 3742 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3743              	.LVL222:
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3744              		.loc 1 3836 0
 3745              		@ sp needed
 3746 0012 10BD     		pop	{r4, pc}
 3747              		.cfi_endproc
 3748              	.LFE97:
 3750              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccQJ5CSb.s 			page 149


 3751              		.align	2
 3752              		.weak	HAL_UART_AbortReceiveCpltCallback
 3753              		.code	16
 3754              		.thumb_func
 3756              	HAL_UART_AbortReceiveCpltCallback:
 3757              	.LFB69:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3758              		.loc 1 2697 0
 3759              		.cfi_startproc
 3760              		@ args = 0, pretend = 0, frame = 0
 3761              		@ frame_needed = 0, uses_anonymous_args = 0
 3762              		@ link register save eliminated.
 3763              	.LVL223:
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3764              		.loc 1 2704 0
 3765              		@ sp needed
 3766 0000 7047     		bx	lr
 3767              		.cfi_endproc
 3768              	.LFE69:
 3770 0002 C046     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3771              		.align	2
 3772              		.global	HAL_UART_AbortReceive_IT
 3773              		.code	16
 3774              		.thumb_func
 3776              	HAL_UART_AbortReceive_IT:
 3777              	.LFB60:
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3778              		.loc 1 2205 0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 0
 3781              		@ frame_needed = 0, uses_anonymous_args = 0
 3782              	.LVL224:
 3783 0000 70B5     		push	{r4, r5, r6, lr}
 3784              	.LCFI23:
 3785              		.cfi_def_cfa_offset 16
 3786              		.cfi_offset 4, -16
 3787              		.cfi_offset 5, -12
 3788              		.cfi_offset 6, -8
 3789              		.cfi_offset 14, -4
 3790 0002 0400     		movs	r4, r0
 3791              	.LBB851:
 3792              	.LBB852:
 3793              	.LBB853:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3794              		.loc 2 386 0
 3795              		.syntax divided
 3796              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3797 0004 EFF31080 		MRS r0, primask
 3798              	@ 0 "" 2
 3799              	.LVL225:
 3800              		.thumb
 3801              		.syntax unified
 3802              	.LBE853:
 3803              	.LBE852:
 3804              	.LBB854:
 3805              	.LBB855:
 3806              		.loc 2 414 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 150


 3807 0008 0121     		movs	r1, #1
 3808              		.syntax divided
 3809              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3810 000a 81F31088 		MSR primask, r1
 3811              	@ 0 "" 2
 3812              	.LVL226:
 3813              		.thumb
 3814              		.syntax unified
 3815              	.LBE855:
 3816              	.LBE854:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3817              		.loc 1 2207 0
 3818 000e 2268     		ldr	r2, [r4]
 3819 0010 1568     		ldr	r5, [r2]
 3820 0012 2E4B     		ldr	r3, .L125
 3821 0014 2B40     		ands	r3, r5
 3822 0016 1360     		str	r3, [r2]
 3823              	.LBB856:
 3824              	.LBB857:
 3825              		.loc 2 414 0
 3826              		.syntax divided
 3827              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3828 0018 80F31088 		MSR primask, r0
 3829              	@ 0 "" 2
 3830              		.thumb
 3831              		.syntax unified
 3832              	.LBE857:
 3833              	.LBE856:
 3834              	.LBE851:
 3835              	.LBB858:
 3836              	.LBB859:
 3837              	.LBB860:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3838              		.loc 2 386 0
 3839              		.syntax divided
 3840              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3841 001c EFF31080 		MRS r0, primask
 3842              	@ 0 "" 2
 3843              	.LVL227:
 3844              		.thumb
 3845              		.syntax unified
 3846              	.LBE860:
 3847              	.LBE859:
 3848              	.LBB861:
 3849              	.LBB862:
 3850              		.loc 2 414 0
 3851 0020 0123     		movs	r3, #1
 3852              		.syntax divided
 3853              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3854 0022 83F31088 		MSR primask, r3
 3855              	@ 0 "" 2
 3856              	.LVL228:
 3857              		.thumb
 3858              		.syntax unified
 3859              	.LBE862:
 3860              	.LBE861:
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 151


 3861              		.loc 1 2208 0
 3862 0026 2268     		ldr	r2, [r4]
 3863 0028 9368     		ldr	r3, [r2, #8]
 3864 002a 8B43     		bics	r3, r1
 3865 002c 9360     		str	r3, [r2, #8]
 3866              	.LBB863:
 3867              	.LBB864:
 3868              		.loc 2 414 0
 3869              		.syntax divided
 3870              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3871 002e 80F31088 		MSR primask, r0
 3872              	@ 0 "" 2
 3873              		.thumb
 3874              		.syntax unified
 3875              	.LBE864:
 3876              	.LBE863:
 3877              	.LBE858:
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3878              		.loc 1 2211 0
 3879 0032 236E     		ldr	r3, [r4, #96]
 3880 0034 012B     		cmp	r3, #1
 3881 0036 0AD1     		bne	.L121
 3882              	.LBB865:
 3883              	.LBB866:
 3884              	.LBB867:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3885              		.loc 2 386 0
 3886              		.syntax divided
 3887              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3888 0038 EFF31081 		MRS r1, primask
 3889              	@ 0 "" 2
 3890              	.LVL229:
 3891              		.thumb
 3892              		.syntax unified
 3893              	.LBE867:
 3894              	.LBE866:
 3895              	.LBB868:
 3896              	.LBB869:
 3897              		.loc 2 414 0
 3898              		.syntax divided
 3899              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3900 003c 83F31088 		MSR primask, r3
 3901              	@ 0 "" 2
 3902              	.LVL230:
 3903              		.thumb
 3904              		.syntax unified
 3905              	.LBE869:
 3906              	.LBE868:
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3907              		.loc 1 2213 0
 3908 0040 2268     		ldr	r2, [r4]
 3909 0042 1368     		ldr	r3, [r2]
 3910 0044 1020     		movs	r0, #16
 3911 0046 8343     		bics	r3, r0
 3912 0048 1360     		str	r3, [r2]
 3913              	.LBB870:
 3914              	.LBB871:
ARM GAS  /tmp/ccQJ5CSb.s 			page 152


 3915              		.loc 2 414 0
 3916              		.syntax divided
 3917              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3918 004a 81F31088 		MSR primask, r1
 3919              	@ 0 "" 2
 3920              		.thumb
 3921              		.syntax unified
 3922              	.L121:
 3923              	.LBE871:
 3924              	.LBE870:
 3925              	.LBE865:
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3926              		.loc 1 2217 0
 3927 004e 2368     		ldr	r3, [r4]
 3928 0050 9A68     		ldr	r2, [r3, #8]
 3929 0052 5206     		lsls	r2, r2, #25
 3930 0054 2CD5     		bpl	.L122
 3931              	.LBB872:
 3932              	.LBB873:
 3933              	.LBB874:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3934              		.loc 2 386 0
 3935              		.syntax divided
 3936              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3937 0056 EFF31081 		MRS r1, primask
 3938              	@ 0 "" 2
 3939              	.LVL231:
 3940              		.thumb
 3941              		.syntax unified
 3942              	.LBE874:
 3943              	.LBE873:
 3944              	.LBB875:
 3945              	.LBB876:
 3946              		.loc 2 414 0
 3947 005a 0123     		movs	r3, #1
 3948              		.syntax divided
 3949              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3950 005c 83F31088 		MSR primask, r3
 3951              	@ 0 "" 2
 3952              	.LVL232:
 3953              		.thumb
 3954              		.syntax unified
 3955              	.LBE876:
 3956              	.LBE875:
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3957              		.loc 1 2219 0
 3958 0060 2268     		ldr	r2, [r4]
 3959 0062 9368     		ldr	r3, [r2, #8]
 3960 0064 4020     		movs	r0, #64
 3961 0066 8343     		bics	r3, r0
 3962 0068 9360     		str	r3, [r2, #8]
 3963              	.LBB877:
 3964              	.LBB878:
 3965              		.loc 2 414 0
 3966              		.syntax divided
 3967              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3968 006a 81F31088 		MSR primask, r1
ARM GAS  /tmp/ccQJ5CSb.s 			page 153


 3969              	@ 0 "" 2
 3970              		.thumb
 3971              		.syntax unified
 3972              	.LBE878:
 3973              	.LBE877:
 3974              	.LBE872:
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3975              		.loc 1 2222 0
 3976 006e 236F     		ldr	r3, [r4, #112]
 3977 0070 002B     		cmp	r3, #0
 3978 0072 0AD0     		beq	.L123
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3979              		.loc 1 2226 0
 3980 0074 164A     		ldr	r2, .L125+4
 3981 0076 5A63     		str	r2, [r3, #52]
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3982              		.loc 1 2229 0
 3983 0078 206F     		ldr	r0, [r4, #112]
 3984 007a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3985              	.LVL233:
 3986 007e 0028     		cmp	r0, #0
 3987 0080 22D0     		beq	.L124
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3988              		.loc 1 2232 0
 3989 0082 206F     		ldr	r0, [r4, #112]
 3990 0084 436B     		ldr	r3, [r0, #52]
 3991 0086 9847     		blx	r3
 3992              	.LVL234:
 3993 0088 1EE0     		b	.L124
 3994              	.L123:
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3995              		.loc 1 2238 0
 3996 008a 0023     		movs	r3, #0
 3997 008c 5A22     		movs	r2, #90
 3998 008e A352     		strh	r3, [r4, r2]
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3999              		.loc 1 2241 0
 4000 0090 6365     		str	r3, [r4, #84]
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4001              		.loc 1 2244 0
 4002 0092 2268     		ldr	r2, [r4]
 4003 0094 0F21     		movs	r1, #15
 4004 0096 1162     		str	r1, [r2, #32]
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4005              		.loc 1 2247 0
 4006 0098 2168     		ldr	r1, [r4]
 4007 009a 8869     		ldr	r0, [r1, #24]
 4008 009c 0822     		movs	r2, #8
 4009 009e 0243     		orrs	r2, r0
 4010 00a0 8A61     		str	r2, [r1, #24]
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4011              		.loc 1 2250 0
 4012 00a2 2022     		movs	r2, #32
 4013 00a4 E267     		str	r2, [r4, #124]
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4014              		.loc 1 2251 0
 4015 00a6 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccQJ5CSb.s 			page 154


2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4016              		.loc 1 2259 0
 4017 00a8 2000     		movs	r0, r4
 4018 00aa FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4019              	.LVL235:
 4020 00ae 0BE0     		b	.L124
 4021              	.L122:
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4022              		.loc 1 2266 0
 4023 00b0 0022     		movs	r2, #0
 4024 00b2 5A21     		movs	r1, #90
 4025 00b4 6252     		strh	r2, [r4, r1]
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4026              		.loc 1 2269 0
 4027 00b6 6265     		str	r2, [r4, #84]
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4028              		.loc 1 2272 0
 4029 00b8 4B39     		subs	r1, r1, #75
 4030 00ba 1962     		str	r1, [r3, #32]
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4031              		.loc 1 2275 0
 4032 00bc 2023     		movs	r3, #32
 4033 00be E367     		str	r3, [r4, #124]
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4034              		.loc 1 2276 0
 4035 00c0 2266     		str	r2, [r4, #96]
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4036              		.loc 1 2284 0
 4037 00c2 2000     		movs	r0, r4
 4038 00c4 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4039              	.LVL236:
 4040              	.L124:
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4041              		.loc 1 2289 0
 4042 00c8 0020     		movs	r0, #0
 4043              		@ sp needed
 4044              	.LVL237:
 4045 00ca 70BD     		pop	{r4, r5, r6, pc}
 4046              	.L126:
 4047              		.align	2
 4048              	.L125:
 4049 00cc DFFEFFFF 		.word	-289
 4050 00d0 00000000 		.word	UART_DMARxOnlyAbortCallback
 4051              		.cfi_endproc
 4052              	.LFE60:
 4054              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4055              		.align	2
 4056              		.code	16
 4057              		.thumb_func
 4059              	UART_DMARxOnlyAbortCallback:
 4060              	.LFB98:
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4061              		.loc 1 3847 0
 4062              		.cfi_startproc
 4063              		@ args = 0, pretend = 0, frame = 0
 4064              		@ frame_needed = 0, uses_anonymous_args = 0
 4065              	.LVL238:
ARM GAS  /tmp/ccQJ5CSb.s 			page 155


 4066 0000 10B5     		push	{r4, lr}
 4067              	.LCFI24:
 4068              		.cfi_def_cfa_offset 8
 4069              		.cfi_offset 4, -8
 4070              		.cfi_offset 14, -4
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4071              		.loc 1 3848 0
 4072 0002 406A     		ldr	r0, [r0, #36]
 4073              	.LVL239:
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4074              		.loc 1 3850 0
 4075 0004 0022     		movs	r2, #0
 4076 0006 5A23     		movs	r3, #90
 4077 0008 C252     		strh	r2, [r0, r3]
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4078              		.loc 1 3853 0
 4079 000a 0368     		ldr	r3, [r0]
 4080 000c 0F21     		movs	r1, #15
 4081 000e 1962     		str	r1, [r3, #32]
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4082              		.loc 1 3856 0
 4083 0010 0168     		ldr	r1, [r0]
 4084 0012 8C69     		ldr	r4, [r1, #24]
 4085 0014 0823     		movs	r3, #8
 4086 0016 2343     		orrs	r3, r4
 4087 0018 8B61     		str	r3, [r1, #24]
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4088              		.loc 1 3859 0
 4089 001a 2023     		movs	r3, #32
 4090 001c C367     		str	r3, [r0, #124]
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4091              		.loc 1 3860 0
 4092 001e 0266     		str	r2, [r0, #96]
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4093              		.loc 1 3868 0
 4094 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4095              	.LVL240:
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4096              		.loc 1 3870 0
 4097              		@ sp needed
 4098 0024 10BD     		pop	{r4, pc}
 4099              		.cfi_endproc
 4100              	.LFE98:
 4102              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 4103              		.align	2
 4104              		.weak	HAL_UARTEx_RxEventCallback
 4105              		.code	16
 4106              		.thumb_func
 4108              	HAL_UARTEx_RxEventCallback:
 4109              	.LFB70:
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4110              		.loc 1 2714 0
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 0
 4113              		@ frame_needed = 0, uses_anonymous_args = 0
 4114              		@ link register save eliminated.
 4115              	.LVL241:
ARM GAS  /tmp/ccQJ5CSb.s 			page 156


2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4116              		.loc 1 2722 0
 4117              		@ sp needed
 4118 0000 7047     		bx	lr
 4119              		.cfi_endproc
 4120              	.LFE70:
 4122 0002 C046     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4123              		.align	2
 4124              		.global	HAL_UART_IRQHandler
 4125              		.code	16
 4126              		.thumb_func
 4128              	HAL_UART_IRQHandler:
 4129              	.LFB61:
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4130              		.loc 1 2297 0
 4131              		.cfi_startproc
 4132              		@ args = 0, pretend = 0, frame = 0
 4133              		@ frame_needed = 0, uses_anonymous_args = 0
 4134              	.LVL242:
 4135 0000 70B5     		push	{r4, r5, r6, lr}
 4136              	.LCFI25:
 4137              		.cfi_def_cfa_offset 16
 4138              		.cfi_offset 4, -16
 4139              		.cfi_offset 5, -12
 4140              		.cfi_offset 6, -8
 4141              		.cfi_offset 14, -4
 4142 0002 0400     		movs	r4, r0
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4143              		.loc 1 2298 0
 4144 0004 0168     		ldr	r1, [r0]
 4145 0006 CB69     		ldr	r3, [r1, #28]
 4146              	.LVL243:
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4147              		.loc 1 2299 0
 4148 0008 0D68     		ldr	r5, [r1]
 4149              	.LVL244:
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4150              		.loc 1 2300 0
 4151 000a 8868     		ldr	r0, [r1, #8]
 4152              	.LVL245:
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == 0U)
 4153              		.loc 1 2306 0
 4154 000c A34A     		ldr	r2, .L149
 4155 000e 1A40     		ands	r2, r3
 4156              	.LVL246:
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4157              		.loc 1 2307 0
 4158 0010 0AD1     		bne	.L130
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 4159              		.loc 1 2310 0
 4160 0012 9E06     		lsls	r6, r3, #26
 4161 0014 08D5     		bpl	.L130
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4162              		.loc 1 2311 0
 4163 0016 AE06     		lsls	r6, r5, #26
 4164 0018 06D5     		bpl	.L130
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccQJ5CSb.s 			page 157


 4165              		.loc 1 2313 0
 4166 001a 636E     		ldr	r3, [r4, #100]
 4167              	.LVL247:
 4168 001c 002B     		cmp	r3, #0
 4169 001e 00D1     		bne	.LCB2977
 4170 0020 3AE1     		b	.L129	@long jump
 4171              	.LCB2977:
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4172              		.loc 1 2315 0
 4173 0022 2000     		movs	r0, r4
 4174              	.LVL248:
 4175 0024 9847     		blx	r3
 4176              	.LVL249:
 4177 0026 37E1     		b	.L129
 4178              	.LVL250:
 4179              	.L130:
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 4180              		.loc 1 2322 0
 4181 0028 002A     		cmp	r2, #0
 4182 002a 00D1     		bne	.LCB2991
 4183 002c 8AE0     		b	.L132	@long jump
 4184              	.LCB2991:
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 4185              		.loc 1 2323 0
 4186 002e 0122     		movs	r2, #1
 4187              	.LVL251:
 4188 0030 1040     		ands	r0, r2
 4189              	.LVL252:
 4190 0032 03D1     		bne	.L133
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4191              		.loc 1 2324 0
 4192 0034 9A4A     		ldr	r2, .L149+4
 4193 0036 1542     		tst	r5, r2
 4194 0038 00D1     		bne	.LCB3001
 4195 003a 83E0     		b	.L132	@long jump
 4196              	.LCB3001:
 4197              	.L133:
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4198              		.loc 1 2327 0
 4199 003c DA07     		lsls	r2, r3, #31
 4200 003e 07D5     		bpl	.L134
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4201              		.loc 1 2327 0 is_stmt 0 discriminator 1
 4202 0040 EA05     		lsls	r2, r5, #23
 4203 0042 05D5     		bpl	.L134
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4204              		.loc 1 2329 0 is_stmt 1
 4205 0044 0122     		movs	r2, #1
 4206 0046 0A62     		str	r2, [r1, #32]
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4207              		.loc 1 2331 0
 4208 0048 8021     		movs	r1, #128
 4209 004a 6658     		ldr	r6, [r4, r1]
 4210 004c 3243     		orrs	r2, r6
 4211 004e 6250     		str	r2, [r4, r1]
 4212              	.L134:
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQJ5CSb.s 			page 158


 4213              		.loc 1 2335 0
 4214 0050 9A07     		lsls	r2, r3, #30
 4215 0052 09D5     		bpl	.L135
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4216              		.loc 1 2335 0 is_stmt 0 discriminator 1
 4217 0054 0028     		cmp	r0, #0
 4218 0056 07D0     		beq	.L135
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4219              		.loc 1 2337 0 is_stmt 1
 4220 0058 2268     		ldr	r2, [r4]
 4221 005a 0221     		movs	r1, #2
 4222 005c 1162     		str	r1, [r2, #32]
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4223              		.loc 1 2339 0
 4224 005e 7E31     		adds	r1, r1, #126
 4225 0060 6658     		ldr	r6, [r4, r1]
 4226 0062 0422     		movs	r2, #4
 4227 0064 3243     		orrs	r2, r6
 4228 0066 6250     		str	r2, [r4, r1]
 4229              	.L135:
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4230              		.loc 1 2343 0
 4231 0068 5A07     		lsls	r2, r3, #29
 4232 006a 09D5     		bpl	.L136
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4233              		.loc 1 2343 0 is_stmt 0 discriminator 1
 4234 006c 0028     		cmp	r0, #0
 4235 006e 07D0     		beq	.L136
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4236              		.loc 1 2345 0 is_stmt 1
 4237 0070 2268     		ldr	r2, [r4]
 4238 0072 0421     		movs	r1, #4
 4239 0074 1162     		str	r1, [r2, #32]
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4240              		.loc 1 2347 0
 4241 0076 7C31     		adds	r1, r1, #124
 4242 0078 6658     		ldr	r6, [r4, r1]
 4243 007a 0222     		movs	r2, #2
 4244 007c 3243     		orrs	r2, r6
 4245 007e 6250     		str	r2, [r4, r1]
 4246              	.L136:
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 4247              		.loc 1 2351 0
 4248 0080 1A07     		lsls	r2, r3, #28
 4249 0082 0AD5     		bpl	.L137
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 4250              		.loc 1 2352 0
 4251 0084 AA06     		lsls	r2, r5, #26
 4252 0086 01D4     		bmi	.L138
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 4253              		.loc 1 2352 0 is_stmt 0 discriminator 1
 4254 0088 0028     		cmp	r0, #0
 4255 008a 06D0     		beq	.L137
 4256              	.L138:
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4257              		.loc 1 2355 0 is_stmt 1
 4258 008c 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccQJ5CSb.s 			page 159


 4259 008e 0822     		movs	r2, #8
 4260 0090 0A62     		str	r2, [r1, #32]
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4261              		.loc 1 2357 0
 4262 0092 8021     		movs	r1, #128
 4263 0094 6058     		ldr	r0, [r4, r1]
 4264 0096 0243     		orrs	r2, r0
 4265 0098 6250     		str	r2, [r4, r1]
 4266              	.L137:
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4267              		.loc 1 2361 0
 4268 009a 1A05     		lsls	r2, r3, #20
 4269 009c 0AD5     		bpl	.L139
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4270              		.loc 1 2361 0 is_stmt 0 discriminator 1
 4271 009e 6A01     		lsls	r2, r5, #5
 4272 00a0 08D5     		bpl	.L139
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4273              		.loc 1 2363 0 is_stmt 1
 4274 00a2 2268     		ldr	r2, [r4]
 4275 00a4 8021     		movs	r1, #128
 4276 00a6 0901     		lsls	r1, r1, #4
 4277 00a8 1162     		str	r1, [r2, #32]
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4278              		.loc 1 2365 0
 4279 00aa 8021     		movs	r1, #128
 4280 00ac 6058     		ldr	r0, [r4, r1]
 4281 00ae 2022     		movs	r2, #32
 4282 00b0 0243     		orrs	r2, r0
 4283 00b2 6250     		str	r2, [r4, r1]
 4284              	.L139:
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4285              		.loc 1 2369 0
 4286 00b4 8022     		movs	r2, #128
 4287 00b6 A258     		ldr	r2, [r4, r2]
 4288 00b8 002A     		cmp	r2, #0
 4289 00ba 00D1     		bne	.LCB3098
 4290 00bc ECE0     		b	.L129	@long jump
 4291              	.LCB3098:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 4292              		.loc 1 2372 0
 4293 00be 9B06     		lsls	r3, r3, #26
 4294 00c0 06D5     		bpl	.L140
 4295              	.LVL253:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4296              		.loc 1 2373 0
 4297 00c2 AB06     		lsls	r3, r5, #26
 4298 00c4 04D5     		bpl	.L140
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4299              		.loc 1 2375 0
 4300 00c6 636E     		ldr	r3, [r4, #100]
 4301 00c8 002B     		cmp	r3, #0
 4302 00ca 01D0     		beq	.L140
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4303              		.loc 1 2377 0
 4304 00cc 2000     		movs	r0, r4
 4305 00ce 9847     		blx	r3
ARM GAS  /tmp/ccQJ5CSb.s 			page 160


 4306              	.LVL254:
 4307              	.L140:
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4308              		.loc 1 2386 0
 4309 00d0 8023     		movs	r3, #128
 4310 00d2 E258     		ldr	r2, [r4, r3]
 4311              	.LVL255:
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4312              		.loc 1 2387 0
 4313 00d4 2368     		ldr	r3, [r4]
 4314 00d6 9B68     		ldr	r3, [r3, #8]
 4315 00d8 5B06     		lsls	r3, r3, #25
 4316 00da 02D4     		bmi	.L141
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4317              		.loc 1 2388 0 discriminator 1
 4318 00dc 2823     		movs	r3, #40
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4319              		.loc 1 2387 0 discriminator 1
 4320 00de 1342     		tst	r3, r2
 4321 00e0 29D0     		beq	.L142
 4322              	.L141:
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4323              		.loc 1 2393 0
 4324 00e2 2000     		movs	r0, r4
 4325 00e4 FFF7FEFF 		bl	UART_EndRxTransfer
 4326              	.LVL256:
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4327              		.loc 1 2396 0
 4328 00e8 2368     		ldr	r3, [r4]
 4329 00ea 9B68     		ldr	r3, [r3, #8]
 4330 00ec 5B06     		lsls	r3, r3, #25
 4331 00ee 1ED5     		bpl	.L143
 4332              	.LBB879:
 4333              	.LBB880:
 4334              	.LBB881:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4335              		.loc 2 386 0
 4336              		.syntax divided
 4337              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4338 00f0 EFF31081 		MRS r1, primask
 4339              	@ 0 "" 2
 4340              	.LVL257:
 4341              		.thumb
 4342              		.syntax unified
 4343              	.LBE881:
 4344              	.LBE880:
 4345              	.LBB882:
 4346              	.LBB883:
 4347              		.loc 2 414 0
 4348 00f4 0123     		movs	r3, #1
 4349              		.syntax divided
 4350              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4351 00f6 83F31088 		MSR primask, r3
 4352              	@ 0 "" 2
 4353              	.LVL258:
 4354              		.thumb
 4355              		.syntax unified
ARM GAS  /tmp/ccQJ5CSb.s 			page 161


 4356              	.LBE883:
 4357              	.LBE882:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4358              		.loc 1 2398 0
 4359 00fa 2268     		ldr	r2, [r4]
 4360 00fc 9368     		ldr	r3, [r2, #8]
 4361 00fe 4020     		movs	r0, #64
 4362 0100 8343     		bics	r3, r0
 4363 0102 9360     		str	r3, [r2, #8]
 4364              	.LBB884:
 4365              	.LBB885:
 4366              		.loc 2 414 0
 4367              		.syntax divided
 4368              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4369 0104 81F31088 		MSR primask, r1
 4370              	@ 0 "" 2
 4371              		.thumb
 4372              		.syntax unified
 4373              	.LBE885:
 4374              	.LBE884:
 4375              	.LBE879:
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 4376              		.loc 1 2401 0
 4377 0108 236F     		ldr	r3, [r4, #112]
 4378 010a 002B     		cmp	r3, #0
 4379 010c 0BD0     		beq	.L144
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4380              		.loc 1 2405 0
 4381 010e 654A     		ldr	r2, .L149+8
 4382 0110 5A63     		str	r2, [r3, #52]
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
 4383              		.loc 1 2408 0
 4384 0112 206F     		ldr	r0, [r4, #112]
 4385 0114 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4386              	.LVL259:
 4387 0118 0028     		cmp	r0, #0
 4388 011a 00D1     		bne	.LCB3177
 4389 011c BCE0     		b	.L129	@long jump
 4390              	.LCB3177:
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 4391              		.loc 1 2411 0
 4392 011e 206F     		ldr	r0, [r4, #112]
 4393 0120 436B     		ldr	r3, [r0, #52]
 4394 0122 9847     		blx	r3
 4395              	.LVL260:
 4396 0124 B8E0     		b	.L129
 4397              	.L144:
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4398              		.loc 1 2422 0
 4399 0126 2000     		movs	r0, r4
 4400 0128 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4401              	.LVL261:
 4402 012c B4E0     		b	.L129
 4403              	.L143:
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4404              		.loc 1 2435 0
 4405 012e 2000     		movs	r0, r4
ARM GAS  /tmp/ccQJ5CSb.s 			page 162


 4406 0130 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4407              	.LVL262:
 4408 0134 B0E0     		b	.L129
 4409              	.LVL263:
 4410              	.L142:
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4411              		.loc 1 2448 0
 4412 0136 2000     		movs	r0, r4
 4413 0138 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4414              	.LVL264:
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4415              		.loc 1 2450 0
 4416 013c 0022     		movs	r2, #0
 4417 013e 8023     		movs	r3, #128
 4418 0140 E250     		str	r2, [r4, r3]
 4419 0142 A9E0     		b	.L129
 4420              	.LVL265:
 4421              	.L132:
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 4422              		.loc 1 2459 0
 4423 0144 226E     		ldr	r2, [r4, #96]
 4424 0146 012A     		cmp	r2, #1
 4425 0148 00D0     		beq	.LCB3221
 4426 014a 94E0     		b	.L145	@long jump
 4427              	.LCB3221:
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 4428              		.loc 1 2460 0
 4429 014c DA06     		lsls	r2, r3, #27
 4430 014e 00D4     		bmi	.LCB3225
 4431 0150 91E0     		b	.L145	@long jump
 4432              	.LCB3225:
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4433              		.loc 1 2461 0
 4434 0152 EA06     		lsls	r2, r5, #27
 4435 0154 00D4     		bmi	.LCB3229
 4436 0156 8EE0     		b	.L145	@long jump
 4437              	.LCB3229:
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4438              		.loc 1 2463 0
 4439 0158 1023     		movs	r3, #16
 4440              	.LVL266:
 4441 015a 0B62     		str	r3, [r1, #32]
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4442              		.loc 1 2466 0
 4443 015c 2368     		ldr	r3, [r4]
 4444 015e 9B68     		ldr	r3, [r3, #8]
 4445 0160 5B06     		lsls	r3, r3, #25
 4446 0162 50D5     		bpl	.L146
 4447              	.LBB886:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 4448              		.loc 1 2472 0
 4449 0164 226F     		ldr	r2, [r4, #112]
 4450 0166 1368     		ldr	r3, [r2]
 4451 0168 5B68     		ldr	r3, [r3, #4]
 4452 016a 9BB2     		uxth	r3, r3
 4453              	.LVL267:
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
ARM GAS  /tmp/ccQJ5CSb.s 			page 163


 4454              		.loc 1 2473 0
 4455 016c 002B     		cmp	r3, #0
 4456 016e 00D1     		bne	.LCB3247
 4457 0170 92E0     		b	.L129	@long jump
 4458              	.LCB3247:
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4459              		.loc 1 2474 0
 4460 0172 5821     		movs	r1, #88
 4461 0174 615A     		ldrh	r1, [r4, r1]
 4462 0176 8B42     		cmp	r3, r1
 4463 0178 00D3     		bcc	.LCB3251
 4464 017a 8DE0     		b	.L129	@long jump
 4465              	.LCB3251:
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4466              		.loc 1 2477 0
 4467 017c 5A21     		movs	r1, #90
 4468 017e 6352     		strh	r3, [r4, r1]
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4469              		.loc 1 2480 0
 4470 0180 9369     		ldr	r3, [r2, #24]
 4471              	.LVL268:
 4472 0182 202B     		cmp	r3, #32
 4473 0184 35D0     		beq	.L147
 4474              	.LBB887:
 4475              	.LBB888:
 4476              	.LBB889:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4477              		.loc 2 386 0
 4478              		.syntax divided
 4479              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4480 0186 EFF31080 		MRS r0, primask
 4481              	@ 0 "" 2
 4482              	.LVL269:
 4483              		.thumb
 4484              		.syntax unified
 4485              	.LBE889:
 4486              	.LBE888:
 4487              	.LBB890:
 4488              	.LBB891:
 4489              		.loc 2 414 0
 4490 018a 5939     		subs	r1, r1, #89
 4491              	.LVL270:
 4492              		.syntax divided
 4493              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4494 018c 81F31088 		MSR primask, r1
 4495              	@ 0 "" 2
 4496              	.LVL271:
 4497              		.thumb
 4498              		.syntax unified
 4499              	.LBE891:
 4500              	.LBE890:
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4501              		.loc 1 2483 0
 4502 0190 2268     		ldr	r2, [r4]
 4503 0192 1568     		ldr	r5, [r2]
 4504              	.LVL272:
 4505 0194 444B     		ldr	r3, .L149+12
ARM GAS  /tmp/ccQJ5CSb.s 			page 164


 4506 0196 2B40     		ands	r3, r5
 4507 0198 1360     		str	r3, [r2]
 4508              	.LVL273:
 4509              	.LBB892:
 4510              	.LBB893:
 4511              		.loc 2 414 0
 4512              		.syntax divided
 4513              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4514 019a 80F31088 		MSR primask, r0
 4515              	@ 0 "" 2
 4516              		.thumb
 4517              		.syntax unified
 4518              	.LBE893:
 4519              	.LBE892:
 4520              	.LBE887:
 4521              	.LBB894:
 4522              	.LBB895:
 4523              	.LBB896:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4524              		.loc 2 386 0
 4525              		.syntax divided
 4526              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4527 019e EFF31080 		MRS r0, primask
 4528              	@ 0 "" 2
 4529              	.LVL274:
 4530              		.thumb
 4531              		.syntax unified
 4532              	.LBE896:
 4533              	.LBE895:
 4534              	.LBB897:
 4535              	.LBB898:
 4536              		.loc 2 414 0
 4537 01a2 0123     		movs	r3, #1
 4538              		.syntax divided
 4539              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4540 01a4 83F31088 		MSR primask, r3
 4541              	@ 0 "" 2
 4542              	.LVL275:
 4543              		.thumb
 4544              		.syntax unified
 4545              	.LBE898:
 4546              	.LBE897:
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4547              		.loc 1 2484 0
 4548 01a8 2268     		ldr	r2, [r4]
 4549 01aa 9368     		ldr	r3, [r2, #8]
 4550 01ac 8B43     		bics	r3, r1
 4551 01ae 9360     		str	r3, [r2, #8]
 4552              	.LBB899:
 4553              	.LBB900:
 4554              		.loc 2 414 0
 4555              		.syntax divided
 4556              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4557 01b0 80F31088 		MSR primask, r0
 4558              	@ 0 "" 2
 4559              		.thumb
 4560              		.syntax unified
ARM GAS  /tmp/ccQJ5CSb.s 			page 165


 4561              	.LBE900:
 4562              	.LBE899:
 4563              	.LBE894:
 4564              	.LBB901:
 4565              	.LBB902:
 4566              	.LBB903:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4567              		.loc 2 386 0
 4568              		.syntax divided
 4569              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4570 01b4 EFF31081 		MRS r1, primask
 4571              	@ 0 "" 2
 4572              	.LVL276:
 4573              		.thumb
 4574              		.syntax unified
 4575              	.LBE903:
 4576              	.LBE902:
 4577              	.LBB904:
 4578              	.LBB905:
 4579              		.loc 2 414 0
 4580 01b8 0123     		movs	r3, #1
 4581              		.syntax divided
 4582              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4583 01ba 83F31088 		MSR primask, r3
 4584              	@ 0 "" 2
 4585              	.LVL277:
 4586              		.thumb
 4587              		.syntax unified
 4588              	.LBE905:
 4589              	.LBE904:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4590              		.loc 1 2488 0
 4591 01be 2268     		ldr	r2, [r4]
 4592 01c0 9368     		ldr	r3, [r2, #8]
 4593 01c2 4020     		movs	r0, #64
 4594 01c4 8343     		bics	r3, r0
 4595 01c6 9360     		str	r3, [r2, #8]
 4596              	.LBB906:
 4597              	.LBB907:
 4598              		.loc 2 414 0
 4599              		.syntax divided
 4600              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4601 01c8 81F31088 		MSR primask, r1
 4602              	@ 0 "" 2
 4603              		.thumb
 4604              		.syntax unified
 4605              	.LBE907:
 4606              	.LBE906:
 4607              	.LBE901:
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4608              		.loc 1 2491 0
 4609 01cc 2023     		movs	r3, #32
 4610 01ce E367     		str	r3, [r4, #124]
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4611              		.loc 1 2492 0
 4612 01d0 0023     		movs	r3, #0
 4613 01d2 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccQJ5CSb.s 			page 166


 4614              	.LBB908:
 4615              	.LBB909:
 4616              	.LBB910:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4617              		.loc 2 386 0
 4618              		.syntax divided
 4619              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4620 01d4 EFF31081 		MRS r1, primask
 4621              	@ 0 "" 2
 4622              	.LVL278:
 4623              		.thumb
 4624              		.syntax unified
 4625              	.LBE910:
 4626              	.LBE909:
 4627              	.LBB911:
 4628              	.LBB912:
 4629              		.loc 2 414 0
 4630 01d8 0133     		adds	r3, r3, #1
 4631              		.syntax divided
 4632              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4633 01da 83F31088 		MSR primask, r3
 4634              	@ 0 "" 2
 4635              	.LVL279:
 4636              		.thumb
 4637              		.syntax unified
 4638              	.LBE912:
 4639              	.LBE911:
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4640              		.loc 1 2494 0
 4641 01de 2268     		ldr	r2, [r4]
 4642 01e0 1368     		ldr	r3, [r2]
 4643 01e2 3038     		subs	r0, r0, #48
 4644 01e4 8343     		bics	r3, r0
 4645 01e6 1360     		str	r3, [r2]
 4646              	.LBB913:
 4647              	.LBB914:
 4648              		.loc 2 414 0
 4649              		.syntax divided
 4650              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4651 01e8 81F31088 		MSR primask, r1
 4652              	@ 0 "" 2
 4653              		.thumb
 4654              		.syntax unified
 4655              	.LBE914:
 4656              	.LBE913:
 4657              	.LBE908:
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4658              		.loc 1 2497 0
 4659 01ec 206F     		ldr	r0, [r4, #112]
 4660 01ee FFF7FEFF 		bl	HAL_DMA_Abort
 4661              	.LVL280:
 4662              	.L147:
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4663              		.loc 1 2504 0
 4664 01f2 5823     		movs	r3, #88
 4665 01f4 E35A     		ldrh	r3, [r4, r3]
 4666 01f6 5A22     		movs	r2, #90
ARM GAS  /tmp/ccQJ5CSb.s 			page 167


 4667 01f8 A15A     		ldrh	r1, [r4, r2]
 4668 01fa 591A     		subs	r1, r3, r1
 4669 01fc 89B2     		uxth	r1, r1
 4670 01fe 2000     		movs	r0, r4
 4671 0200 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4672              	.LVL281:
 4673 0204 48E0     		b	.L129
 4674              	.LVL282:
 4675              	.L146:
 4676              	.LBE886:
 4677              	.LBB915:
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 4678              		.loc 1 2514 0
 4679 0206 5823     		movs	r3, #88
 4680 0208 E35A     		ldrh	r3, [r4, r3]
 4681 020a 5A22     		movs	r2, #90
 4682 020c A15A     		ldrh	r1, [r4, r2]
 4683 020e 591A     		subs	r1, r3, r1
 4684 0210 89B2     		uxth	r1, r1
 4685              	.LVL283:
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && (nb_rx_data > 0U))
 4686              		.loc 1 2515 0
 4687 0212 A35A     		ldrh	r3, [r4, r2]
 4688 0214 9BB2     		uxth	r3, r3
 4689 0216 002B     		cmp	r3, #0
 4690 0218 3ED0     		beq	.L129
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4691              		.loc 1 2516 0
 4692 021a 0029     		cmp	r1, #0
 4693 021c 3CD0     		beq	.L129
 4694              	.LBB916:
 4695              	.LBB917:
 4696              	.LBB918:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4697              		.loc 2 386 0
 4698              		.syntax divided
 4699              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4700 021e EFF31085 		MRS r5, primask
 4701              	@ 0 "" 2
 4702              	.LVL284:
 4703              		.thumb
 4704              		.syntax unified
 4705              	.LBE918:
 4706              	.LBE917:
 4707              	.LBB919:
 4708              	.LBB920:
 4709              		.loc 2 414 0
 4710 0222 0120     		movs	r0, #1
 4711              		.syntax divided
 4712              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4713 0224 80F31088 		MSR primask, r0
 4714              	@ 0 "" 2
 4715              	.LVL285:
 4716              		.thumb
 4717              		.syntax unified
 4718              	.LBE920:
 4719              	.LBE919:
ARM GAS  /tmp/ccQJ5CSb.s 			page 168


2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4720              		.loc 1 2519 0
 4721 0228 2268     		ldr	r2, [r4]
 4722 022a 1668     		ldr	r6, [r2]
 4723 022c 1F4B     		ldr	r3, .L149+16
 4724 022e 3340     		ands	r3, r6
 4725 0230 1360     		str	r3, [r2]
 4726              	.LBB921:
 4727              	.LBB922:
 4728              		.loc 2 414 0
 4729              		.syntax divided
 4730              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4731 0232 85F31088 		MSR primask, r5
 4732              	@ 0 "" 2
 4733              		.thumb
 4734              		.syntax unified
 4735              	.LBE922:
 4736              	.LBE921:
 4737              	.LBE916:
 4738              	.LBB923:
 4739              	.LBB924:
 4740              	.LBB925:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4741              		.loc 2 386 0
 4742              		.syntax divided
 4743              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4744 0236 EFF31085 		MRS r5, primask
 4745              	@ 0 "" 2
 4746              	.LVL286:
 4747              		.thumb
 4748              		.syntax unified
 4749              	.LBE925:
 4750              	.LBE924:
 4751              	.LBB926:
 4752              	.LBB927:
 4753              		.loc 2 414 0
 4754 023a 0123     		movs	r3, #1
 4755              		.syntax divided
 4756              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4757 023c 83F31088 		MSR primask, r3
 4758              	@ 0 "" 2
 4759              	.LVL287:
 4760              		.thumb
 4761              		.syntax unified
 4762              	.LBE927:
 4763              	.LBE926:
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4764              		.loc 1 2522 0
 4765 0240 2268     		ldr	r2, [r4]
 4766 0242 9368     		ldr	r3, [r2, #8]
 4767 0244 8343     		bics	r3, r0
 4768 0246 9360     		str	r3, [r2, #8]
 4769              	.LBB928:
 4770              	.LBB929:
 4771              		.loc 2 414 0
 4772              		.syntax divided
 4773              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccQJ5CSb.s 			page 169


 4774 0248 85F31088 		MSR primask, r5
 4775              	@ 0 "" 2
 4776              		.thumb
 4777              		.syntax unified
 4778              	.LBE929:
 4779              	.LBE928:
 4780              	.LBE923:
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4781              		.loc 1 2525 0
 4782 024c 2023     		movs	r3, #32
 4783 024e E367     		str	r3, [r4, #124]
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4784              		.loc 1 2526 0
 4785 0250 0023     		movs	r3, #0
 4786 0252 2366     		str	r3, [r4, #96]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4787              		.loc 1 2529 0
 4788 0254 6366     		str	r3, [r4, #100]
 4789              	.LBB930:
 4790              	.LBB931:
 4791              	.LBB932:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4792              		.loc 2 386 0
 4793              		.syntax divided
 4794              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4795 0256 EFF31080 		MRS r0, primask
 4796              	@ 0 "" 2
 4797              	.LVL288:
 4798              		.thumb
 4799              		.syntax unified
 4800              	.LBE932:
 4801              	.LBE931:
 4802              	.LBB933:
 4803              	.LBB934:
 4804              		.loc 2 414 0
 4805 025a 0133     		adds	r3, r3, #1
 4806              		.syntax divided
 4807              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4808 025c 83F31088 		MSR primask, r3
 4809              	@ 0 "" 2
 4810              	.LVL289:
 4811              		.thumb
 4812              		.syntax unified
 4813              	.LBE934:
 4814              	.LBE933:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 4815              		.loc 1 2531 0
 4816 0260 2268     		ldr	r2, [r4]
 4817 0262 1368     		ldr	r3, [r2]
 4818 0264 1025     		movs	r5, #16
 4819 0266 AB43     		bics	r3, r5
 4820 0268 1360     		str	r3, [r2]
 4821              	.LBB935:
 4822              	.LBB936:
 4823              		.loc 2 414 0
 4824              		.syntax divided
 4825              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccQJ5CSb.s 			page 170


 4826 026a 80F31088 		MSR primask, r0
 4827              	@ 0 "" 2
 4828              		.thumb
 4829              		.syntax unified
 4830              	.LBE936:
 4831              	.LBE935:
 4832              	.LBE930:
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4833              		.loc 1 2537 0
 4834 026e 2000     		movs	r0, r4
 4835 0270 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4836              	.LVL290:
 4837 0274 10E0     		b	.L129
 4838              	.LVL291:
 4839              	.L145:
 4840              	.LBE915:
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 4841              		.loc 1 2567 0
 4842 0276 1A06     		lsls	r2, r3, #24
 4843 0278 07D5     		bpl	.L148
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4844              		.loc 1 2568 0
 4845 027a 2A06     		lsls	r2, r5, #24
 4846 027c 05D5     		bpl	.L148
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4847              		.loc 1 2570 0
 4848 027e A36E     		ldr	r3, [r4, #104]
 4849              	.LVL292:
 4850 0280 002B     		cmp	r3, #0
 4851 0282 09D0     		beq	.L129
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4852              		.loc 1 2572 0
 4853 0284 2000     		movs	r0, r4
 4854 0286 9847     		blx	r3
 4855              	.LVL293:
 4856 0288 06E0     		b	.L129
 4857              	.LVL294:
 4858              	.L148:
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4859              		.loc 1 2578 0
 4860 028a 5B06     		lsls	r3, r3, #25
 4861 028c 04D5     		bpl	.L129
 4862              	.LVL295:
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4863              		.loc 1 2578 0 is_stmt 0 discriminator 1
 4864 028e 6B06     		lsls	r3, r5, #25
 4865 0290 02D5     		bpl	.L129
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4866              		.loc 1 2580 0 is_stmt 1
 4867 0292 2000     		movs	r0, r4
 4868 0294 FFF7FEFF 		bl	UART_EndTransmit_IT
 4869              	.LVL296:
 4870              	.L129:
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4871              		.loc 1 2584 0
 4872              		@ sp needed
 4873              	.LVL297:
ARM GAS  /tmp/ccQJ5CSb.s 			page 171


 4874 0298 70BD     		pop	{r4, r5, r6, pc}
 4875              	.L150:
 4876 029a C046     		.align	2
 4877              	.L149:
 4878 029c 0F080000 		.word	2063
 4879 02a0 20010004 		.word	67109152
 4880 02a4 00000000 		.word	UART_DMAAbortOnError
 4881 02a8 FFFEFFFF 		.word	-257
 4882 02ac DFFEFFFF 		.word	-289
 4883              		.cfi_endproc
 4884              	.LFE61:
 4886              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 4887              		.align	2
 4888              		.code	16
 4889              		.thumb_func
 4891              	UART_RxISR_8BIT:
 4892              	.LFB102:
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4893              		.loc 1 3966 0
 4894              		.cfi_startproc
 4895              		@ args = 0, pretend = 0, frame = 0
 4896              		@ frame_needed = 0, uses_anonymous_args = 0
 4897              	.LVL298:
 4898 0000 70B5     		push	{r4, r5, r6, lr}
 4899              	.LCFI26:
 4900              		.cfi_def_cfa_offset 16
 4901              		.cfi_offset 4, -16
 4902              		.cfi_offset 5, -12
 4903              		.cfi_offset 6, -8
 4904              		.cfi_offset 14, -4
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 4905              		.loc 1 3967 0
 4906 0002 5C23     		movs	r3, #92
 4907 0004 C35A     		ldrh	r3, [r0, r3]
 4908              	.LVL299:
3968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
3969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 4909              		.loc 1 3971 0
 4910 0006 C26F     		ldr	r2, [r0, #124]
 4911 0008 222A     		cmp	r2, #34
 4912 000a 4AD1     		bne	.L152
3972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4913              		.loc 1 3973 0
 4914 000c 0268     		ldr	r2, [r0]
 4915 000e 928C     		ldrh	r2, [r2, #36]
 4916              	.LVL300:
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
ARM GAS  /tmp/ccQJ5CSb.s 			page 172


 4917              		.loc 1 3974 0
 4918 0010 DBB2     		uxtb	r3, r3
 4919              	.LVL301:
 4920 0012 1340     		ands	r3, r2
 4921 0014 426D     		ldr	r2, [r0, #84]
 4922              	.LVL302:
 4923 0016 1370     		strb	r3, [r2]
 4924              	.LVL303:
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 4925              		.loc 1 3975 0
 4926 0018 436D     		ldr	r3, [r0, #84]
 4927 001a 0133     		adds	r3, r3, #1
 4928 001c 4365     		str	r3, [r0, #84]
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 4929              		.loc 1 3976 0
 4930 001e 5A22     		movs	r2, #90
 4931 0020 835A     		ldrh	r3, [r0, r2]
 4932 0022 013B     		subs	r3, r3, #1
 4933 0024 9BB2     		uxth	r3, r3
 4934 0026 8352     		strh	r3, [r0, r2]
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 4935              		.loc 1 3978 0
 4936 0028 835A     		ldrh	r3, [r0, r2]
 4937 002a 9BB2     		uxth	r3, r3
 4938 002c 002B     		cmp	r3, #0
 4939 002e 3DD1     		bne	.L151
 4940              	.LBB937:
 4941              	.LBB938:
 4942              	.LBB939:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4943              		.loc 2 386 0
 4944              		.syntax divided
 4945              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4946 0030 EFF31084 		MRS r4, primask
 4947              	@ 0 "" 2
 4948              	.LVL304:
 4949              		.thumb
 4950              		.syntax unified
 4951              	.LBE939:
 4952              	.LBE938:
 4953              	.LBB940:
 4954              	.LBB941:
 4955              		.loc 2 414 0
 4956 0034 0121     		movs	r1, #1
 4957              		.syntax divided
 4958              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4959 0036 81F31088 		MSR primask, r1
 4960              	@ 0 "" 2
 4961              	.LVL305:
 4962              		.thumb
 4963              		.syntax unified
 4964              	.LBE941:
 4965              	.LBE940:
3979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/ccQJ5CSb.s 			page 173


 4966              		.loc 1 3981 0
 4967 003a 0268     		ldr	r2, [r0]
 4968 003c 1568     		ldr	r5, [r2]
 4969 003e 1C4B     		ldr	r3, .L156
 4970 0040 2B40     		ands	r3, r5
 4971 0042 1360     		str	r3, [r2]
 4972              	.LBB942:
 4973              	.LBB943:
 4974              		.loc 2 414 0
 4975              		.syntax divided
 4976              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4977 0044 84F31088 		MSR primask, r4
 4978              	@ 0 "" 2
 4979              		.thumb
 4980              		.syntax unified
 4981              	.LBE943:
 4982              	.LBE942:
 4983              	.LBE937:
 4984              	.LBB944:
 4985              	.LBB945:
 4986              	.LBB946:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4987              		.loc 2 386 0
 4988              		.syntax divided
 4989              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4990 0048 EFF31084 		MRS r4, primask
 4991              	@ 0 "" 2
 4992              	.LVL306:
 4993              		.thumb
 4994              		.syntax unified
 4995              	.LBE946:
 4996              	.LBE945:
 4997              	.LBB947:
 4998              	.LBB948:
 4999              		.loc 2 414 0
 5000 004c 0123     		movs	r3, #1
 5001              		.syntax divided
 5002              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5003 004e 83F31088 		MSR primask, r3
 5004              	@ 0 "" 2
 5005              	.LVL307:
 5006              		.thumb
 5007              		.syntax unified
 5008              	.LBE948:
 5009              	.LBE947:
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5010              		.loc 1 3984 0
 5011 0052 0268     		ldr	r2, [r0]
 5012 0054 9368     		ldr	r3, [r2, #8]
 5013 0056 8B43     		bics	r3, r1
 5014 0058 9360     		str	r3, [r2, #8]
 5015              	.LBB949:
 5016              	.LBB950:
 5017              		.loc 2 414 0
 5018              		.syntax divided
ARM GAS  /tmp/ccQJ5CSb.s 			page 174


 5019              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5020 005a 84F31088 		MSR primask, r4
 5021              	@ 0 "" 2
 5022              		.thumb
 5023              		.syntax unified
 5024              	.LBE950:
 5025              	.LBE949:
 5026              	.LBE944:
3985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5027              		.loc 1 3987 0
 5028 005e 2023     		movs	r3, #32
 5029 0060 C367     		str	r3, [r0, #124]
3988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
 5030              		.loc 1 3990 0
 5031 0062 0023     		movs	r3, #0
 5032 0064 4366     		str	r3, [r0, #100]
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check current reception Mode :
3993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5033              		.loc 1 3994 0
 5034 0066 036E     		ldr	r3, [r0, #96]
 5035 0068 012B     		cmp	r3, #1
 5036 006a 17D1     		bne	.L154
3995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set reception type to Standard */
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5037              		.loc 1 3997 0
 5038 006c 0023     		movs	r3, #0
 5039 006e 0366     		str	r3, [r0, #96]
 5040              	.LBB951:
 5041              	.LBB952:
 5042              	.LBB953:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5043              		.loc 2 386 0
 5044              		.syntax divided
 5045              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5046 0070 EFF31084 		MRS r4, primask
 5047              	@ 0 "" 2
 5048              	.LVL308:
 5049              		.thumb
 5050              		.syntax unified
 5051              	.LBE953:
 5052              	.LBE952:
 5053              	.LBB954:
 5054              	.LBB955:
 5055              		.loc 2 414 0
 5056 0074 0133     		adds	r3, r3, #1
 5057              		.syntax divided
 5058              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5059 0076 83F31088 		MSR primask, r3
 5060              	@ 0 "" 2
 5061              	.LVL309:
ARM GAS  /tmp/ccQJ5CSb.s 			page 175


 5062              		.thumb
 5063              		.syntax unified
 5064              	.LBE955:
 5065              	.LBE954:
3998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable IDLE interrupt */
4000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5066              		.loc 1 4000 0
 5067 007a 0168     		ldr	r1, [r0]
 5068 007c 0B68     		ldr	r3, [r1]
 5069 007e 1022     		movs	r2, #16
 5070 0080 9343     		bics	r3, r2
 5071 0082 0B60     		str	r3, [r1]
 5072              	.LBB956:
 5073              	.LBB957:
 5074              		.loc 2 414 0
 5075              		.syntax divided
 5076              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5077 0084 84F31088 		MSR primask, r4
 5078              	@ 0 "" 2
 5079              		.thumb
 5080              		.syntax unified
 5081              	.LBE957:
 5082              	.LBE956:
 5083              	.LBE951:
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 5084              		.loc 1 4002 0
 5085 0088 0368     		ldr	r3, [r0]
 5086 008a D969     		ldr	r1, [r3, #28]
 5087 008c 0A42     		tst	r2, r1
 5088 008e 00D0     		beq	.L155
4003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
4004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear IDLE Flag */
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5089              		.loc 1 4005 0
 5090 0090 1A62     		str	r2, [r3, #32]
 5091              	.L155:
4006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 5092              		.loc 1 4012 0
 5093 0092 5823     		movs	r3, #88
 5094 0094 C15A     		ldrh	r1, [r0, r3]
 5095 0096 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5096              	.LVL310:
 5097 009a 07E0     		b	.L151
 5098              	.LVL311:
 5099              	.L154:
4013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccQJ5CSb.s 			page 176


4017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Standard reception API called */
4018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 5100              		.loc 1 4023 0
 5101 009c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5102              	.LVL312:
 5103 00a0 04E0     		b	.L151
 5104              	.LVL313:
 5105              	.L152:
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5106              		.loc 1 4031 0
 5107 00a2 0268     		ldr	r2, [r0]
 5108 00a4 9169     		ldr	r1, [r2, #24]
 5109 00a6 0823     		movs	r3, #8
 5110              	.LVL314:
 5111 00a8 0B43     		orrs	r3, r1
 5112 00aa 9361     		str	r3, [r2, #24]
 5113              	.LVL315:
 5114              	.L151:
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5115              		.loc 1 4033 0
 5116              		@ sp needed
 5117 00ac 70BD     		pop	{r4, r5, r6, pc}
 5118              	.L157:
 5119 00ae C046     		.align	2
 5120              	.L156:
 5121 00b0 DFFEFFFF 		.word	-289
 5122              		.cfi_endproc
 5123              	.LFE102:
 5125              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 5126              		.align	2
 5127              		.code	16
 5128              		.thumb_func
 5130              	UART_RxISR_16BIT:
 5131              	.LFB103:
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
4036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
4040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
4041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
4042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  /tmp/ccQJ5CSb.s 			page 177


 5132              		.loc 1 4043 0
 5133              		.cfi_startproc
 5134              		@ args = 0, pretend = 0, frame = 0
 5135              		@ frame_needed = 0, uses_anonymous_args = 0
 5136              	.LVL316:
 5137 0000 70B5     		push	{r4, r5, r6, lr}
 5138              	.LCFI27:
 5139              		.cfi_def_cfa_offset 16
 5140              		.cfi_offset 4, -16
 5141              		.cfi_offset 5, -12
 5142              		.cfi_offset 6, -8
 5143              		.cfi_offset 14, -4
4044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 5144              		.loc 1 4045 0
 5145 0002 5C23     		movs	r3, #92
 5146 0004 C25A     		ldrh	r2, [r0, r3]
 5147              	.LVL317:
4046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5148              		.loc 1 4049 0
 5149 0006 C36F     		ldr	r3, [r0, #124]
 5150 0008 222B     		cmp	r3, #34
 5151 000a 49D1     		bne	.L159
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 5152              		.loc 1 4051 0
 5153 000c 0368     		ldr	r3, [r0]
 5154 000e 9B8C     		ldrh	r3, [r3, #36]
 5155              	.LVL318:
4052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 5156              		.loc 1 4053 0
 5157 0010 1A40     		ands	r2, r3
 5158              	.LVL319:
 5159 0012 436D     		ldr	r3, [r0, #84]
 5160              	.LVL320:
 5161 0014 1A80     		strh	r2, [r3]
 5162              	.LVL321:
4054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 5163              		.loc 1 4054 0
 5164 0016 436D     		ldr	r3, [r0, #84]
 5165              	.LVL322:
 5166 0018 0233     		adds	r3, r3, #2
 5167 001a 4365     		str	r3, [r0, #84]
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 5168              		.loc 1 4055 0
 5169 001c 5A22     		movs	r2, #90
 5170 001e 835A     		ldrh	r3, [r0, r2]
 5171 0020 013B     		subs	r3, r3, #1
 5172 0022 9BB2     		uxth	r3, r3
 5173 0024 8352     		strh	r3, [r0, r2]
4056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 5174              		.loc 1 4057 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 178


 5175 0026 835A     		ldrh	r3, [r0, r2]
 5176 0028 9BB2     		uxth	r3, r3
 5177 002a 002B     		cmp	r3, #0
 5178 002c 3DD1     		bne	.L158
 5179              	.LBB958:
 5180              	.LBB959:
 5181              	.LBB960:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5182              		.loc 2 386 0
 5183              		.syntax divided
 5184              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5185 002e EFF31084 		MRS r4, primask
 5186              	@ 0 "" 2
 5187              	.LVL323:
 5188              		.thumb
 5189              		.syntax unified
 5190              	.LBE960:
 5191              	.LBE959:
 5192              	.LBB961:
 5193              	.LBB962:
 5194              		.loc 2 414 0
 5195 0032 0121     		movs	r1, #1
 5196              		.syntax divided
 5197              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5198 0034 81F31088 		MSR primask, r1
 5199              	@ 0 "" 2
 5200              	.LVL324:
 5201              		.thumb
 5202              		.syntax unified
 5203              	.LBE962:
 5204              	.LBE961:
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
4059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5205              		.loc 1 4060 0
 5206 0038 0268     		ldr	r2, [r0]
 5207 003a 1568     		ldr	r5, [r2]
 5208 003c 1B4B     		ldr	r3, .L163
 5209 003e 2B40     		ands	r3, r5
 5210 0040 1360     		str	r3, [r2]
 5211              	.LBB963:
 5212              	.LBB964:
 5213              		.loc 2 414 0
 5214              		.syntax divided
 5215              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5216 0042 84F31088 		MSR primask, r4
 5217              	@ 0 "" 2
 5218              		.thumb
 5219              		.syntax unified
 5220              	.LBE964:
 5221              	.LBE963:
 5222              	.LBE958:
 5223              	.LBB965:
 5224              	.LBB966:
 5225              	.LBB967:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5226              		.loc 2 386 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 179


 5227              		.syntax divided
 5228              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5229 0046 EFF31084 		MRS r4, primask
 5230              	@ 0 "" 2
 5231              	.LVL325:
 5232              		.thumb
 5233              		.syntax unified
 5234              	.LBE967:
 5235              	.LBE966:
 5236              	.LBB968:
 5237              	.LBB969:
 5238              		.loc 2 414 0
 5239 004a 0123     		movs	r3, #1
 5240              		.syntax divided
 5241              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5242 004c 83F31088 		MSR primask, r3
 5243              	@ 0 "" 2
 5244              	.LVL326:
 5245              		.thumb
 5246              		.syntax unified
 5247              	.LBE969:
 5248              	.LBE968:
4061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5249              		.loc 1 4063 0
 5250 0050 0268     		ldr	r2, [r0]
 5251 0052 9368     		ldr	r3, [r2, #8]
 5252 0054 8B43     		bics	r3, r1
 5253 0056 9360     		str	r3, [r2, #8]
 5254              	.LBB970:
 5255              	.LBB971:
 5256              		.loc 2 414 0
 5257              		.syntax divided
 5258              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5259 0058 84F31088 		MSR primask, r4
 5260              	@ 0 "" 2
 5261              		.thumb
 5262              		.syntax unified
 5263              	.LBE971:
 5264              	.LBE970:
 5265              	.LBE965:
4064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5266              		.loc 1 4066 0
 5267 005c 2023     		movs	r3, #32
 5268 005e C367     		str	r3, [r0, #124]
4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
 5269              		.loc 1 4069 0
 5270 0060 0023     		movs	r3, #0
 5271 0062 4366     		str	r3, [r0, #100]
4070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check current reception Mode :
4072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
ARM GAS  /tmp/ccQJ5CSb.s 			page 180


4073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5272              		.loc 1 4073 0
 5273 0064 036E     		ldr	r3, [r0, #96]
 5274 0066 012B     		cmp	r3, #1
 5275 0068 17D1     		bne	.L161
4074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set reception type to Standard */
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5276              		.loc 1 4076 0
 5277 006a 0023     		movs	r3, #0
 5278 006c 0366     		str	r3, [r0, #96]
 5279              	.LBB972:
 5280              	.LBB973:
 5281              	.LBB974:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5282              		.loc 2 386 0
 5283              		.syntax divided
 5284              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5285 006e EFF31084 		MRS r4, primask
 5286              	@ 0 "" 2
 5287              	.LVL327:
 5288              		.thumb
 5289              		.syntax unified
 5290              	.LBE974:
 5291              	.LBE973:
 5292              	.LBB975:
 5293              	.LBB976:
 5294              		.loc 2 414 0
 5295 0072 0133     		adds	r3, r3, #1
 5296              		.syntax divided
 5297              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5298 0074 83F31088 		MSR primask, r3
 5299              	@ 0 "" 2
 5300              	.LVL328:
 5301              		.thumb
 5302              		.syntax unified
 5303              	.LBE976:
 5304              	.LBE975:
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable IDLE interrupt */
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5305              		.loc 1 4079 0
 5306 0078 0168     		ldr	r1, [r0]
 5307 007a 0B68     		ldr	r3, [r1]
 5308 007c 1022     		movs	r2, #16
 5309 007e 9343     		bics	r3, r2
 5310 0080 0B60     		str	r3, [r1]
 5311              	.LBB977:
 5312              	.LBB978:
 5313              		.loc 2 414 0
 5314              		.syntax divided
 5315              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5316 0082 84F31088 		MSR primask, r4
 5317              	@ 0 "" 2
 5318              		.thumb
 5319              		.syntax unified
 5320              	.LBE978:
ARM GAS  /tmp/ccQJ5CSb.s 			page 181


 5321              	.LBE977:
 5322              	.LBE972:
4080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 5323              		.loc 1 4081 0
 5324 0086 0368     		ldr	r3, [r0]
 5325 0088 D969     		ldr	r1, [r3, #28]
 5326 008a 0A42     		tst	r2, r1
 5327 008c 00D0     		beq	.L162
4082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
4083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear IDLE Flag */
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5328              		.loc 1 4084 0
 5329 008e 1A62     		str	r2, [r3, #32]
 5330              	.L162:
4085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
4086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 5331              		.loc 1 4091 0
 5332 0090 5823     		movs	r3, #88
 5333 0092 C15A     		ldrh	r1, [r0, r3]
 5334 0094 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5335              	.LVL329:
 5336 0098 07E0     		b	.L158
 5337              	.LVL330:
 5338              	.L161:
4092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
4095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Standard reception API called */
4097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 5339              		.loc 1 4102 0
 5340 009a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5341              	.LVL331:
 5342 009e 04E0     		b	.L158
 5343              	.LVL332:
 5344              	.L159:
4103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
4106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
4108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5345              		.loc 1 4110 0
 5346 00a0 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccQJ5CSb.s 			page 182


 5347              	.LVL333:
 5348 00a2 9169     		ldr	r1, [r2, #24]
 5349 00a4 0823     		movs	r3, #8
 5350 00a6 0B43     		orrs	r3, r1
 5351 00a8 9361     		str	r3, [r2, #24]
 5352              	.LVL334:
 5353              	.L158:
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5354              		.loc 1 4112 0
 5355              		@ sp needed
 5356 00aa 70BD     		pop	{r4, r5, r6, pc}
 5357              	.L164:
 5358              		.align	2
 5359              	.L163:
 5360 00ac DFFEFFFF 		.word	-289
 5361              		.cfi_endproc
 5362              	.LFE103:
 5364              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5365              		.align	2
 5366              		.code	16
 5367              		.thumb_func
 5369              	UART_DMARxHalfCplt:
 5370              	.LFB92:
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 5371              		.loc 1 3620 0
 5372              		.cfi_startproc
 5373              		@ args = 0, pretend = 0, frame = 0
 5374              		@ frame_needed = 0, uses_anonymous_args = 0
 5375              	.LVL335:
 5376 0000 10B5     		push	{r4, lr}
 5377              	.LCFI28:
 5378              		.cfi_def_cfa_offset 8
 5379              		.cfi_offset 4, -8
 5380              		.cfi_offset 14, -4
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5381              		.loc 1 3621 0
 5382 0002 406A     		ldr	r0, [r0, #36]
 5383              	.LVL336:
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5384              		.loc 1 3625 0
 5385 0004 036E     		ldr	r3, [r0, #96]
 5386 0006 012B     		cmp	r3, #1
 5387 0008 05D1     		bne	.L166
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5388              		.loc 1 3632 0
 5389 000a 5733     		adds	r3, r3, #87
 5390 000c C15A     		ldrh	r1, [r0, r3]
 5391 000e 4908     		lsrs	r1, r1, #1
 5392 0010 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5393              	.LVL337:
 5394 0014 01E0     		b	.L165
 5395              	.LVL338:
 5396              	.L166:
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5397              		.loc 1 3643 0
 5398 0016 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/ccQJ5CSb.s 			page 183


 5399              	.LVL339:
 5400              	.L165:
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5401              		.loc 1 3646 0
 5402              		@ sp needed
 5403 001a 10BD     		pop	{r4, pc}
 5404              		.cfi_endproc
 5405              	.LFE92:
 5407              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5408              		.align	2
 5409              		.code	16
 5410              		.thumb_func
 5412              	UART_DMAReceiveCplt:
 5413              	.LFB91:
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 5414              		.loc 1 3563 0
 5415              		.cfi_startproc
 5416              		@ args = 0, pretend = 0, frame = 0
 5417              		@ frame_needed = 0, uses_anonymous_args = 0
 5418              	.LVL340:
 5419 0000 70B5     		push	{r4, r5, r6, lr}
 5420              	.LCFI29:
 5421              		.cfi_def_cfa_offset 16
 5422              		.cfi_offset 4, -16
 5423              		.cfi_offset 5, -12
 5424              		.cfi_offset 6, -8
 5425              		.cfi_offset 14, -4
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5426              		.loc 1 3564 0
 5427 0002 436A     		ldr	r3, [r0, #36]
 5428              	.LVL341:
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5429              		.loc 1 3567 0
 5430 0004 8269     		ldr	r2, [r0, #24]
 5431 0006 202A     		cmp	r2, #32
 5432 0008 35D0     		beq	.L169
3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5433              		.loc 1 3569 0
 5434 000a 0021     		movs	r1, #0
 5435 000c 5A22     		movs	r2, #90
 5436 000e 9952     		strh	r1, [r3, r2]
 5437              	.LBB979:
 5438              	.LBB980:
 5439              	.LBB981:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5440              		.loc 2 386 0
 5441              		.syntax divided
 5442              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5443 0010 EFF31084 		MRS r4, primask
 5444              	@ 0 "" 2
 5445              	.LVL342:
 5446              		.thumb
 5447              		.syntax unified
 5448              	.LBE981:
 5449              	.LBE980:
 5450              	.LBB982:
 5451              	.LBB983:
ARM GAS  /tmp/ccQJ5CSb.s 			page 184


 5452              		.loc 2 414 0
 5453 0014 0120     		movs	r0, #1
 5454              	.LVL343:
 5455              		.syntax divided
 5456              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5457 0016 80F31088 		MSR primask, r0
 5458              	@ 0 "" 2
 5459              	.LVL344:
 5460              		.thumb
 5461              		.syntax unified
 5462              	.LBE983:
 5463              	.LBE982:
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5464              		.loc 1 3572 0
 5465 001a 1968     		ldr	r1, [r3]
 5466 001c 0D68     		ldr	r5, [r1]
 5467 001e 1C4A     		ldr	r2, .L172
 5468 0020 2A40     		ands	r2, r5
 5469 0022 0A60     		str	r2, [r1]
 5470              	.LBB984:
 5471              	.LBB985:
 5472              		.loc 2 414 0
 5473              		.syntax divided
 5474              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5475 0024 84F31088 		MSR primask, r4
 5476              	@ 0 "" 2
 5477              		.thumb
 5478              		.syntax unified
 5479              	.LBE985:
 5480              	.LBE984:
 5481              	.LBE979:
 5482              	.LBB986:
 5483              	.LBB987:
 5484              	.LBB988:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5485              		.loc 2 386 0
 5486              		.syntax divided
 5487              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5488 0028 EFF31084 		MRS r4, primask
 5489              	@ 0 "" 2
 5490              	.LVL345:
 5491              		.thumb
 5492              		.syntax unified
 5493              	.LBE988:
 5494              	.LBE987:
 5495              	.LBB989:
 5496              	.LBB990:
 5497              		.loc 2 414 0
 5498 002c 0122     		movs	r2, #1
 5499              		.syntax divided
 5500              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5501 002e 82F31088 		MSR primask, r2
 5502              	@ 0 "" 2
 5503              	.LVL346:
 5504              		.thumb
 5505              		.syntax unified
 5506              	.LBE990:
ARM GAS  /tmp/ccQJ5CSb.s 			page 185


 5507              	.LBE989:
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5508              		.loc 1 3573 0
 5509 0032 1968     		ldr	r1, [r3]
 5510 0034 8A68     		ldr	r2, [r1, #8]
 5511 0036 8243     		bics	r2, r0
 5512 0038 8A60     		str	r2, [r1, #8]
 5513              	.LBB991:
 5514              	.LBB992:
 5515              		.loc 2 414 0
 5516              		.syntax divided
 5517              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5518 003a 84F31088 		MSR primask, r4
 5519              	@ 0 "" 2
 5520              		.thumb
 5521              		.syntax unified
 5522              	.LBE992:
 5523              	.LBE991:
 5524              	.LBE986:
 5525              	.LBB993:
 5526              	.LBB994:
 5527              	.LBB995:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5528              		.loc 2 386 0
 5529              		.syntax divided
 5530              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5531 003e EFF31080 		MRS r0, primask
 5532              	@ 0 "" 2
 5533              	.LVL347:
 5534              		.thumb
 5535              		.syntax unified
 5536              	.LBE995:
 5537              	.LBE994:
 5538              	.LBB996:
 5539              	.LBB997:
 5540              		.loc 2 414 0
 5541 0042 0122     		movs	r2, #1
 5542              		.syntax divided
 5543              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5544 0044 82F31088 		MSR primask, r2
 5545              	@ 0 "" 2
 5546              	.LVL348:
 5547              		.thumb
 5548              		.syntax unified
 5549              	.LBE997:
 5550              	.LBE996:
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5551              		.loc 1 3577 0
 5552 0048 1968     		ldr	r1, [r3]
 5553 004a 8A68     		ldr	r2, [r1, #8]
 5554 004c 4024     		movs	r4, #64
 5555 004e A243     		bics	r2, r4
 5556 0050 8A60     		str	r2, [r1, #8]
 5557              	.LBB998:
 5558              	.LBB999:
 5559              		.loc 2 414 0
 5560              		.syntax divided
ARM GAS  /tmp/ccQJ5CSb.s 			page 186


 5561              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5562 0052 80F31088 		MSR primask, r0
 5563              	@ 0 "" 2
 5564              		.thumb
 5565              		.syntax unified
 5566              	.LBE999:
 5567              	.LBE998:
 5568              	.LBE993:
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5569              		.loc 1 3580 0
 5570 0056 2022     		movs	r2, #32
 5571 0058 DA67     		str	r2, [r3, #124]
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5572              		.loc 1 3583 0
 5573 005a 1A6E     		ldr	r2, [r3, #96]
 5574 005c 012A     		cmp	r2, #1
 5575 005e 0AD1     		bne	.L169
 5576              	.LBB1000:
 5577              	.LBB1001:
 5578              	.LBB1002:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5579              		.loc 2 386 0
 5580              		.syntax divided
 5581              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5582 0060 EFF31080 		MRS r0, primask
 5583              	@ 0 "" 2
 5584              	.LVL349:
 5585              		.thumb
 5586              		.syntax unified
 5587              	.LBE1002:
 5588              	.LBE1001:
 5589              	.LBB1003:
 5590              	.LBB1004:
 5591              		.loc 2 414 0
 5592              		.syntax divided
 5593              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5594 0064 82F31088 		MSR primask, r2
 5595              	@ 0 "" 2
 5596              	.LVL350:
 5597              		.thumb
 5598              		.syntax unified
 5599              	.LBE1004:
 5600              	.LBE1003:
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5601              		.loc 1 3585 0
 5602 0068 1968     		ldr	r1, [r3]
 5603 006a 0A68     		ldr	r2, [r1]
 5604 006c 303C     		subs	r4, r4, #48
 5605 006e A243     		bics	r2, r4
 5606 0070 0A60     		str	r2, [r1]
 5607              	.LBB1005:
 5608              	.LBB1006:
 5609              		.loc 2 414 0
 5610              		.syntax divided
 5611              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5612 0072 80F31088 		MSR primask, r0
 5613              	@ 0 "" 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 187


 5614              		.thumb
 5615              		.syntax unified
 5616              	.L169:
 5617              	.LBE1006:
 5618              	.LBE1005:
 5619              	.LBE1000:
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5620              		.loc 1 3591 0
 5621 0076 1A6E     		ldr	r2, [r3, #96]
 5622 0078 012A     		cmp	r2, #1
 5623 007a 05D1     		bne	.L170
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5624              		.loc 1 3598 0
 5625 007c 5732     		adds	r2, r2, #87
 5626 007e 995A     		ldrh	r1, [r3, r2]
 5627 0080 1800     		movs	r0, r3
 5628 0082 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5629              	.LVL351:
 5630 0086 02E0     		b	.L168
 5631              	.LVL352:
 5632              	.L170:
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5633              		.loc 1 3609 0
 5634 0088 1800     		movs	r0, r3
 5635 008a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5636              	.LVL353:
 5637              	.L168:
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5638              		.loc 1 3612 0
 5639              		@ sp needed
 5640 008e 70BD     		pop	{r4, r5, r6, pc}
 5641              	.L173:
 5642              		.align	2
 5643              	.L172:
 5644 0090 FFFEFFFF 		.word	-257
 5645              		.cfi_endproc
 5646              	.LFE91:
 5648              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 5649              		.align	2
 5650              		.global	HAL_UART_ReceiverTimeout_Config
 5651              		.code	16
 5652              		.thumb_func
 5654              	HAL_UART_ReceiverTimeout_Config:
 5655              	.LFB71:
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
 5656              		.loc 1 2762 0
 5657              		.cfi_startproc
 5658              		@ args = 0, pretend = 0, frame = 0
 5659              		@ frame_needed = 0, uses_anonymous_args = 0
 5660              		@ link register save eliminated.
 5661              	.LVL354:
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5662              		.loc 1 2764 0
 5663 0000 0268     		ldr	r2, [r0]
 5664 0002 5369     		ldr	r3, [r2, #20]
 5665 0004 1B0E     		lsrs	r3, r3, #24
 5666 0006 1B06     		lsls	r3, r3, #24
ARM GAS  /tmp/ccQJ5CSb.s 			page 188


 5667 0008 0B43     		orrs	r3, r1
 5668 000a 5361     		str	r3, [r2, #20]
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5669              		.loc 1 2765 0
 5670              		@ sp needed
 5671 000c 7047     		bx	lr
 5672              		.cfi_endproc
 5673              	.LFE71:
 5675 000e C046     		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 5676              		.align	2
 5677              		.global	HAL_UART_EnableReceiverTimeout
 5678              		.code	16
 5679              		.thumb_func
 5681              	HAL_UART_EnableReceiverTimeout:
 5682              	.LFB72:
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 5683              		.loc 1 2774 0
 5684              		.cfi_startproc
 5685              		@ args = 0, pretend = 0, frame = 0
 5686              		@ frame_needed = 0, uses_anonymous_args = 0
 5687              	.LVL355:
 5688 0000 10B5     		push	{r4, lr}
 5689              	.LCFI30:
 5690              		.cfi_def_cfa_offset 8
 5691              		.cfi_offset 4, -8
 5692              		.cfi_offset 14, -4
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5693              		.loc 1 2775 0
 5694 0002 836F     		ldr	r3, [r0, #120]
 5695 0004 202B     		cmp	r3, #32
 5696 0006 14D1     		bne	.L177
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5697              		.loc 1 2778 0
 5698 0008 5433     		adds	r3, r3, #84
 5699 000a C35C     		ldrb	r3, [r0, r3]
 5700 000c 012B     		cmp	r3, #1
 5701 000e 12D0     		beq	.L178
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5702              		.loc 1 2778 0 is_stmt 0 discriminator 2
 5703 0010 7422     		movs	r2, #116
 5704 0012 0123     		movs	r3, #1
 5705 0014 8354     		strb	r3, [r0, r2]
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5706              		.loc 1 2780 0 is_stmt 1 discriminator 2
 5707 0016 2333     		adds	r3, r3, #35
 5708 0018 8367     		str	r3, [r0, #120]
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5709              		.loc 1 2783 0 discriminator 2
 5710 001a 0168     		ldr	r1, [r0]
 5711 001c 4B68     		ldr	r3, [r1, #4]
 5712 001e 8024     		movs	r4, #128
 5713 0020 2404     		lsls	r4, r4, #16
 5714 0022 2343     		orrs	r3, r4
 5715 0024 4B60     		str	r3, [r1, #4]
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5716              		.loc 1 2785 0 discriminator 2
 5717 0026 2023     		movs	r3, #32
ARM GAS  /tmp/ccQJ5CSb.s 			page 189


 5718 0028 8367     		str	r3, [r0, #120]
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5719              		.loc 1 2788 0 discriminator 2
 5720 002a 0023     		movs	r3, #0
 5721 002c 8354     		strb	r3, [r0, r2]
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5722              		.loc 1 2790 0 discriminator 2
 5723 002e 0020     		movs	r0, #0
 5724              	.LVL356:
 5725 0030 02E0     		b	.L176
 5726              	.LVL357:
 5727              	.L177:
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5728              		.loc 1 2794 0
 5729 0032 0220     		movs	r0, #2
 5730              	.LVL358:
 5731 0034 00E0     		b	.L176
 5732              	.LVL359:
 5733              	.L178:
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5734              		.loc 1 2778 0
 5735 0036 0220     		movs	r0, #2
 5736              	.LVL360:
 5737              	.L176:
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5738              		.loc 1 2796 0
 5739              		@ sp needed
 5740 0038 10BD     		pop	{r4, pc}
 5741              		.cfi_endproc
 5742              	.LFE72:
 5744 003a C046     		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 5745              		.align	2
 5746              		.global	HAL_UART_DisableReceiverTimeout
 5747              		.code	16
 5748              		.thumb_func
 5750              	HAL_UART_DisableReceiverTimeout:
 5751              	.LFB73:
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 5752              		.loc 1 2805 0
 5753              		.cfi_startproc
 5754              		@ args = 0, pretend = 0, frame = 0
 5755              		@ frame_needed = 0, uses_anonymous_args = 0
 5756              	.LVL361:
 5757 0000 10B5     		push	{r4, lr}
 5758              	.LCFI31:
 5759              		.cfi_def_cfa_offset 8
 5760              		.cfi_offset 4, -8
 5761              		.cfi_offset 14, -4
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5762              		.loc 1 2806 0
 5763 0002 836F     		ldr	r3, [r0, #120]
 5764 0004 202B     		cmp	r3, #32
 5765 0006 13D1     		bne	.L181
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5766              		.loc 1 2809 0
 5767 0008 5433     		adds	r3, r3, #84
 5768 000a C35C     		ldrb	r3, [r0, r3]
ARM GAS  /tmp/ccQJ5CSb.s 			page 190


 5769 000c 012B     		cmp	r3, #1
 5770 000e 11D0     		beq	.L182
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5771              		.loc 1 2809 0 is_stmt 0 discriminator 2
 5772 0010 7422     		movs	r2, #116
 5773 0012 0123     		movs	r3, #1
 5774 0014 8354     		strb	r3, [r0, r2]
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5775              		.loc 1 2811 0 is_stmt 1 discriminator 2
 5776 0016 2333     		adds	r3, r3, #35
 5777 0018 8367     		str	r3, [r0, #120]
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5778              		.loc 1 2814 0 discriminator 2
 5779 001a 0168     		ldr	r1, [r0]
 5780 001c 4C68     		ldr	r4, [r1, #4]
 5781 001e 064B     		ldr	r3, .L183
 5782 0020 2340     		ands	r3, r4
 5783 0022 4B60     		str	r3, [r1, #4]
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5784              		.loc 1 2816 0 discriminator 2
 5785 0024 2023     		movs	r3, #32
 5786 0026 8367     		str	r3, [r0, #120]
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5787              		.loc 1 2819 0 discriminator 2
 5788 0028 0023     		movs	r3, #0
 5789 002a 8354     		strb	r3, [r0, r2]
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5790              		.loc 1 2821 0 discriminator 2
 5791 002c 0020     		movs	r0, #0
 5792              	.LVL362:
 5793 002e 02E0     		b	.L180
 5794              	.LVL363:
 5795              	.L181:
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5796              		.loc 1 2825 0
 5797 0030 0220     		movs	r0, #2
 5798              	.LVL364:
 5799 0032 00E0     		b	.L180
 5800              	.LVL365:
 5801              	.L182:
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5802              		.loc 1 2809 0
 5803 0034 0220     		movs	r0, #2
 5804              	.LVL366:
 5805              	.L180:
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5806              		.loc 1 2827 0
 5807              		@ sp needed
 5808 0036 10BD     		pop	{r4, pc}
 5809              	.L184:
 5810              		.align	2
 5811              	.L183:
 5812 0038 FFFF7FFF 		.word	-8388609
 5813              		.cfi_endproc
 5814              	.LFE73:
 5816              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5817              		.align	2
ARM GAS  /tmp/ccQJ5CSb.s 			page 191


 5818              		.global	HAL_MultiProcessor_EnterMuteMode
 5819              		.code	16
 5820              		.thumb_func
 5822              	HAL_MultiProcessor_EnterMuteMode:
 5823              	.LFB76:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 5824              		.loc 1 2876 0
 5825              		.cfi_startproc
 5826              		@ args = 0, pretend = 0, frame = 0
 5827              		@ frame_needed = 0, uses_anonymous_args = 0
 5828              		@ link register save eliminated.
 5829              	.LVL367:
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5830              		.loc 1 2877 0
 5831 0000 0268     		ldr	r2, [r0]
 5832 0002 9169     		ldr	r1, [r2, #24]
 5833 0004 0423     		movs	r3, #4
 5834 0006 0B43     		orrs	r3, r1
 5835 0008 9361     		str	r3, [r2, #24]
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5836              		.loc 1 2878 0
 5837              		@ sp needed
 5838 000a 7047     		bx	lr
 5839              		.cfi_endproc
 5840              	.LFE76:
 5842              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5843              		.align	2
 5844              		.global	HAL_HalfDuplex_EnableTransmitter
 5845              		.code	16
 5846              		.thumb_func
 5848              	HAL_HalfDuplex_EnableTransmitter:
 5849              	.LFB77:
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 5850              		.loc 1 2886 0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 0
 5853              		@ frame_needed = 0, uses_anonymous_args = 0
 5854              	.LVL368:
 5855 0000 30B5     		push	{r4, r5, lr}
 5856              	.LCFI32:
 5857              		.cfi_def_cfa_offset 12
 5858              		.cfi_offset 4, -12
 5859              		.cfi_offset 5, -8
 5860              		.cfi_offset 14, -4
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5861              		.loc 1 2887 0
 5862 0002 7423     		movs	r3, #116
 5863 0004 C35C     		ldrb	r3, [r0, r3]
 5864 0006 012B     		cmp	r3, #1
 5865 0008 22D0     		beq	.L188
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5866              		.loc 1 2887 0 is_stmt 0 discriminator 2
 5867 000a 7422     		movs	r2, #116
 5868 000c 0123     		movs	r3, #1
 5869 000e 8354     		strb	r3, [r0, r2]
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5870              		.loc 1 2888 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 192


 5871 0010 2333     		adds	r3, r3, #35
 5872 0012 8367     		str	r3, [r0, #120]
 5873              	.LBB1007:
 5874              	.LBB1008:
 5875              	.LBB1009:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5876              		.loc 2 386 0 discriminator 2
 5877              		.syntax divided
 5878              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5879 0014 EFF31084 		MRS r4, primask
 5880              	@ 0 "" 2
 5881              	.LVL369:
 5882              		.thumb
 5883              		.syntax unified
 5884              	.LBE1009:
 5885              	.LBE1008:
 5886              	.LBB1010:
 5887              	.LBB1011:
 5888              		.loc 2 414 0 discriminator 2
 5889 0018 233B     		subs	r3, r3, #35
 5890              		.syntax divided
 5891              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5892 001a 83F31088 		MSR primask, r3
 5893              	@ 0 "" 2
 5894              	.LVL370:
 5895              		.thumb
 5896              		.syntax unified
 5897              	.LBE1011:
 5898              	.LBE1010:
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5899              		.loc 1 2891 0 discriminator 2
 5900 001e 0168     		ldr	r1, [r0]
 5901 0020 0B68     		ldr	r3, [r1]
 5902 0022 0C25     		movs	r5, #12
 5903 0024 AB43     		bics	r3, r5
 5904 0026 0B60     		str	r3, [r1]
 5905              	.LBB1012:
 5906              	.LBB1013:
 5907              		.loc 2 414 0 discriminator 2
 5908              		.syntax divided
 5909              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5910 0028 84F31088 		MSR primask, r4
 5911              	@ 0 "" 2
 5912              		.thumb
 5913              		.syntax unified
 5914              	.LBE1013:
 5915              	.LBE1012:
 5916              	.LBE1007:
 5917              	.LBB1014:
 5918              	.LBB1015:
 5919              	.LBB1016:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5920              		.loc 2 386 0 discriminator 2
 5921              		.syntax divided
 5922              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5923 002c EFF31084 		MRS r4, primask
 5924              	@ 0 "" 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 193


 5925              	.LVL371:
 5926              		.thumb
 5927              		.syntax unified
 5928              	.LBE1016:
 5929              	.LBE1015:
 5930              	.LBB1017:
 5931              	.LBB1018:
 5932              		.loc 2 414 0 discriminator 2
 5933 0030 0123     		movs	r3, #1
 5934              		.syntax divided
 5935              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5936 0032 83F31088 		MSR primask, r3
 5937              	@ 0 "" 2
 5938              	.LVL372:
 5939              		.thumb
 5940              		.syntax unified
 5941              	.LBE1018:
 5942              	.LBE1017:
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5943              		.loc 1 2894 0 discriminator 2
 5944 0036 0168     		ldr	r1, [r0]
 5945 0038 0D68     		ldr	r5, [r1]
 5946 003a 0733     		adds	r3, r3, #7
 5947 003c 2B43     		orrs	r3, r5
 5948 003e 0B60     		str	r3, [r1]
 5949              	.LBB1019:
 5950              	.LBB1020:
 5951              		.loc 2 414 0 discriminator 2
 5952              		.syntax divided
 5953              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5954 0040 84F31088 		MSR primask, r4
 5955              	@ 0 "" 2
 5956              		.thumb
 5957              		.syntax unified
 5958              	.LBE1020:
 5959              	.LBE1019:
 5960              	.LBE1014:
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5961              		.loc 1 2896 0 discriminator 2
 5962 0044 2023     		movs	r3, #32
 5963 0046 8367     		str	r3, [r0, #120]
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5964              		.loc 1 2898 0 discriminator 2
 5965 0048 0023     		movs	r3, #0
 5966 004a 8354     		strb	r3, [r0, r2]
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5967              		.loc 1 2900 0 discriminator 2
 5968 004c 0020     		movs	r0, #0
 5969              	.LVL373:
 5970 004e 00E0     		b	.L187
 5971              	.LVL374:
 5972              	.L188:
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5973              		.loc 1 2887 0
 5974 0050 0220     		movs	r0, #2
 5975              	.LVL375:
 5976              	.L187:
ARM GAS  /tmp/ccQJ5CSb.s 			page 194


2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5977              		.loc 1 2901 0
 5978              		@ sp needed
 5979 0052 30BD     		pop	{r4, r5, pc}
 5980              		.cfi_endproc
 5981              	.LFE77:
 5983              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5984              		.align	2
 5985              		.global	HAL_HalfDuplex_EnableReceiver
 5986              		.code	16
 5987              		.thumb_func
 5989              	HAL_HalfDuplex_EnableReceiver:
 5990              	.LFB78:
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 5991              		.loc 1 2909 0
 5992              		.cfi_startproc
 5993              		@ args = 0, pretend = 0, frame = 0
 5994              		@ frame_needed = 0, uses_anonymous_args = 0
 5995              	.LVL376:
 5996 0000 30B5     		push	{r4, r5, lr}
 5997              	.LCFI33:
 5998              		.cfi_def_cfa_offset 12
 5999              		.cfi_offset 4, -12
 6000              		.cfi_offset 5, -8
 6001              		.cfi_offset 14, -4
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6002              		.loc 1 2910 0
 6003 0002 7423     		movs	r3, #116
 6004 0004 C35C     		ldrb	r3, [r0, r3]
 6005 0006 012B     		cmp	r3, #1
 6006 0008 22D0     		beq	.L191
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6007              		.loc 1 2910 0 is_stmt 0 discriminator 2
 6008 000a 7422     		movs	r2, #116
 6009 000c 0123     		movs	r3, #1
 6010 000e 8354     		strb	r3, [r0, r2]
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6011              		.loc 1 2911 0 is_stmt 1 discriminator 2
 6012 0010 2333     		adds	r3, r3, #35
 6013 0012 8367     		str	r3, [r0, #120]
 6014              	.LBB1021:
 6015              	.LBB1022:
 6016              	.LBB1023:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6017              		.loc 2 386 0 discriminator 2
 6018              		.syntax divided
 6019              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6020 0014 EFF31084 		MRS r4, primask
 6021              	@ 0 "" 2
 6022              	.LVL377:
 6023              		.thumb
 6024              		.syntax unified
 6025              	.LBE1023:
 6026              	.LBE1022:
 6027              	.LBB1024:
 6028              	.LBB1025:
 6029              		.loc 2 414 0 discriminator 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 195


 6030 0018 233B     		subs	r3, r3, #35
 6031              		.syntax divided
 6032              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6033 001a 83F31088 		MSR primask, r3
 6034              	@ 0 "" 2
 6035              	.LVL378:
 6036              		.thumb
 6037              		.syntax unified
 6038              	.LBE1025:
 6039              	.LBE1024:
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6040              		.loc 1 2914 0 discriminator 2
 6041 001e 0168     		ldr	r1, [r0]
 6042 0020 0B68     		ldr	r3, [r1]
 6043 0022 0C25     		movs	r5, #12
 6044 0024 AB43     		bics	r3, r5
 6045 0026 0B60     		str	r3, [r1]
 6046              	.LBB1026:
 6047              	.LBB1027:
 6048              		.loc 2 414 0 discriminator 2
 6049              		.syntax divided
 6050              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6051 0028 84F31088 		MSR primask, r4
 6052              	@ 0 "" 2
 6053              		.thumb
 6054              		.syntax unified
 6055              	.LBE1027:
 6056              	.LBE1026:
 6057              	.LBE1021:
 6058              	.LBB1028:
 6059              	.LBB1029:
 6060              	.LBB1030:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6061              		.loc 2 386 0 discriminator 2
 6062              		.syntax divided
 6063              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6064 002c EFF31084 		MRS r4, primask
 6065              	@ 0 "" 2
 6066              	.LVL379:
 6067              		.thumb
 6068              		.syntax unified
 6069              	.LBE1030:
 6070              	.LBE1029:
 6071              	.LBB1031:
 6072              	.LBB1032:
 6073              		.loc 2 414 0 discriminator 2
 6074 0030 0123     		movs	r3, #1
 6075              		.syntax divided
 6076              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6077 0032 83F31088 		MSR primask, r3
 6078              	@ 0 "" 2
 6079              	.LVL380:
 6080              		.thumb
 6081              		.syntax unified
 6082              	.LBE1032:
 6083              	.LBE1031:
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 196


 6084              		.loc 1 2917 0 discriminator 2
 6085 0036 0168     		ldr	r1, [r0]
 6086 0038 0D68     		ldr	r5, [r1]
 6087 003a 0333     		adds	r3, r3, #3
 6088 003c 2B43     		orrs	r3, r5
 6089 003e 0B60     		str	r3, [r1]
 6090              	.LBB1033:
 6091              	.LBB1034:
 6092              		.loc 2 414 0 discriminator 2
 6093              		.syntax divided
 6094              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6095 0040 84F31088 		MSR primask, r4
 6096              	@ 0 "" 2
 6097              		.thumb
 6098              		.syntax unified
 6099              	.LBE1034:
 6100              	.LBE1033:
 6101              	.LBE1028:
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6102              		.loc 1 2919 0 discriminator 2
 6103 0044 2023     		movs	r3, #32
 6104 0046 8367     		str	r3, [r0, #120]
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6105              		.loc 1 2921 0 discriminator 2
 6106 0048 0023     		movs	r3, #0
 6107 004a 8354     		strb	r3, [r0, r2]
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6108              		.loc 1 2923 0 discriminator 2
 6109 004c 0020     		movs	r0, #0
 6110              	.LVL381:
 6111 004e 00E0     		b	.L190
 6112              	.LVL382:
 6113              	.L191:
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6114              		.loc 1 2910 0
 6115 0050 0220     		movs	r0, #2
 6116              	.LVL383:
 6117              	.L190:
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6118              		.loc 1 2924 0
 6119              		@ sp needed
 6120 0052 30BD     		pop	{r4, r5, pc}
 6121              		.cfi_endproc
 6122              	.LFE78:
 6124              		.section	.text.HAL_UART_GetState,"ax",%progbits
 6125              		.align	2
 6126              		.global	HAL_UART_GetState
 6127              		.code	16
 6128              		.thumb_func
 6130              	HAL_UART_GetState:
 6131              	.LFB79:
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1;
 6132              		.loc 1 2980 0
 6133              		.cfi_startproc
 6134              		@ args = 0, pretend = 0, frame = 0
 6135              		@ frame_needed = 0, uses_anonymous_args = 0
 6136              		@ link register save eliminated.
ARM GAS  /tmp/ccQJ5CSb.s 			page 197


 6137              	.LVL384:
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 6138              		.loc 1 2983 0
 6139 0000 826F     		ldr	r2, [r0, #120]
 6140              	.LVL385:
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6141              		.loc 1 2984 0
 6142 0002 C36F     		ldr	r3, [r0, #124]
 6143              	.LVL386:
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6144              		.loc 1 2986 0
 6145 0004 1A43     		orrs	r2, r3
 6146              	.LVL387:
 6147 0006 1000     		movs	r0, r2
 6148              	.LVL388:
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6149              		.loc 1 2987 0
 6150              		@ sp needed
 6151 0008 7047     		bx	lr
 6152              		.cfi_endproc
 6153              	.LFE79:
 6155 000a C046     		.section	.text.HAL_UART_GetError,"ax",%progbits
 6156              		.align	2
 6157              		.global	HAL_UART_GetError
 6158              		.code	16
 6159              		.thumb_func
 6161              	HAL_UART_GetError:
 6162              	.LFB80:
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 6163              		.loc 1 2996 0
 6164              		.cfi_startproc
 6165              		@ args = 0, pretend = 0, frame = 0
 6166              		@ frame_needed = 0, uses_anonymous_args = 0
 6167              		@ link register save eliminated.
 6168              	.LVL389:
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6169              		.loc 1 2997 0
 6170 0000 8023     		movs	r3, #128
 6171 0002 C058     		ldr	r0, [r0, r3]
 6172              	.LVL390:
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 6173              		.loc 1 2998 0
 6174              		@ sp needed
 6175 0004 7047     		bx	lr
 6176              		.cfi_endproc
 6177              	.LFE80:
 6179              		.global	__aeabi_uidiv
 6180              		.section	.text.UART_SetConfig,"ax",%progbits
 6181              		.align	2
 6182              		.global	UART_SetConfig
 6183              		.code	16
 6184              		.thumb_func
 6186              	UART_SetConfig:
 6187              	.LFB81:
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg;
 6188              		.loc 1 3044 0
 6189              		.cfi_startproc
ARM GAS  /tmp/ccQJ5CSb.s 			page 198


 6190              		@ args = 0, pretend = 0, frame = 0
 6191              		@ frame_needed = 0, uses_anonymous_args = 0
 6192              	.LVL391:
 6193 0000 70B5     		push	{r4, r5, r6, lr}
 6194              	.LCFI34:
 6195              		.cfi_def_cfa_offset 16
 6196              		.cfi_offset 4, -16
 6197              		.cfi_offset 5, -12
 6198              		.cfi_offset 6, -8
 6199              		.cfi_offset 14, -4
 6200 0002 0400     		movs	r4, r0
 6201              	.LVL392:
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 6202              		.loc 1 3070 0
 6203 0004 8368     		ldr	r3, [r0, #8]
 6204 0006 0269     		ldr	r2, [r0, #16]
 6205 0008 1343     		orrs	r3, r2
 6206 000a 4269     		ldr	r2, [r0, #20]
 6207 000c 1343     		orrs	r3, r2
 6208 000e C169     		ldr	r1, [r0, #28]
 6209 0010 1943     		orrs	r1, r3
 6210              	.LVL393:
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6211              		.loc 1 3071 0
 6212 0012 0068     		ldr	r0, [r0]
 6213              	.LVL394:
 6214 0014 0368     		ldr	r3, [r0]
 6215 0016 4E4A     		ldr	r2, .L220
 6216 0018 1340     		ands	r3, r2
 6217 001a 0B43     		orrs	r3, r1
 6218 001c 0360     		str	r3, [r0]
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6219              		.loc 1 3076 0
 6220 001e 2268     		ldr	r2, [r4]
 6221 0020 5168     		ldr	r1, [r2, #4]
 6222              	.LVL395:
 6223 0022 4C4B     		ldr	r3, .L220+4
 6224 0024 0B40     		ands	r3, r1
 6225 0026 E168     		ldr	r1, [r4, #12]
 6226 0028 0B43     		orrs	r3, r1
 6227 002a 5360     		str	r3, [r2, #4]
 6228              	.LVL396:
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 6229              		.loc 1 3086 0
 6230 002c A169     		ldr	r1, [r4, #24]
 6231 002e 236A     		ldr	r3, [r4, #32]
 6232 0030 1943     		orrs	r1, r3
 6233              	.LVL397:
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6234              		.loc 1 3087 0
 6235 0032 2068     		ldr	r0, [r4]
 6236 0034 8368     		ldr	r3, [r0, #8]
 6237 0036 484A     		ldr	r2, .L220+8
 6238 0038 1340     		ands	r3, r2
 6239 003a 0B43     		orrs	r3, r1
 6240 003c 8360     		str	r3, [r0, #8]
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccQJ5CSb.s 			page 199


 6241              		.loc 1 3091 0
 6242 003e 474B     		ldr	r3, .L220+12
 6243 0040 1B6B     		ldr	r3, [r3, #48]
 6244 0042 0322     		movs	r2, #3
 6245 0044 1340     		ands	r3, r2
 6246 0046 012B     		cmp	r3, #1
 6247 0048 08D0     		beq	.L196
 6248 004a 002B     		cmp	r3, #0
 6249 004c 04D0     		beq	.L197
 6250 004e 022B     		cmp	r3, #2
 6251 0050 06D0     		beq	.L198
 6252 0052 032B     		cmp	r3, #3
 6253 0054 08D0     		beq	.L214
 6254 0056 05E0     		b	.L219
 6255              	.L197:
 6256 0058 0023     		movs	r3, #0
 6257 005a 06E0     		b	.L199
 6258              	.L196:
 6259              	.LVL398:
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6260              		.loc 1 3091 0 is_stmt 0 discriminator 3
 6261 005c 0423     		movs	r3, #4
 6262 005e 04E0     		b	.L199
 6263              	.LVL399:
 6264              	.L198:
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6265              		.loc 1 3091 0 discriminator 4
 6266 0060 0823     		movs	r3, #8
 6267 0062 02E0     		b	.L199
 6268              	.LVL400:
 6269              	.L219:
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6270              		.loc 1 3091 0 discriminator 1
 6271 0064 1023     		movs	r3, #16
 6272 0066 00E0     		b	.L199
 6273              	.LVL401:
 6274              	.L214:
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6275              		.loc 1 3091 0
 6276 0068 0223     		movs	r3, #2
 6277              	.L199:
 6278              	.LVL402:
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6279              		.loc 1 3093 0 is_stmt 1
 6280 006a 8022     		movs	r2, #128
 6281 006c 1202     		lsls	r2, r2, #8
 6282 006e E169     		ldr	r1, [r4, #28]
 6283              	.LVL403:
 6284 0070 9142     		cmp	r1, r2
 6285 0072 36D1     		bne	.L200
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6286              		.loc 1 3095 0
 6287 0074 022B     		cmp	r3, #2
 6288 0076 08D0     		beq	.L202
 6289 0078 02D8     		bhi	.L203
 6290 007a 002B     		cmp	r3, #0
 6291 007c 08D0     		beq	.L204
ARM GAS  /tmp/ccQJ5CSb.s 			page 200


 6292 007e 0FE0     		b	.L201
 6293              	.L203:
 6294 0080 042B     		cmp	r3, #4
 6295 0082 09D0     		beq	.L205
 6296 0084 082B     		cmp	r3, #8
 6297 0086 0ED0     		beq	.L215
 6298 0088 0AE0     		b	.L201
 6299              	.L202:
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6300              		.loc 1 3101 0
 6301 008a 3548     		ldr	r0, .L220+16
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6302              		.loc 1 3049 0
 6303 008c 0025     		movs	r5, #0
 6304 008e 0DE0     		b	.L206
 6305              	.L204:
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6306              		.loc 1 3098 0
 6307 0090 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6308              	.LVL404:
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6309              		.loc 1 3049 0
 6310 0094 0025     		movs	r5, #0
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 6311              		.loc 1 3099 0
 6312 0096 09E0     		b	.L206
 6313              	.LVL405:
 6314              	.L205:
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6315              		.loc 1 3104 0
 6316 0098 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 6317              	.LVL406:
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6318              		.loc 1 3049 0
 6319 009c 0025     		movs	r5, #0
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 6320              		.loc 1 3105 0
 6321 009e 05E0     		b	.L206
 6322              	.LVL407:
 6323              	.L201:
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 6324              		.loc 1 3110 0
 6325 00a0 0020     		movs	r0, #0
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6326              		.loc 1 3111 0
 6327 00a2 0125     		movs	r5, #1
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6328              		.loc 1 3112 0
 6329 00a4 02E0     		b	.L206
 6330              	.LVL408:
 6331              	.L215:
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6332              		.loc 1 3107 0
 6333 00a6 8020     		movs	r0, #128
 6334 00a8 0002     		lsls	r0, r0, #8
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6335              		.loc 1 3049 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 201


 6336 00aa 0025     		movs	r5, #0
 6337              	.LVL409:
 6338              	.L206:
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6339              		.loc 1 3116 0
 6340 00ac 0028     		cmp	r0, #0
 6341 00ae 49D0     		beq	.L207
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 6342              		.loc 1 3118 0
 6343 00b0 4000     		lsls	r0, r0, #1
 6344              	.LVL410:
 6345 00b2 6368     		ldr	r3, [r4, #4]
 6346 00b4 5B08     		lsrs	r3, r3, #1
 6347 00b6 C018     		adds	r0, r0, r3
 6348 00b8 6168     		ldr	r1, [r4, #4]
 6349 00ba FFF7FEFF 		bl	__aeabi_uidiv
 6350              	.LVL411:
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 6351              		.loc 1 3119 0
 6352 00be 0304     		lsls	r3, r0, #16
 6353 00c0 1B0C     		lsrs	r3, r3, #16
 6354 00c2 103B     		subs	r3, r3, #16
 6355 00c4 274A     		ldr	r2, .L220+20
 6356 00c6 9342     		cmp	r3, r2
 6357 00c8 39D8     		bhi	.L216
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 6358              		.loc 1 3121 0
 6359 00ca 82B2     		uxth	r2, r0
 6360 00cc 0F23     		movs	r3, #15
 6361 00ce 9A43     		bics	r2, r3
 6362              	.LVL412:
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 6363              		.loc 1 3122 0
 6364 00d0 4008     		lsrs	r0, r0, #1
 6365              	.LVL413:
 6366 00d2 4004     		lsls	r0, r0, #17
 6367 00d4 430C     		lsrs	r3, r0, #17
 6368 00d6 0720     		movs	r0, #7
 6369 00d8 1840     		ands	r0, r3
 6370 00da 1043     		orrs	r0, r2
 6371              	.LVL414:
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 6372              		.loc 1 3123 0
 6373 00dc 2368     		ldr	r3, [r4]
 6374 00de D860     		str	r0, [r3, #12]
 6375 00e0 30E0     		b	.L207
 6376              	.LVL415:
 6377              	.L200:
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6378              		.loc 1 3133 0
 6379 00e2 022B     		cmp	r3, #2
 6380 00e4 08D0     		beq	.L209
 6381 00e6 02D8     		bhi	.L210
 6382 00e8 002B     		cmp	r3, #0
 6383 00ea 08D0     		beq	.L211
 6384 00ec 0FE0     		b	.L208
 6385              	.L210:
ARM GAS  /tmp/ccQJ5CSb.s 			page 202


 6386 00ee 042B     		cmp	r3, #4
 6387 00f0 09D0     		beq	.L212
 6388 00f2 082B     		cmp	r3, #8
 6389 00f4 0ED0     		beq	.L217
 6390 00f6 0AE0     		b	.L208
 6391              	.L209:
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6392              		.loc 1 3139 0
 6393 00f8 1948     		ldr	r0, .L220+16
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6394              		.loc 1 3049 0
 6395 00fa 0025     		movs	r5, #0
 6396 00fc 0DE0     		b	.L213
 6397              	.L211:
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6398              		.loc 1 3136 0
 6399 00fe FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6400              	.LVL416:
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6401              		.loc 1 3049 0
 6402 0102 0025     		movs	r5, #0
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 6403              		.loc 1 3137 0
 6404 0104 09E0     		b	.L213
 6405              	.LVL417:
 6406              	.L212:
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6407              		.loc 1 3142 0
 6408 0106 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 6409              	.LVL418:
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6410              		.loc 1 3049 0
 6411 010a 0025     		movs	r5, #0
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 6412              		.loc 1 3143 0
 6413 010c 05E0     		b	.L213
 6414              	.LVL419:
 6415              	.L208:
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 6416              		.loc 1 3148 0
 6417 010e 0020     		movs	r0, #0
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6418              		.loc 1 3149 0
 6419 0110 0125     		movs	r5, #1
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6420              		.loc 1 3150 0
 6421 0112 02E0     		b	.L213
 6422              	.LVL420:
 6423              	.L217:
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 6424              		.loc 1 3145 0
 6425 0114 8020     		movs	r0, #128
 6426 0116 0002     		lsls	r0, r0, #8
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
 6427              		.loc 1 3049 0
 6428 0118 0025     		movs	r5, #0
 6429              	.LVL421:
ARM GAS  /tmp/ccQJ5CSb.s 			page 203


 6430              	.L213:
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6431              		.loc 1 3153 0
 6432 011a 0028     		cmp	r0, #0
 6433 011c 12D0     		beq	.L207
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 6434              		.loc 1 3156 0
 6435 011e 6368     		ldr	r3, [r4, #4]
 6436 0120 5B08     		lsrs	r3, r3, #1
 6437 0122 C018     		adds	r0, r0, r3
 6438              	.LVL422:
 6439 0124 6168     		ldr	r1, [r4, #4]
 6440 0126 FFF7FEFF 		bl	__aeabi_uidiv
 6441              	.LVL423:
 6442 012a 0004     		lsls	r0, r0, #16
 6443 012c 000C     		lsrs	r0, r0, #16
 6444              	.LVL424:
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 6445              		.loc 1 3157 0
 6446 012e 0200     		movs	r2, r0
 6447 0130 103A     		subs	r2, r2, #16
 6448 0132 0C4B     		ldr	r3, .L220+20
 6449 0134 9A42     		cmp	r2, r3
 6450 0136 04D8     		bhi	.L218
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 6451              		.loc 1 3159 0
 6452 0138 2368     		ldr	r3, [r4]
 6453 013a D860     		str	r0, [r3, #12]
 6454 013c 02E0     		b	.L207
 6455              	.LVL425:
 6456              	.L216:
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 6457              		.loc 1 3127 0
 6458 013e 0125     		movs	r5, #1
 6459              	.LVL426:
 6460 0140 00E0     		b	.L207
 6461              	.LVL427:
 6462              	.L218:
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 6463              		.loc 1 3163 0
 6464 0142 0125     		movs	r5, #1
 6465              	.LVL428:
 6466              	.L207:
3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 6467              		.loc 1 3170 0
 6468 0144 0023     		movs	r3, #0
 6469 0146 6366     		str	r3, [r4, #100]
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6470              		.loc 1 3171 0
 6471 0148 A366     		str	r3, [r4, #104]
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6472              		.loc 1 3174 0
 6473 014a 2800     		movs	r0, r5
 6474              		@ sp needed
 6475              	.LVL429:
 6476              	.LVL430:
 6477 014c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccQJ5CSb.s 			page 204


 6478              	.L221:
 6479 014e C046     		.align	2
 6480              	.L220:
 6481 0150 F369FFFF 		.word	-38413
 6482 0154 FFCFFFFF 		.word	-12289
 6483 0158 FFF4FFFF 		.word	-2817
 6484 015c 00100240 		.word	1073876992
 6485 0160 00127A00 		.word	8000000
 6486 0164 EFFF0000 		.word	65519
 6487              		.cfi_endproc
 6488              	.LFE81:
 6490              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 6491              		.align	2
 6492              		.global	UART_AdvFeatureConfig
 6493              		.code	16
 6494              		.thumb_func
 6496              	UART_AdvFeatureConfig:
 6497              	.LFB82:
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 6498              		.loc 1 3182 0
 6499              		.cfi_startproc
 6500              		@ args = 0, pretend = 0, frame = 0
 6501              		@ frame_needed = 0, uses_anonymous_args = 0
 6502              		@ link register save eliminated.
 6503              	.LVL431:
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6504              		.loc 1 3187 0
 6505 0000 436A     		ldr	r3, [r0, #36]
 6506 0002 DB07     		lsls	r3, r3, #31
 6507 0004 06D5     		bpl	.L223
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6508              		.loc 1 3190 0
 6509 0006 0268     		ldr	r2, [r0]
 6510 0008 5168     		ldr	r1, [r2, #4]
 6511 000a 2C4B     		ldr	r3, .L231
 6512 000c 0B40     		ands	r3, r1
 6513 000e 816A     		ldr	r1, [r0, #40]
 6514 0010 0B43     		orrs	r3, r1
 6515 0012 5360     		str	r3, [r2, #4]
 6516              	.L223:
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6517              		.loc 1 3194 0
 6518 0014 436A     		ldr	r3, [r0, #36]
 6519 0016 9B07     		lsls	r3, r3, #30
 6520 0018 06D5     		bpl	.L224
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6521              		.loc 1 3197 0
 6522 001a 0268     		ldr	r2, [r0]
 6523 001c 5168     		ldr	r1, [r2, #4]
 6524 001e 284B     		ldr	r3, .L231+4
 6525 0020 0B40     		ands	r3, r1
 6526 0022 C16A     		ldr	r1, [r0, #44]
 6527 0024 0B43     		orrs	r3, r1
 6528 0026 5360     		str	r3, [r2, #4]
 6529              	.L224:
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6530              		.loc 1 3201 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 205


 6531 0028 436A     		ldr	r3, [r0, #36]
 6532 002a 5B07     		lsls	r3, r3, #29
 6533 002c 06D5     		bpl	.L225
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6534              		.loc 1 3204 0
 6535 002e 0268     		ldr	r2, [r0]
 6536 0030 5168     		ldr	r1, [r2, #4]
 6537 0032 244B     		ldr	r3, .L231+8
 6538 0034 0B40     		ands	r3, r1
 6539 0036 016B     		ldr	r1, [r0, #48]
 6540 0038 0B43     		orrs	r3, r1
 6541 003a 5360     		str	r3, [r2, #4]
 6542              	.L225:
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6543              		.loc 1 3208 0
 6544 003c 436A     		ldr	r3, [r0, #36]
 6545 003e 1B07     		lsls	r3, r3, #28
 6546 0040 06D5     		bpl	.L226
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6547              		.loc 1 3211 0
 6548 0042 0268     		ldr	r2, [r0]
 6549 0044 5168     		ldr	r1, [r2, #4]
 6550 0046 204B     		ldr	r3, .L231+12
 6551 0048 0B40     		ands	r3, r1
 6552 004a 416B     		ldr	r1, [r0, #52]
 6553 004c 0B43     		orrs	r3, r1
 6554 004e 5360     		str	r3, [r2, #4]
 6555              	.L226:
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6556              		.loc 1 3215 0
 6557 0050 436A     		ldr	r3, [r0, #36]
 6558 0052 DB06     		lsls	r3, r3, #27
 6559 0054 06D5     		bpl	.L227
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6560              		.loc 1 3218 0
 6561 0056 0268     		ldr	r2, [r0]
 6562 0058 9168     		ldr	r1, [r2, #8]
 6563 005a 1C4B     		ldr	r3, .L231+16
 6564 005c 0B40     		ands	r3, r1
 6565 005e 816B     		ldr	r1, [r0, #56]
 6566 0060 0B43     		orrs	r3, r1
 6567 0062 9360     		str	r3, [r2, #8]
 6568              	.L227:
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6569              		.loc 1 3222 0
 6570 0064 436A     		ldr	r3, [r0, #36]
 6571 0066 9B06     		lsls	r3, r3, #26
 6572 0068 06D5     		bpl	.L228
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6573              		.loc 1 3225 0
 6574 006a 0268     		ldr	r2, [r0]
 6575 006c 9168     		ldr	r1, [r2, #8]
 6576 006e 184B     		ldr	r3, .L231+20
 6577 0070 0B40     		ands	r3, r1
 6578 0072 C16B     		ldr	r1, [r0, #60]
 6579 0074 0B43     		orrs	r3, r1
 6580 0076 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccQJ5CSb.s 			page 206


 6581              	.L228:
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6582              		.loc 1 3229 0
 6583 0078 436A     		ldr	r3, [r0, #36]
 6584 007a 5B06     		lsls	r3, r3, #25
 6585 007c 12D5     		bpl	.L229
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 6586              		.loc 1 3233 0
 6587 007e 0268     		ldr	r2, [r0]
 6588 0080 5168     		ldr	r1, [r2, #4]
 6589 0082 144B     		ldr	r3, .L231+24
 6590 0084 0B40     		ands	r3, r1
 6591 0086 016C     		ldr	r1, [r0, #64]
 6592 0088 0B43     		orrs	r3, r1
 6593 008a 5360     		str	r3, [r2, #4]
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6594              		.loc 1 3235 0
 6595 008c 8023     		movs	r3, #128
 6596 008e 5B03     		lsls	r3, r3, #13
 6597 0090 026C     		ldr	r2, [r0, #64]
 6598 0092 9A42     		cmp	r2, r3
 6599 0094 06D1     		bne	.L229
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6600              		.loc 1 3238 0
 6601 0096 0268     		ldr	r2, [r0]
 6602 0098 5168     		ldr	r1, [r2, #4]
 6603 009a 0F4B     		ldr	r3, .L231+28
 6604 009c 0B40     		ands	r3, r1
 6605 009e 416C     		ldr	r1, [r0, #68]
 6606 00a0 0B43     		orrs	r3, r1
 6607 00a2 5360     		str	r3, [r2, #4]
 6608              	.L229:
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6609              		.loc 1 3243 0
 6610 00a4 436A     		ldr	r3, [r0, #36]
 6611 00a6 1B06     		lsls	r3, r3, #24
 6612 00a8 06D5     		bpl	.L222
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6613              		.loc 1 3246 0
 6614 00aa 0168     		ldr	r1, [r0]
 6615 00ac 4A68     		ldr	r2, [r1, #4]
 6616 00ae 0B4B     		ldr	r3, .L231+32
 6617 00b0 1340     		ands	r3, r2
 6618 00b2 826C     		ldr	r2, [r0, #72]
 6619 00b4 1343     		orrs	r3, r2
 6620 00b6 4B60     		str	r3, [r1, #4]
 6621              	.L222:
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6622              		.loc 1 3248 0
 6623              		@ sp needed
 6624 00b8 7047     		bx	lr
 6625              	.L232:
 6626 00ba C046     		.align	2
 6627              	.L231:
 6628 00bc FFFFFDFF 		.word	-131073
 6629 00c0 FFFFFEFF 		.word	-65537
 6630 00c4 FFFFFBFF 		.word	-262145
ARM GAS  /tmp/ccQJ5CSb.s 			page 207


 6631 00c8 FF7FFFFF 		.word	-32769
 6632 00cc FFEFFFFF 		.word	-4097
 6633 00d0 FFDFFFFF 		.word	-8193
 6634 00d4 FFFFEFFF 		.word	-1048577
 6635 00d8 FFFF9FFF 		.word	-6291457
 6636 00dc FFFFF7FF 		.word	-524289
 6637              		.cfi_endproc
 6638              	.LFE82:
 6640              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6641              		.align	2
 6642              		.global	UART_WaitOnFlagUntilTimeout
 6643              		.code	16
 6644              		.thumb_func
 6646              	UART_WaitOnFlagUntilTimeout:
 6647              	.LFB84:
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 6648              		.loc 1 3308 0
 6649              		.cfi_startproc
 6650              		@ args = 4, pretend = 0, frame = 0
 6651              		@ frame_needed = 0, uses_anonymous_args = 0
 6652              	.LVL432:
 6653 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6654              	.LCFI35:
 6655              		.cfi_def_cfa_offset 20
 6656              		.cfi_offset 4, -20
 6657              		.cfi_offset 5, -16
 6658              		.cfi_offset 6, -12
 6659              		.cfi_offset 7, -8
 6660              		.cfi_offset 14, -4
 6661 0002 4746     		mov	r7, r8
 6662 0004 80B4     		push	{r7}
 6663              	.LCFI36:
 6664              		.cfi_def_cfa_offset 24
 6665              		.cfi_offset 8, -24
 6666 0006 0400     		movs	r4, r0
 6667 0008 0F00     		movs	r7, r1
 6668 000a 1600     		movs	r6, r2
 6669 000c 9846     		mov	r8, r3
 6670 000e 069D     		ldr	r5, [sp, #24]
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6671              		.loc 1 3310 0
 6672 0010 53E0     		b	.L235
 6673              	.LVL433:
 6674              	.L239:
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6675              		.loc 1 3313 0
 6676 0012 6B1C     		adds	r3, r5, #1
 6677 0014 51D0     		beq	.L235
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 6678              		.loc 1 3315 0
 6679 0016 FFF7FEFF 		bl	HAL_GetTick
 6680              	.LVL434:
 6681 001a 4346     		mov	r3, r8
 6682 001c C01A     		subs	r0, r0, r3
 6683 001e 8542     		cmp	r5, r0
 6684 0020 01D3     		bcc	.L236
 6685              	.LVL435:
ARM GAS  /tmp/ccQJ5CSb.s 			page 208


3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 6686              		.loc 1 3315 0 is_stmt 0 discriminator 1
 6687 0022 002D     		cmp	r5, #0
 6688 0024 1ED1     		bne	.L237
 6689              	.L236:
 6690              	.LBB1035:
 6691              	.LBB1036:
 6692              	.LBB1037:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6693              		.loc 2 386 0 is_stmt 1
 6694              		.syntax divided
 6695              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6696 0026 EFF31080 		MRS r0, primask
 6697              	@ 0 "" 2
 6698              	.LVL436:
 6699              		.thumb
 6700              		.syntax unified
 6701              	.LBE1037:
 6702              	.LBE1036:
 6703              	.LBB1038:
 6704              	.LBB1039:
 6705              		.loc 2 414 0
 6706 002a 0121     		movs	r1, #1
 6707              		.syntax divided
 6708              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6709 002c 81F31088 		MSR primask, r1
 6710              	@ 0 "" 2
 6711              	.LVL437:
 6712              		.thumb
 6713              		.syntax unified
 6714              	.LBE1039:
 6715              	.LBE1038:
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6716              		.loc 1 3319 0
 6717 0030 2268     		ldr	r2, [r4]
 6718 0032 1568     		ldr	r5, [r2]
 6719 0034 274B     		ldr	r3, .L240
 6720              	.LVL438:
 6721 0036 2B40     		ands	r3, r5
 6722 0038 1360     		str	r3, [r2]
 6723              	.LBB1040:
 6724              	.LBB1041:
 6725              		.loc 2 414 0
 6726              		.syntax divided
 6727              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6728 003a 80F31088 		MSR primask, r0
 6729              	@ 0 "" 2
 6730              		.thumb
 6731              		.syntax unified
 6732              	.LBE1041:
 6733              	.LBE1040:
 6734              	.LBE1035:
 6735              	.LBB1042:
 6736              	.LBB1043:
 6737              	.LBB1044:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6738              		.loc 2 386 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 209


 6739              		.syntax divided
 6740              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6741 003e EFF31080 		MRS r0, primask
 6742              	@ 0 "" 2
 6743              	.LVL439:
 6744              		.thumb
 6745              		.syntax unified
 6746              	.LBE1044:
 6747              	.LBE1043:
 6748              	.LBB1045:
 6749              	.LBB1046:
 6750              		.loc 2 414 0
 6751 0042 0123     		movs	r3, #1
 6752              		.syntax divided
 6753              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6754 0044 83F31088 		MSR primask, r3
 6755              	@ 0 "" 2
 6756              	.LVL440:
 6757              		.thumb
 6758              		.syntax unified
 6759              	.LBE1046:
 6760              	.LBE1045:
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6761              		.loc 1 3320 0
 6762 0048 2268     		ldr	r2, [r4]
 6763 004a 9368     		ldr	r3, [r2, #8]
 6764 004c 8B43     		bics	r3, r1
 6765 004e 9360     		str	r3, [r2, #8]
 6766              	.LBB1047:
 6767              	.LBB1048:
 6768              		.loc 2 414 0
 6769              		.syntax divided
 6770              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6771 0050 80F31088 		MSR primask, r0
 6772              	@ 0 "" 2
 6773              		.thumb
 6774              		.syntax unified
 6775              	.LBE1048:
 6776              	.LBE1047:
 6777              	.LBE1042:
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6778              		.loc 1 3322 0
 6779 0054 2023     		movs	r3, #32
 6780 0056 A367     		str	r3, [r4, #120]
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6781              		.loc 1 3323 0
 6782 0058 E367     		str	r3, [r4, #124]
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6783              		.loc 1 3325 0
 6784 005a 0022     		movs	r2, #0
 6785 005c 5433     		adds	r3, r3, #84
 6786 005e E254     		strb	r2, [r4, r3]
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 6787              		.loc 1 3327 0
 6788 0060 0320     		movs	r0, #3
 6789 0062 34E0     		b	.L238
 6790              	.LVL441:
ARM GAS  /tmp/ccQJ5CSb.s 			page 210


 6791              	.L237:
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 6792              		.loc 1 3330 0
 6793 0064 2368     		ldr	r3, [r4]
 6794              	.LVL442:
 6795 0066 1A68     		ldr	r2, [r3]
 6796 0068 5207     		lsls	r2, r2, #29
 6797 006a 26D5     		bpl	.L235
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 6798              		.loc 1 3332 0
 6799 006c DA69     		ldr	r2, [r3, #28]
 6800 006e 1205     		lsls	r2, r2, #20
 6801 0070 23D5     		bpl	.L235
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6802              		.loc 1 3335 0
 6803 0072 8022     		movs	r2, #128
 6804 0074 1201     		lsls	r2, r2, #4
 6805 0076 1A62     		str	r2, [r3, #32]
 6806              	.LBB1049:
 6807              	.LBB1050:
 6808              	.LBB1051:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6809              		.loc 2 386 0
 6810              		.syntax divided
 6811              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6812 0078 EFF31080 		MRS r0, primask
 6813              	@ 0 "" 2
 6814              	.LVL443:
 6815              		.thumb
 6816              		.syntax unified
 6817              	.LBE1051:
 6818              	.LBE1050:
 6819              	.LBB1052:
 6820              	.LBB1053:
 6821              		.loc 2 414 0
 6822 007c 0121     		movs	r1, #1
 6823              		.syntax divided
 6824              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6825 007e 81F31088 		MSR primask, r1
 6826              	@ 0 "" 2
 6827              	.LVL444:
 6828              		.thumb
 6829              		.syntax unified
 6830              	.LBE1053:
 6831              	.LBE1052:
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6832              		.loc 1 3339 0
 6833 0082 2268     		ldr	r2, [r4]
 6834 0084 1568     		ldr	r5, [r2]
 6835 0086 134B     		ldr	r3, .L240
 6836 0088 2B40     		ands	r3, r5
 6837 008a 1360     		str	r3, [r2]
 6838              	.LBB1054:
 6839              	.LBB1055:
 6840              		.loc 2 414 0
 6841              		.syntax divided
 6842              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccQJ5CSb.s 			page 211


 6843 008c 80F31088 		MSR primask, r0
 6844              	@ 0 "" 2
 6845              		.thumb
 6846              		.syntax unified
 6847              	.LBE1055:
 6848              	.LBE1054:
 6849              	.LBE1049:
 6850              	.LBB1056:
 6851              	.LBB1057:
 6852              	.LBB1058:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6853              		.loc 2 386 0
 6854              		.syntax divided
 6855              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6856 0090 EFF31080 		MRS r0, primask
 6857              	@ 0 "" 2
 6858              	.LVL445:
 6859              		.thumb
 6860              		.syntax unified
 6861              	.LBE1058:
 6862              	.LBE1057:
 6863              	.LBB1059:
 6864              	.LBB1060:
 6865              		.loc 2 414 0
 6866 0094 0123     		movs	r3, #1
 6867              		.syntax divided
 6868              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6869 0096 83F31088 		MSR primask, r3
 6870              	@ 0 "" 2
 6871              	.LVL446:
 6872              		.thumb
 6873              		.syntax unified
 6874              	.LBE1060:
 6875              	.LBE1059:
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6876              		.loc 1 3340 0
 6877 009a 2268     		ldr	r2, [r4]
 6878 009c 9368     		ldr	r3, [r2, #8]
 6879 009e 8B43     		bics	r3, r1
 6880 00a0 9360     		str	r3, [r2, #8]
 6881              	.LBB1061:
 6882              	.LBB1062:
 6883              		.loc 2 414 0
 6884              		.syntax divided
 6885              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6886 00a2 80F31088 		MSR primask, r0
 6887              	@ 0 "" 2
 6888              		.thumb
 6889              		.syntax unified
 6890              	.LBE1062:
 6891              	.LBE1061:
 6892              	.LBE1056:
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 6893              		.loc 1 3342 0
 6894 00a6 2023     		movs	r3, #32
 6895 00a8 A367     		str	r3, [r4, #120]
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
ARM GAS  /tmp/ccQJ5CSb.s 			page 212


 6896              		.loc 1 3343 0
 6897 00aa E367     		str	r3, [r4, #124]
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6898              		.loc 1 3344 0
 6899 00ac 8022     		movs	r2, #128
 6900 00ae A350     		str	r3, [r4, r2]
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6901              		.loc 1 3347 0
 6902 00b0 0022     		movs	r2, #0
 6903 00b2 5433     		adds	r3, r3, #84
 6904 00b4 E254     		strb	r2, [r4, r3]
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 6905              		.loc 1 3349 0
 6906 00b6 0320     		movs	r0, #3
 6907 00b8 09E0     		b	.L238
 6908              	.L235:
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6909              		.loc 1 3310 0
 6910 00ba 2368     		ldr	r3, [r4]
 6911 00bc DB69     		ldr	r3, [r3, #28]
 6912 00be 3A00     		movs	r2, r7
 6913 00c0 9A43     		bics	r2, r3
 6914 00c2 1300     		movs	r3, r2
 6915 00c4 5A42     		rsbs	r2, r3, #0
 6916 00c6 5341     		adcs	r3, r3, r2
 6917 00c8 B342     		cmp	r3, r6
 6918 00ca A2D0     		beq	.L239
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6919              		.loc 1 3354 0
 6920 00cc 0020     		movs	r0, #0
 6921              	.L238:
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6922              		.loc 1 3355 0
 6923              		@ sp needed
 6924              	.LVL447:
 6925              	.LVL448:
 6926              	.LVL449:
 6927 00ce 04BC     		pop	{r2}
 6928 00d0 9046     		mov	r8, r2
 6929 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6930              	.L241:
 6931              		.align	2
 6932              	.L240:
 6933 00d4 5FFEFFFF 		.word	-417
 6934              		.cfi_endproc
 6935              	.LFE84:
 6937              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 6938              		.align	2
 6939              		.global	HAL_UART_Transmit
 6940              		.code	16
 6941              		.thumb_func
 6943              	HAL_UART_Transmit:
 6944              	.LFB46:
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 6945              		.loc 1 1154 0
 6946              		.cfi_startproc
 6947              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccQJ5CSb.s 			page 213


 6948              		@ frame_needed = 0, uses_anonymous_args = 0
 6949              	.LVL450:
 6950 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6951              	.LCFI37:
 6952              		.cfi_def_cfa_offset 20
 6953              		.cfi_offset 4, -20
 6954              		.cfi_offset 5, -16
 6955              		.cfi_offset 6, -12
 6956              		.cfi_offset 7, -8
 6957              		.cfi_offset 14, -4
 6958 0002 85B0     		sub	sp, sp, #20
 6959              	.LCFI38:
 6960              		.cfi_def_cfa_offset 40
 6961 0004 0400     		movs	r4, r0
 6962 0006 0F00     		movs	r7, r1
 6963 0008 1600     		movs	r6, r2
 6964 000a 1D00     		movs	r5, r3
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 6965              		.loc 1 1160 0
 6966 000c 836F     		ldr	r3, [r0, #120]
 6967              	.LVL451:
 6968 000e 202B     		cmp	r3, #32
 6969 0010 5ED1     		bne	.L250
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6970              		.loc 1 1162 0
 6971 0012 0029     		cmp	r1, #0
 6972 0014 5ED0     		beq	.L251
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6973              		.loc 1 1162 0 is_stmt 0 discriminator 1
 6974 0016 002A     		cmp	r2, #0
 6975 0018 5ED0     		beq	.L252
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6976              		.loc 1 1170 0 is_stmt 1
 6977 001a 8023     		movs	r3, #128
 6978 001c 5B01     		lsls	r3, r3, #5
 6979 001e 8268     		ldr	r2, [r0, #8]
 6980              	.LVL452:
 6981 0020 9A42     		cmp	r2, r3
 6982 0022 04D1     		bne	.L244
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 6983              		.loc 1 1170 0 is_stmt 0 discriminator 1
 6984 0024 0369     		ldr	r3, [r0, #16]
 6985 0026 002B     		cmp	r3, #0
 6986 0028 01D1     		bne	.L244
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 6987              		.loc 1 1172 0 is_stmt 1
 6988 002a CB07     		lsls	r3, r1, #31
 6989 002c 56D4     		bmi	.L253
 6990              	.L244:
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6991              		.loc 1 1178 0
 6992 002e 7423     		movs	r3, #116
 6993 0030 E35C     		ldrb	r3, [r4, r3]
 6994 0032 012B     		cmp	r3, #1
 6995 0034 54D0     		beq	.L254
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6996              		.loc 1 1178 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 214


 6997 0036 0122     		movs	r2, #1
 6998 0038 7423     		movs	r3, #116
 6999 003a E254     		strb	r2, [r4, r3]
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 7000              		.loc 1 1180 0 is_stmt 1 discriminator 2
 7001 003c 0022     		movs	r2, #0
 7002 003e 0C33     		adds	r3, r3, #12
 7003 0040 E250     		str	r2, [r4, r3]
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7004              		.loc 1 1181 0 discriminator 2
 7005 0042 5F3B     		subs	r3, r3, #95
 7006 0044 A367     		str	r3, [r4, #120]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7007              		.loc 1 1184 0 discriminator 2
 7008 0046 FFF7FEFF 		bl	HAL_GetTick
 7009              	.LVL453:
 7010 004a 0390     		str	r0, [sp, #12]
 7011              	.LVL454:
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 7012              		.loc 1 1186 0 discriminator 2
 7013 004c 5023     		movs	r3, #80
 7014 004e E652     		strh	r6, [r4, r3]
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7015              		.loc 1 1187 0 discriminator 2
 7016 0050 0233     		adds	r3, r3, #2
 7017 0052 E652     		strh	r6, [r4, r3]
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7018              		.loc 1 1190 0 discriminator 2
 7019 0054 8023     		movs	r3, #128
 7020 0056 5B01     		lsls	r3, r3, #5
 7021 0058 A268     		ldr	r2, [r4, #8]
 7022 005a 9A42     		cmp	r2, r3
 7023 005c 04D1     		bne	.L255
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7024              		.loc 1 1190 0 is_stmt 0 discriminator 1
 7025 005e 2369     		ldr	r3, [r4, #16]
 7026 0060 002B     		cmp	r3, #0
 7027 0062 03D0     		beq	.L256
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7028              		.loc 1 1198 0 is_stmt 1
 7029 0064 0026     		movs	r6, #0
 7030 0066 03E0     		b	.L245
 7031              	.L255:
 7032 0068 0026     		movs	r6, #0
 7033 006a 01E0     		b	.L245
 7034              	.L256:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7035              		.loc 1 1193 0
 7036 006c 3E00     		movs	r6, r7
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 7037              		.loc 1 1192 0
 7038 006e 0027     		movs	r7, #0
 7039              	.LVL455:
 7040              	.L245:
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7041              		.loc 1 1201 0
 7042 0070 0022     		movs	r2, #0
ARM GAS  /tmp/ccQJ5CSb.s 			page 215


 7043 0072 7423     		movs	r3, #116
 7044 0074 E254     		strb	r2, [r4, r3]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7045              		.loc 1 1203 0
 7046 0076 1AE0     		b	.L246
 7047              	.LVL456:
 7048              	.L249:
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 7049              		.loc 1 1205 0
 7050 0078 0095     		str	r5, [sp]
 7051 007a 039B     		ldr	r3, [sp, #12]
 7052 007c 0022     		movs	r2, #0
 7053 007e 8021     		movs	r1, #128
 7054 0080 2000     		movs	r0, r4
 7055 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7056              	.LVL457:
 7057 0086 0028     		cmp	r0, #0
 7058 0088 2CD1     		bne	.L257
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 7059              		.loc 1 1209 0
 7060 008a 002F     		cmp	r7, #0
 7061 008c 06D1     		bne	.L247
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 7062              		.loc 1 1211 0
 7063 008e 3388     		ldrh	r3, [r6]
 7064 0090 DB05     		lsls	r3, r3, #23
 7065 0092 DB0D     		lsrs	r3, r3, #23
 7066 0094 2268     		ldr	r2, [r4]
 7067 0096 1385     		strh	r3, [r2, #40]
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7068              		.loc 1 1212 0
 7069 0098 0236     		adds	r6, r6, #2
 7070              	.LVL458:
 7071 009a 03E0     		b	.L248
 7072              	.L247:
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 7073              		.loc 1 1216 0
 7074 009c 3B78     		ldrb	r3, [r7]
 7075 009e 2268     		ldr	r2, [r4]
 7076 00a0 1385     		strh	r3, [r2, #40]
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7077              		.loc 1 1217 0
 7078 00a2 0137     		adds	r7, r7, #1
 7079              	.LVL459:
 7080              	.L248:
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7081              		.loc 1 1219 0
 7082 00a4 5222     		movs	r2, #82
 7083 00a6 A35A     		ldrh	r3, [r4, r2]
 7084 00a8 013B     		subs	r3, r3, #1
 7085 00aa 9BB2     		uxth	r3, r3
 7086 00ac A352     		strh	r3, [r4, r2]
 7087              	.L246:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7088              		.loc 1 1203 0
 7089 00ae 5223     		movs	r3, #82
 7090 00b0 E35A     		ldrh	r3, [r4, r3]
ARM GAS  /tmp/ccQJ5CSb.s 			page 216


 7091 00b2 9BB2     		uxth	r3, r3
 7092 00b4 002B     		cmp	r3, #0
 7093 00b6 DFD1     		bne	.L249
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7094              		.loc 1 1222 0
 7095 00b8 0095     		str	r5, [sp]
 7096 00ba 039B     		ldr	r3, [sp, #12]
 7097 00bc 0022     		movs	r2, #0
 7098 00be 4021     		movs	r1, #64
 7099 00c0 2000     		movs	r0, r4
 7100 00c2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7101              	.LVL460:
 7102 00c6 0028     		cmp	r0, #0
 7103 00c8 0ED1     		bne	.L258
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7104              		.loc 1 1228 0
 7105 00ca 2023     		movs	r3, #32
 7106 00cc A367     		str	r3, [r4, #120]
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7107              		.loc 1 1230 0
 7108 00ce 0CE0     		b	.L243
 7109              	.LVL461:
 7110              	.L250:
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7111              		.loc 1 1234 0
 7112 00d0 0220     		movs	r0, #2
 7113              	.LVL462:
 7114 00d2 0AE0     		b	.L243
 7115              	.LVL463:
 7116              	.L251:
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7117              		.loc 1 1164 0
 7118 00d4 0120     		movs	r0, #1
 7119              	.LVL464:
 7120 00d6 08E0     		b	.L243
 7121              	.LVL465:
 7122              	.L252:
 7123 00d8 0120     		movs	r0, #1
 7124              	.LVL466:
 7125 00da 06E0     		b	.L243
 7126              	.LVL467:
 7127              	.L253:
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7128              		.loc 1 1174 0
 7129 00dc 0120     		movs	r0, #1
 7130              	.LVL468:
 7131 00de 04E0     		b	.L243
 7132              	.LVL469:
 7133              	.L254:
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7134              		.loc 1 1178 0
 7135 00e0 0220     		movs	r0, #2
 7136              	.LVL470:
 7137 00e2 02E0     		b	.L243
 7138              	.LVL471:
 7139              	.L257:
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccQJ5CSb.s 			page 217


 7140              		.loc 1 1207 0
 7141 00e4 0320     		movs	r0, #3
 7142 00e6 00E0     		b	.L243
 7143              	.L258:
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7144              		.loc 1 1224 0
 7145 00e8 0320     		movs	r0, #3
 7146              	.LVL472:
 7147              	.L243:
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7148              		.loc 1 1236 0
 7149 00ea 05B0     		add	sp, sp, #20
 7150              		@ sp needed
 7151              	.LVL473:
 7152              	.LVL474:
 7153 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 7154              		.cfi_endproc
 7155              	.LFE46:
 7157 00ee C046     		.section	.text.HAL_UART_Receive,"ax",%progbits
 7158              		.align	2
 7159              		.global	HAL_UART_Receive
 7160              		.code	16
 7161              		.thumb_func
 7163              	HAL_UART_Receive:
 7164              	.LFB47:
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 7165              		.loc 1 1255 0
 7166              		.cfi_startproc
 7167              		@ args = 0, pretend = 0, frame = 8
 7168              		@ frame_needed = 0, uses_anonymous_args = 0
 7169              	.LVL475:
 7170 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7171              	.LCFI39:
 7172              		.cfi_def_cfa_offset 20
 7173              		.cfi_offset 4, -20
 7174              		.cfi_offset 5, -16
 7175              		.cfi_offset 6, -12
 7176              		.cfi_offset 7, -8
 7177              		.cfi_offset 14, -4
 7178 0002 4746     		mov	r7, r8
 7179 0004 80B4     		push	{r7}
 7180              	.LCFI40:
 7181              		.cfi_def_cfa_offset 24
 7182              		.cfi_offset 8, -24
 7183 0006 84B0     		sub	sp, sp, #16
 7184              	.LCFI41:
 7185              		.cfi_def_cfa_offset 40
 7186 0008 0400     		movs	r4, r0
 7187 000a 0F00     		movs	r7, r1
 7188 000c 1600     		movs	r6, r2
 7189 000e 1D00     		movs	r5, r3
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7190              		.loc 1 1262 0
 7191 0010 C36F     		ldr	r3, [r0, #124]
 7192              	.LVL476:
 7193 0012 202B     		cmp	r3, #32
 7194 0014 00D0     		beq	.LCB5531
ARM GAS  /tmp/ccQJ5CSb.s 			page 218


 7195 0016 80E0     		b	.L272	@long jump
 7196              	.LCB5531:
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7197              		.loc 1 1264 0
 7198 0018 0029     		cmp	r1, #0
 7199 001a 00D1     		bne	.LCB5533
 7200 001c 7FE0     		b	.L273	@long jump
 7201              	.LCB5533:
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7202              		.loc 1 1264 0 is_stmt 0 discriminator 1
 7203 001e 002A     		cmp	r2, #0
 7204 0020 00D1     		bne	.LCB5535
 7205 0022 7EE0     		b	.L274	@long jump
 7206              	.LCB5535:
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7207              		.loc 1 1272 0 is_stmt 1
 7208 0024 8023     		movs	r3, #128
 7209 0026 5B01     		lsls	r3, r3, #5
 7210 0028 8268     		ldr	r2, [r0, #8]
 7211              	.LVL477:
 7212 002a 9A42     		cmp	r2, r3
 7213 002c 04D1     		bne	.L261
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7214              		.loc 1 1272 0 is_stmt 0 discriminator 1
 7215 002e 0369     		ldr	r3, [r0, #16]
 7216 0030 002B     		cmp	r3, #0
 7217 0032 01D1     		bne	.L261
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 7218              		.loc 1 1274 0 is_stmt 1
 7219 0034 CB07     		lsls	r3, r1, #31
 7220 0036 76D4     		bmi	.L275
 7221              	.L261:
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7222              		.loc 1 1280 0
 7223 0038 7423     		movs	r3, #116
 7224 003a E35C     		ldrb	r3, [r4, r3]
 7225 003c 012B     		cmp	r3, #1
 7226 003e 74D0     		beq	.L276
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7227              		.loc 1 1280 0 is_stmt 0 discriminator 2
 7228 0040 0122     		movs	r2, #1
 7229 0042 7423     		movs	r3, #116
 7230 0044 E254     		strb	r2, [r4, r3]
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 7231              		.loc 1 1282 0 is_stmt 1 discriminator 2
 7232 0046 0023     		movs	r3, #0
 7233 0048 7F32     		adds	r2, r2, #127
 7234 004a A350     		str	r3, [r4, r2]
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7235              		.loc 1 1283 0 discriminator 2
 7236 004c 5E3A     		subs	r2, r2, #94
 7237 004e E267     		str	r2, [r4, #124]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7238              		.loc 1 1284 0 discriminator 2
 7239 0050 2366     		str	r3, [r4, #96]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7240              		.loc 1 1287 0 discriminator 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 219


 7241 0052 FFF7FEFF 		bl	HAL_GetTick
 7242              	.LVL478:
 7243 0056 0390     		str	r0, [sp, #12]
 7244              	.LVL479:
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 7245              		.loc 1 1289 0 discriminator 2
 7246 0058 5823     		movs	r3, #88
 7247 005a E652     		strh	r6, [r4, r3]
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7248              		.loc 1 1290 0 discriminator 2
 7249 005c 0233     		adds	r3, r3, #2
 7250 005e E652     		strh	r6, [r4, r3]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7251              		.loc 1 1293 0 discriminator 2
 7252 0060 A368     		ldr	r3, [r4, #8]
 7253 0062 8022     		movs	r2, #128
 7254 0064 5201     		lsls	r2, r2, #5
 7255 0066 9342     		cmp	r3, r2
 7256 0068 0AD1     		bne	.L262
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7257              		.loc 1 1293 0 is_stmt 0 discriminator 1
 7258 006a 2269     		ldr	r2, [r4, #16]
 7259 006c 002A     		cmp	r2, #0
 7260 006e 03D1     		bne	.L263
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7261              		.loc 1 1293 0 discriminator 3
 7262 0070 3149     		ldr	r1, .L280
 7263 0072 5C32     		adds	r2, r2, #92
 7264 0074 A152     		strh	r1, [r4, r2]
 7265 0076 13E0     		b	.L264
 7266              	.L263:
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7267              		.loc 1 1293 0 discriminator 4
 7268 0078 FF21     		movs	r1, #255
 7269 007a 5C22     		movs	r2, #92
 7270 007c A152     		strh	r1, [r4, r2]
 7271 007e 0FE0     		b	.L264
 7272              	.L262:
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7273              		.loc 1 1293 0 discriminator 2
 7274 0080 002B     		cmp	r3, #0
 7275 0082 0AD1     		bne	.L265
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7276              		.loc 1 1293 0 discriminator 5
 7277 0084 2269     		ldr	r2, [r4, #16]
 7278 0086 002A     		cmp	r2, #0
 7279 0088 03D1     		bne	.L266
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7280              		.loc 1 1293 0 discriminator 7
 7281 008a FF21     		movs	r1, #255
 7282 008c 5C32     		adds	r2, r2, #92
 7283 008e A152     		strh	r1, [r4, r2]
 7284 0090 06E0     		b	.L264
 7285              	.L266:
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7286              		.loc 1 1293 0 discriminator 8
 7287 0092 7F21     		movs	r1, #127
ARM GAS  /tmp/ccQJ5CSb.s 			page 220


 7288 0094 5C22     		movs	r2, #92
 7289 0096 A152     		strh	r1, [r4, r2]
 7290 0098 02E0     		b	.L264
 7291              	.L265:
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 7292              		.loc 1 1293 0 discriminator 6
 7293 009a 0021     		movs	r1, #0
 7294 009c 5C22     		movs	r2, #92
 7295 009e A152     		strh	r1, [r4, r2]
 7296              	.L264:
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7297              		.loc 1 1294 0 is_stmt 1
 7298 00a0 5C22     		movs	r2, #92
 7299 00a2 A65A     		ldrh	r6, [r4, r2]
 7300              	.LVL480:
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7301              		.loc 1 1297 0
 7302 00a4 8022     		movs	r2, #128
 7303 00a6 5201     		lsls	r2, r2, #5
 7304 00a8 9342     		cmp	r3, r2
 7305 00aa 05D1     		bne	.L277
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7306              		.loc 1 1297 0 is_stmt 0 discriminator 1
 7307 00ac 2369     		ldr	r3, [r4, #16]
 7308 00ae 002B     		cmp	r3, #0
 7309 00b0 05D0     		beq	.L278
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7310              		.loc 1 1305 0 is_stmt 1
 7311 00b2 0023     		movs	r3, #0
 7312 00b4 9846     		mov	r8, r3
 7313 00b6 04E0     		b	.L267
 7314              	.L277:
 7315 00b8 0023     		movs	r3, #0
 7316 00ba 9846     		mov	r8, r3
 7317 00bc 01E0     		b	.L267
 7318              	.L278:
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7319              		.loc 1 1300 0
 7320 00be B846     		mov	r8, r7
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 7321              		.loc 1 1299 0
 7322 00c0 0027     		movs	r7, #0
 7323              	.LVL481:
 7324              	.L267:
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7325              		.loc 1 1308 0
 7326 00c2 0022     		movs	r2, #0
 7327 00c4 7423     		movs	r3, #116
 7328 00c6 E254     		strb	r2, [r4, r3]
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7329              		.loc 1 1311 0
 7330 00c8 1EE0     		b	.L268
 7331              	.LVL482:
 7332              	.L271:
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 7333              		.loc 1 1313 0
 7334 00ca 0095     		str	r5, [sp]
ARM GAS  /tmp/ccQJ5CSb.s 			page 221


 7335 00cc 039B     		ldr	r3, [sp, #12]
 7336 00ce 0022     		movs	r2, #0
 7337 00d0 2021     		movs	r1, #32
 7338 00d2 2000     		movs	r0, r4
 7339 00d4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7340              	.LVL483:
 7341 00d8 0028     		cmp	r0, #0
 7342 00da 28D1     		bne	.L279
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 7343              		.loc 1 1317 0
 7344 00dc 002F     		cmp	r7, #0
 7345 00de 08D1     		bne	.L269
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 7346              		.loc 1 1319 0
 7347 00e0 2368     		ldr	r3, [r4]
 7348 00e2 9B8C     		ldrh	r3, [r3, #36]
 7349 00e4 3340     		ands	r3, r6
 7350 00e6 4246     		mov	r2, r8
 7351 00e8 1380     		strh	r3, [r2]
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7352              		.loc 1 1320 0
 7353 00ea 0223     		movs	r3, #2
 7354 00ec 9C46     		mov	ip, r3
 7355 00ee E044     		add	r8, r8, ip
 7356              	.LVL484:
 7357 00f0 05E0     		b	.L270
 7358              	.L269:
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 7359              		.loc 1 1324 0
 7360 00f2 2368     		ldr	r3, [r4]
 7361 00f4 9A8C     		ldrh	r2, [r3, #36]
 7362 00f6 F3B2     		uxtb	r3, r6
 7363 00f8 1340     		ands	r3, r2
 7364 00fa 3B70     		strb	r3, [r7]
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7365              		.loc 1 1325 0
 7366 00fc 0137     		adds	r7, r7, #1
 7367              	.LVL485:
 7368              	.L270:
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7369              		.loc 1 1327 0
 7370 00fe 5A22     		movs	r2, #90
 7371 0100 A35A     		ldrh	r3, [r4, r2]
 7372 0102 013B     		subs	r3, r3, #1
 7373 0104 9BB2     		uxth	r3, r3
 7374 0106 A352     		strh	r3, [r4, r2]
 7375              	.L268:
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7376              		.loc 1 1311 0
 7377 0108 5A23     		movs	r3, #90
 7378 010a E35A     		ldrh	r3, [r4, r3]
 7379 010c 9BB2     		uxth	r3, r3
 7380 010e 002B     		cmp	r3, #0
 7381 0110 DBD1     		bne	.L271
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7382              		.loc 1 1331 0
 7383 0112 2033     		adds	r3, r3, #32
ARM GAS  /tmp/ccQJ5CSb.s 			page 222


 7384 0114 E367     		str	r3, [r4, #124]
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7385              		.loc 1 1333 0
 7386 0116 0020     		movs	r0, #0
 7387 0118 0AE0     		b	.L260
 7388              	.LVL486:
 7389              	.L272:
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7390              		.loc 1 1337 0
 7391 011a 0220     		movs	r0, #2
 7392              	.LVL487:
 7393 011c 08E0     		b	.L260
 7394              	.LVL488:
 7395              	.L273:
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7396              		.loc 1 1266 0
 7397 011e 0120     		movs	r0, #1
 7398              	.LVL489:
 7399 0120 06E0     		b	.L260
 7400              	.LVL490:
 7401              	.L274:
 7402 0122 0120     		movs	r0, #1
 7403              	.LVL491:
 7404 0124 04E0     		b	.L260
 7405              	.LVL492:
 7406              	.L275:
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7407              		.loc 1 1276 0
 7408 0126 0120     		movs	r0, #1
 7409              	.LVL493:
 7410 0128 02E0     		b	.L260
 7411              	.LVL494:
 7412              	.L276:
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7413              		.loc 1 1280 0
 7414 012a 0220     		movs	r0, #2
 7415              	.LVL495:
 7416 012c 00E0     		b	.L260
 7417              	.LVL496:
 7418              	.L279:
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 7419              		.loc 1 1315 0
 7420 012e 0320     		movs	r0, #3
 7421              	.LVL497:
 7422              	.L260:
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7423              		.loc 1 1339 0
 7424 0130 04B0     		add	sp, sp, #16
 7425              		@ sp needed
 7426              	.LVL498:
 7427              	.LVL499:
 7428 0132 04BC     		pop	{r2}
 7429 0134 9046     		mov	r8, r2
 7430 0136 F0BD     		pop	{r4, r5, r6, r7, pc}
 7431              	.L281:
 7432              		.align	2
 7433              	.L280:
ARM GAS  /tmp/ccQJ5CSb.s 			page 223


 7434 0138 FF010000 		.word	511
 7435              		.cfi_endproc
 7436              	.LFE47:
 7438              		.section	.text.UART_CheckIdleState,"ax",%progbits
 7439              		.align	2
 7440              		.global	UART_CheckIdleState
 7441              		.code	16
 7442              		.thumb_func
 7444              	UART_CheckIdleState:
 7445              	.LFB83:
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
 7446              		.loc 1 3256 0
 7447              		.cfi_startproc
 7448              		@ args = 0, pretend = 0, frame = 0
 7449              		@ frame_needed = 0, uses_anonymous_args = 0
 7450              	.LVL500:
 7451 0000 30B5     		push	{r4, r5, lr}
 7452              	.LCFI42:
 7453              		.cfi_def_cfa_offset 12
 7454              		.cfi_offset 4, -12
 7455              		.cfi_offset 5, -8
 7456              		.cfi_offset 14, -4
 7457 0002 83B0     		sub	sp, sp, #12
 7458              	.LCFI43:
 7459              		.cfi_def_cfa_offset 24
 7460 0004 0400     		movs	r4, r0
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7461              		.loc 1 3260 0
 7462 0006 0022     		movs	r2, #0
 7463 0008 8023     		movs	r3, #128
 7464 000a C250     		str	r2, [r0, r3]
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7465              		.loc 1 3263 0
 7466 000c FFF7FEFF 		bl	HAL_GetTick
 7467              	.LVL501:
 7468 0010 0500     		movs	r5, r0
 7469              	.LVL502:
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7470              		.loc 1 3266 0
 7471 0012 2368     		ldr	r3, [r4]
 7472 0014 1B68     		ldr	r3, [r3]
 7473 0016 1B07     		lsls	r3, r3, #28
 7474 0018 0AD5     		bpl	.L283
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7475              		.loc 1 3269 0
 7476 001a 144B     		ldr	r3, .L288
 7477 001c 0093     		str	r3, [sp]
 7478 001e 0300     		movs	r3, r0
 7479 0020 0022     		movs	r2, #0
 7480 0022 8021     		movs	r1, #128
 7481 0024 8903     		lsls	r1, r1, #14
 7482 0026 2000     		movs	r0, r4
 7483              	.LVL503:
 7484 0028 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7485              	.LVL504:
 7486 002c 0028     		cmp	r0, #0
 7487 002e 17D1     		bne	.L286
ARM GAS  /tmp/ccQJ5CSb.s 			page 224


 7488              	.L283:
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7489              		.loc 1 3277 0
 7490 0030 2368     		ldr	r3, [r4]
 7491 0032 1B68     		ldr	r3, [r3]
 7492 0034 5B07     		lsls	r3, r3, #29
 7493 0036 0AD5     		bpl	.L285
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 7494              		.loc 1 3280 0
 7495 0038 0C4B     		ldr	r3, .L288
 7496 003a 0093     		str	r3, [sp]
 7497 003c 2B00     		movs	r3, r5
 7498 003e 0022     		movs	r2, #0
 7499 0040 8021     		movs	r1, #128
 7500 0042 C903     		lsls	r1, r1, #15
 7501 0044 2000     		movs	r0, r4
 7502 0046 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7503              	.LVL505:
 7504 004a 0028     		cmp	r0, #0
 7505 004c 0AD1     		bne	.L287
 7506              	.L285:
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7507              		.loc 1 3288 0
 7508 004e 2023     		movs	r3, #32
 7509 0050 A367     		str	r3, [r4, #120]
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7510              		.loc 1 3289 0
 7511 0052 E367     		str	r3, [r4, #124]
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7512              		.loc 1 3290 0
 7513 0054 0023     		movs	r3, #0
 7514 0056 2366     		str	r3, [r4, #96]
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7515              		.loc 1 3292 0
 7516 0058 7422     		movs	r2, #116
 7517 005a A354     		strb	r3, [r4, r2]
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7518              		.loc 1 3294 0
 7519 005c 0020     		movs	r0, #0
 7520 005e 02E0     		b	.L284
 7521              	.L286:
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7522              		.loc 1 3272 0
 7523 0060 0320     		movs	r0, #3
 7524 0062 00E0     		b	.L284
 7525              	.L287:
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 7526              		.loc 1 3283 0
 7527 0064 0320     		movs	r0, #3
 7528              	.L284:
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7529              		.loc 1 3295 0
 7530 0066 03B0     		add	sp, sp, #12
 7531              		@ sp needed
 7532              	.LVL506:
 7533              	.LVL507:
 7534 0068 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccQJ5CSb.s 			page 225


 7535              	.L289:
 7536 006a C046     		.align	2
 7537              	.L288:
 7538 006c FFFFFF01 		.word	33554431
 7539              		.cfi_endproc
 7540              	.LFE83:
 7542              		.section	.text.HAL_UART_Init,"ax",%progbits
 7543              		.align	2
 7544              		.global	HAL_UART_Init
 7545              		.code	16
 7546              		.thumb_func
 7548              	HAL_UART_Init:
 7549              	.LFB40:
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 7550              		.loc 1 290 0
 7551              		.cfi_startproc
 7552              		@ args = 0, pretend = 0, frame = 0
 7553              		@ frame_needed = 0, uses_anonymous_args = 0
 7554              	.LVL508:
 7555 0000 10B5     		push	{r4, lr}
 7556              	.LCFI44:
 7557              		.cfi_def_cfa_offset 8
 7558              		.cfi_offset 4, -8
 7559              		.cfi_offset 14, -4
 7560 0002 041E     		subs	r4, r0, #0
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7561              		.loc 1 292 0
 7562 0004 2CD0     		beq	.L294
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7563              		.loc 1 308 0
 7564 0006 836F     		ldr	r3, [r0, #120]
 7565 0008 002B     		cmp	r3, #0
 7566 000a 04D1     		bne	.L292
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7567              		.loc 1 311 0
 7568 000c 0022     		movs	r2, #0
 7569 000e 7433     		adds	r3, r3, #116
 7570 0010 C254     		strb	r2, [r0, r3]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7571              		.loc 1 325 0
 7572 0012 FFF7FEFF 		bl	HAL_UART_MspInit
 7573              	.LVL509:
 7574              	.L292:
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7575              		.loc 1 329 0
 7576 0016 2423     		movs	r3, #36
 7577 0018 A367     		str	r3, [r4, #120]
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7578              		.loc 1 331 0
 7579 001a 2268     		ldr	r2, [r4]
 7580 001c 1368     		ldr	r3, [r2]
 7581 001e 0121     		movs	r1, #1
 7582 0020 8B43     		bics	r3, r1
 7583 0022 1360     		str	r3, [r2]
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7584              		.loc 1 334 0
 7585 0024 2000     		movs	r0, r4
ARM GAS  /tmp/ccQJ5CSb.s 			page 226


 7586 0026 FFF7FEFF 		bl	UART_SetConfig
 7587              	.LVL510:
 7588 002a 0128     		cmp	r0, #1
 7589 002c 19D0     		beq	.L291
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7590              		.loc 1 339 0
 7591 002e 636A     		ldr	r3, [r4, #36]
 7592 0030 002B     		cmp	r3, #0
 7593 0032 02D0     		beq	.L293
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7594              		.loc 1 341 0
 7595 0034 2000     		movs	r0, r4
 7596 0036 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7597              	.LVL511:
 7598              	.L293:
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 7599              		.loc 1 350 0
 7600 003a 2268     		ldr	r2, [r4]
 7601 003c 5168     		ldr	r1, [r2, #4]
 7602 003e 094B     		ldr	r3, .L295
 7603 0040 0B40     		ands	r3, r1
 7604 0042 5360     		str	r3, [r2, #4]
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 7605              		.loc 1 362 0
 7606 0044 2268     		ldr	r2, [r4]
 7607 0046 9368     		ldr	r3, [r2, #8]
 7608 0048 0821     		movs	r1, #8
 7609 004a 8B43     		bics	r3, r1
 7610 004c 9360     		str	r3, [r2, #8]
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7611              		.loc 1 366 0
 7612 004e 2268     		ldr	r2, [r4]
 7613 0050 1168     		ldr	r1, [r2]
 7614 0052 0123     		movs	r3, #1
 7615 0054 0B43     		orrs	r3, r1
 7616 0056 1360     		str	r3, [r2]
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7617              		.loc 1 369 0
 7618 0058 2000     		movs	r0, r4
 7619 005a FFF7FEFF 		bl	UART_CheckIdleState
 7620              	.LVL512:
 7621 005e 00E0     		b	.L291
 7622              	.LVL513:
 7623              	.L294:
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7624              		.loc 1 294 0
 7625 0060 0120     		movs	r0, #1
 7626              	.LVL514:
 7627              	.L291:
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7628              		.loc 1 370 0
 7629              		@ sp needed
 7630              	.LVL515:
 7631 0062 10BD     		pop	{r4, pc}
 7632              	.L296:
 7633              		.align	2
 7634              	.L295:
ARM GAS  /tmp/ccQJ5CSb.s 			page 227


 7635 0064 FFF7FFFF 		.word	-2049
 7636              		.cfi_endproc
 7637              	.LFE40:
 7639              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 7640              		.align	2
 7641              		.global	HAL_HalfDuplex_Init
 7642              		.code	16
 7643              		.thumb_func
 7645              	HAL_HalfDuplex_Init:
 7646              	.LFB41:
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 7647              		.loc 1 379 0
 7648              		.cfi_startproc
 7649              		@ args = 0, pretend = 0, frame = 0
 7650              		@ frame_needed = 0, uses_anonymous_args = 0
 7651              	.LVL516:
 7652 0000 10B5     		push	{r4, lr}
 7653              	.LCFI45:
 7654              		.cfi_def_cfa_offset 8
 7655              		.cfi_offset 4, -8
 7656              		.cfi_offset 14, -4
 7657 0002 041E     		subs	r4, r0, #0
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7658              		.loc 1 381 0
 7659 0004 2CD0     		beq	.L301
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7660              		.loc 1 389 0
 7661 0006 836F     		ldr	r3, [r0, #120]
 7662 0008 002B     		cmp	r3, #0
 7663 000a 04D1     		bne	.L299
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7664              		.loc 1 392 0
 7665 000c 0022     		movs	r2, #0
 7666 000e 7433     		adds	r3, r3, #116
 7667 0010 C254     		strb	r2, [r0, r3]
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7668              		.loc 1 406 0
 7669 0012 FFF7FEFF 		bl	HAL_UART_MspInit
 7670              	.LVL517:
 7671              	.L299:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7672              		.loc 1 410 0
 7673 0016 2423     		movs	r3, #36
 7674 0018 A367     		str	r3, [r4, #120]
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7675              		.loc 1 412 0
 7676 001a 2268     		ldr	r2, [r4]
 7677 001c 1368     		ldr	r3, [r2]
 7678 001e 0121     		movs	r1, #1
 7679 0020 8B43     		bics	r3, r1
 7680 0022 1360     		str	r3, [r2]
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7681              		.loc 1 415 0
 7682 0024 2000     		movs	r0, r4
 7683 0026 FFF7FEFF 		bl	UART_SetConfig
 7684              	.LVL518:
 7685 002a 0128     		cmp	r0, #1
ARM GAS  /tmp/ccQJ5CSb.s 			page 228


 7686 002c 19D0     		beq	.L298
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7687              		.loc 1 420 0
 7688 002e 636A     		ldr	r3, [r4, #36]
 7689 0030 002B     		cmp	r3, #0
 7690 0032 02D0     		beq	.L300
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7691              		.loc 1 422 0
 7692 0034 2000     		movs	r0, r4
 7693 0036 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7694              	.LVL519:
 7695              	.L300:
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 7696              		.loc 1 431 0
 7697 003a 2268     		ldr	r2, [r4]
 7698 003c 5168     		ldr	r1, [r2, #4]
 7699 003e 094B     		ldr	r3, .L302
 7700 0040 0B40     		ands	r3, r1
 7701 0042 5360     		str	r3, [r2, #4]
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7702              		.loc 1 446 0
 7703 0044 2268     		ldr	r2, [r4]
 7704 0046 9168     		ldr	r1, [r2, #8]
 7705 0048 0823     		movs	r3, #8
 7706 004a 0B43     		orrs	r3, r1
 7707 004c 9360     		str	r3, [r2, #8]
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7708              		.loc 1 448 0
 7709 004e 2268     		ldr	r2, [r4]
 7710 0050 1168     		ldr	r1, [r2]
 7711 0052 0123     		movs	r3, #1
 7712 0054 0B43     		orrs	r3, r1
 7713 0056 1360     		str	r3, [r2]
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7714              		.loc 1 451 0
 7715 0058 2000     		movs	r0, r4
 7716 005a FFF7FEFF 		bl	UART_CheckIdleState
 7717              	.LVL520:
 7718 005e 00E0     		b	.L298
 7719              	.LVL521:
 7720              	.L301:
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7721              		.loc 1 383 0
 7722 0060 0120     		movs	r0, #1
 7723              	.LVL522:
 7724              	.L298:
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7725              		.loc 1 452 0
 7726              		@ sp needed
 7727              	.LVL523:
 7728 0062 10BD     		pop	{r4, pc}
 7729              	.L303:
 7730              		.align	2
 7731              	.L302:
 7732 0064 FFF7FFFF 		.word	-2049
 7733              		.cfi_endproc
 7734              	.LFE41:
ARM GAS  /tmp/ccQJ5CSb.s 			page 229


 7736              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 7737              		.align	2
 7738              		.global	HAL_MultiProcessor_Init
 7739              		.code	16
 7740              		.thumb_func
 7742              	HAL_MultiProcessor_Init:
 7743              	.LFB42:
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 7744              		.loc 1 577 0
 7745              		.cfi_startproc
 7746              		@ args = 0, pretend = 0, frame = 0
 7747              		@ frame_needed = 0, uses_anonymous_args = 0
 7748              	.LVL524:
 7749 0000 70B5     		push	{r4, r5, r6, lr}
 7750              	.LCFI46:
 7751              		.cfi_def_cfa_offset 16
 7752              		.cfi_offset 4, -16
 7753              		.cfi_offset 5, -12
 7754              		.cfi_offset 6, -8
 7755              		.cfi_offset 14, -4
 7756 0002 0400     		movs	r4, r0
 7757 0004 0D00     		movs	r5, r1
 7758 0006 1600     		movs	r6, r2
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7759              		.loc 1 579 0
 7760 0008 0028     		cmp	r0, #0
 7761 000a 3DD0     		beq	.L309
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7762              		.loc 1 587 0
 7763 000c 836F     		ldr	r3, [r0, #120]
 7764 000e 002B     		cmp	r3, #0
 7765 0010 04D1     		bne	.L306
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7766              		.loc 1 590 0
 7767 0012 0022     		movs	r2, #0
 7768              	.LVL525:
 7769 0014 7433     		adds	r3, r3, #116
 7770 0016 C254     		strb	r2, [r0, r3]
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7771              		.loc 1 604 0
 7772 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 7773              	.LVL526:
 7774              	.L306:
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7775              		.loc 1 608 0
 7776 001c 2423     		movs	r3, #36
 7777 001e A367     		str	r3, [r4, #120]
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7778              		.loc 1 610 0
 7779 0020 2268     		ldr	r2, [r4]
 7780 0022 1368     		ldr	r3, [r2]
 7781 0024 0121     		movs	r1, #1
 7782 0026 8B43     		bics	r3, r1
 7783 0028 1360     		str	r3, [r2]
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7784              		.loc 1 613 0
 7785 002a 2000     		movs	r0, r4
ARM GAS  /tmp/ccQJ5CSb.s 			page 230


 7786 002c FFF7FEFF 		bl	UART_SetConfig
 7787              	.LVL527:
 7788 0030 0128     		cmp	r0, #1
 7789 0032 2AD0     		beq	.L305
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7790              		.loc 1 618 0
 7791 0034 636A     		ldr	r3, [r4, #36]
 7792 0036 002B     		cmp	r3, #0
 7793 0038 02D0     		beq	.L307
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7794              		.loc 1 620 0
 7795 003a 2000     		movs	r0, r4
 7796 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 7797              	.LVL528:
 7798              	.L307:
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 7799              		.loc 1 629 0
 7800 0040 2268     		ldr	r2, [r4]
 7801 0042 5168     		ldr	r1, [r2, #4]
 7802 0044 114B     		ldr	r3, .L310
 7803 0046 0B40     		ands	r3, r1
 7804 0048 5360     		str	r3, [r2, #4]
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 7805              		.loc 1 641 0
 7806 004a 2268     		ldr	r2, [r4]
 7807 004c 9368     		ldr	r3, [r2, #8]
 7808 004e 0821     		movs	r1, #8
 7809 0050 8B43     		bics	r3, r1
 7810 0052 9360     		str	r3, [r2, #8]
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 7811              		.loc 1 645 0
 7812 0054 8023     		movs	r3, #128
 7813 0056 1B01     		lsls	r3, r3, #4
 7814 0058 9E42     		cmp	r6, r3
 7815 005a 06D1     		bne	.L308
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7816              		.loc 1 648 0
 7817 005c 2268     		ldr	r2, [r4]
 7818 005e 5368     		ldr	r3, [r2, #4]
 7819 0060 1B02     		lsls	r3, r3, #8
 7820 0062 1B0A     		lsrs	r3, r3, #8
 7821 0064 2D06     		lsls	r5, r5, #24
 7822 0066 1D43     		orrs	r5, r3
 7823 0068 5560     		str	r5, [r2, #4]
 7824              	.L308:
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7825              		.loc 1 652 0
 7826 006a 2168     		ldr	r1, [r4]
 7827 006c 0A68     		ldr	r2, [r1]
 7828 006e 074B     		ldr	r3, .L310
 7829 0070 1A40     		ands	r2, r3
 7830 0072 3243     		orrs	r2, r6
 7831 0074 0A60     		str	r2, [r1]
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7832              		.loc 1 654 0
 7833 0076 2268     		ldr	r2, [r4]
 7834 0078 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccQJ5CSb.s 			page 231


 7835 007a 0123     		movs	r3, #1
 7836 007c 0B43     		orrs	r3, r1
 7837 007e 1360     		str	r3, [r2]
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7838              		.loc 1 657 0
 7839 0080 2000     		movs	r0, r4
 7840 0082 FFF7FEFF 		bl	UART_CheckIdleState
 7841              	.LVL529:
 7842 0086 00E0     		b	.L305
 7843              	.LVL530:
 7844              	.L309:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 7845              		.loc 1 581 0
 7846 0088 0120     		movs	r0, #1
 7847              	.LVL531:
 7848              	.L305:
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7849              		.loc 1 658 0
 7850              		@ sp needed
 7851              	.LVL532:
 7852              	.LVL533:
 7853 008a 70BD     		pop	{r4, r5, r6, pc}
 7854              	.L311:
 7855              		.align	2
 7856              	.L310:
 7857 008c FFF7FFFF 		.word	-2049
 7858              		.cfi_endproc
 7859              	.LFE42:
 7861              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 7862              		.align	2
 7863              		.global	HAL_MultiProcessor_EnableMuteMode
 7864              		.code	16
 7865              		.thumb_func
 7867              	HAL_MultiProcessor_EnableMuteMode:
 7868              	.LFB74:
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7869              		.loc 1 2836 0
 7870              		.cfi_startproc
 7871              		@ args = 0, pretend = 0, frame = 0
 7872              		@ frame_needed = 0, uses_anonymous_args = 0
 7873              	.LVL534:
 7874 0000 10B5     		push	{r4, lr}
 7875              	.LCFI47:
 7876              		.cfi_def_cfa_offset 8
 7877              		.cfi_offset 4, -8
 7878              		.cfi_offset 14, -4
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7879              		.loc 1 2837 0
 7880 0002 7423     		movs	r3, #116
 7881 0004 C35C     		ldrb	r3, [r0, r3]
 7882 0006 012B     		cmp	r3, #1
 7883 0008 16D0     		beq	.L314
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7884              		.loc 1 2837 0 is_stmt 0 discriminator 2
 7885 000a 0122     		movs	r2, #1
 7886 000c 7423     		movs	r3, #116
 7887 000e C254     		strb	r2, [r0, r3]
ARM GAS  /tmp/ccQJ5CSb.s 			page 232


2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7888              		.loc 1 2839 0 is_stmt 1 discriminator 2
 7889 0010 503B     		subs	r3, r3, #80
 7890 0012 8367     		str	r3, [r0, #120]
 7891              	.LBB1063:
 7892              	.LBB1064:
 7893              	.LBB1065:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7894              		.loc 2 386 0 discriminator 2
 7895              		.syntax divided
 7896              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7897 0014 EFF31081 		MRS r1, primask
 7898              	@ 0 "" 2
 7899              	.LVL535:
 7900              		.thumb
 7901              		.syntax unified
 7902              	.LBE1065:
 7903              	.LBE1064:
 7904              	.LBB1066:
 7905              	.LBB1067:
 7906              		.loc 2 414 0 discriminator 2
 7907 0018 233B     		subs	r3, r3, #35
 7908              		.syntax divided
 7909              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7910 001a 83F31088 		MSR primask, r3
 7911              	@ 0 "" 2
 7912              	.LVL536:
 7913              		.thumb
 7914              		.syntax unified
 7915              	.LBE1067:
 7916              	.LBE1066:
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7917              		.loc 1 2842 0 discriminator 2
 7918 001e 0268     		ldr	r2, [r0]
 7919 0020 1368     		ldr	r3, [r2]
 7920 0022 8024     		movs	r4, #128
 7921 0024 A401     		lsls	r4, r4, #6
 7922 0026 2343     		orrs	r3, r4
 7923 0028 1360     		str	r3, [r2]
 7924              	.LBB1068:
 7925              	.LBB1069:
 7926              		.loc 2 414 0 discriminator 2
 7927              		.syntax divided
 7928              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7929 002a 81F31088 		MSR primask, r1
 7930              	@ 0 "" 2
 7931              		.thumb
 7932              		.syntax unified
 7933              	.LBE1069:
 7934              	.LBE1068:
 7935              	.LBE1063:
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7936              		.loc 1 2844 0 discriminator 2
 7937 002e 2023     		movs	r3, #32
 7938 0030 8367     		str	r3, [r0, #120]
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7939              		.loc 1 2846 0 discriminator 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 233


 7940 0032 FFF7FEFF 		bl	UART_CheckIdleState
 7941              	.LVL537:
 7942 0036 00E0     		b	.L313
 7943              	.LVL538:
 7944              	.L314:
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7945              		.loc 1 2837 0
 7946 0038 0220     		movs	r0, #2
 7947              	.LVL539:
 7948              	.L313:
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7949              		.loc 1 2847 0
 7950              		@ sp needed
 7951 003a 10BD     		pop	{r4, pc}
 7952              		.cfi_endproc
 7953              	.LFE74:
 7955              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 7956              		.align	2
 7957              		.global	HAL_MultiProcessor_DisableMuteMode
 7958              		.code	16
 7959              		.thumb_func
 7961              	HAL_MultiProcessor_DisableMuteMode:
 7962              	.LFB75:
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7963              		.loc 1 2856 0
 7964              		.cfi_startproc
 7965              		@ args = 0, pretend = 0, frame = 0
 7966              		@ frame_needed = 0, uses_anonymous_args = 0
 7967              	.LVL540:
 7968 0000 10B5     		push	{r4, lr}
 7969              	.LCFI48:
 7970              		.cfi_def_cfa_offset 8
 7971              		.cfi_offset 4, -8
 7972              		.cfi_offset 14, -4
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7973              		.loc 1 2857 0
 7974 0002 7423     		movs	r3, #116
 7975 0004 C35C     		ldrb	r3, [r0, r3]
 7976 0006 012B     		cmp	r3, #1
 7977 0008 15D0     		beq	.L317
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7978              		.loc 1 2857 0 is_stmt 0 discriminator 2
 7979 000a 0122     		movs	r2, #1
 7980 000c 7423     		movs	r3, #116
 7981 000e C254     		strb	r2, [r0, r3]
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 7982              		.loc 1 2859 0 is_stmt 1 discriminator 2
 7983 0010 503B     		subs	r3, r3, #80
 7984 0012 8367     		str	r3, [r0, #120]
 7985              	.LBB1070:
 7986              	.LBB1071:
 7987              	.LBB1072:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7988              		.loc 2 386 0 discriminator 2
 7989              		.syntax divided
 7990              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7991 0014 EFF31081 		MRS r1, primask
ARM GAS  /tmp/ccQJ5CSb.s 			page 234


 7992              	@ 0 "" 2
 7993              	.LVL541:
 7994              		.thumb
 7995              		.syntax unified
 7996              	.LBE1072:
 7997              	.LBE1071:
 7998              	.LBB1073:
 7999              	.LBB1074:
 8000              		.loc 2 414 0 discriminator 2
 8001 0018 233B     		subs	r3, r3, #35
 8002              		.syntax divided
 8003              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8004 001a 83F31088 		MSR primask, r3
 8005              	@ 0 "" 2
 8006              	.LVL542:
 8007              		.thumb
 8008              		.syntax unified
 8009              	.LBE1074:
 8010              	.LBE1073:
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8011              		.loc 1 2862 0 discriminator 2
 8012 001e 0268     		ldr	r2, [r0]
 8013 0020 1468     		ldr	r4, [r2]
 8014 0022 064B     		ldr	r3, .L318
 8015 0024 2340     		ands	r3, r4
 8016 0026 1360     		str	r3, [r2]
 8017              	.LBB1075:
 8018              	.LBB1076:
 8019              		.loc 2 414 0 discriminator 2
 8020              		.syntax divided
 8021              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8022 0028 81F31088 		MSR primask, r1
 8023              	@ 0 "" 2
 8024              		.thumb
 8025              		.syntax unified
 8026              	.LBE1076:
 8027              	.LBE1075:
 8028              	.LBE1070:
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8029              		.loc 1 2864 0 discriminator 2
 8030 002c 2023     		movs	r3, #32
 8031 002e 8367     		str	r3, [r0, #120]
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 8032              		.loc 1 2866 0 discriminator 2
 8033 0030 FFF7FEFF 		bl	UART_CheckIdleState
 8034              	.LVL543:
 8035 0034 00E0     		b	.L316
 8036              	.LVL544:
 8037              	.L317:
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8038              		.loc 1 2857 0
 8039 0036 0220     		movs	r0, #2
 8040              	.LVL545:
 8041              	.L316:
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8042              		.loc 1 2867 0
 8043              		@ sp needed
ARM GAS  /tmp/ccQJ5CSb.s 			page 235


 8044 0038 10BD     		pop	{r4, pc}
 8045              	.L319:
 8046 003a C046     		.align	2
 8047              	.L318:
 8048 003c FFDFFFFF 		.word	-8193
 8049              		.cfi_endproc
 8050              	.LFE75:
 8052              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8053              		.align	2
 8054              		.global	UART_Start_Receive_IT
 8055              		.code	16
 8056              		.thumb_func
 8058              	UART_Start_Receive_IT:
 8059              	.LFB85:
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 8060              		.loc 1 3369 0
 8061              		.cfi_startproc
 8062              		@ args = 0, pretend = 0, frame = 0
 8063              		@ frame_needed = 0, uses_anonymous_args = 0
 8064              	.LVL546:
 8065 0000 10B5     		push	{r4, lr}
 8066              	.LCFI49:
 8067              		.cfi_def_cfa_offset 8
 8068              		.cfi_offset 4, -8
 8069              		.cfi_offset 14, -4
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferSize  = Size;
 8070              		.loc 1 3370 0
 8071 0002 4165     		str	r1, [r0, #84]
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = Size;
 8072              		.loc 1 3371 0
 8073 0004 5823     		movs	r3, #88
 8074 0006 C252     		strh	r2, [r0, r3]
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR       = NULL;
 8075              		.loc 1 3372 0
 8076 0008 0233     		adds	r3, r3, #2
 8077 000a C252     		strh	r2, [r0, r3]
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8078              		.loc 1 3373 0
 8079 000c 0023     		movs	r3, #0
 8080 000e 4366     		str	r3, [r0, #100]
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8081              		.loc 1 3376 0
 8082 0010 8368     		ldr	r3, [r0, #8]
 8083 0012 8022     		movs	r2, #128
 8084              	.LVL547:
 8085 0014 5201     		lsls	r2, r2, #5
 8086 0016 9342     		cmp	r3, r2
 8087 0018 0AD1     		bne	.L321
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8088              		.loc 1 3376 0 is_stmt 0 discriminator 1
 8089 001a 0369     		ldr	r3, [r0, #16]
 8090 001c 002B     		cmp	r3, #0
 8091 001e 03D1     		bne	.L322
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8092              		.loc 1 3376 0 discriminator 3
 8093 0020 234A     		ldr	r2, .L328
 8094 0022 5C33     		adds	r3, r3, #92
ARM GAS  /tmp/ccQJ5CSb.s 			page 236


 8095 0024 C252     		strh	r2, [r0, r3]
 8096 0026 13E0     		b	.L323
 8097              	.L322:
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8098              		.loc 1 3376 0 discriminator 4
 8099 0028 FF22     		movs	r2, #255
 8100 002a 5C23     		movs	r3, #92
 8101 002c C252     		strh	r2, [r0, r3]
 8102 002e 0FE0     		b	.L323
 8103              	.L321:
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8104              		.loc 1 3376 0 discriminator 2
 8105 0030 002B     		cmp	r3, #0
 8106 0032 0AD1     		bne	.L324
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8107              		.loc 1 3376 0 discriminator 5
 8108 0034 0369     		ldr	r3, [r0, #16]
 8109 0036 002B     		cmp	r3, #0
 8110 0038 03D1     		bne	.L325
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8111              		.loc 1 3376 0 discriminator 7
 8112 003a FF22     		movs	r2, #255
 8113 003c 5C33     		adds	r3, r3, #92
 8114 003e C252     		strh	r2, [r0, r3]
 8115 0040 06E0     		b	.L323
 8116              	.L325:
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8117              		.loc 1 3376 0 discriminator 8
 8118 0042 7F22     		movs	r2, #127
 8119 0044 5C23     		movs	r3, #92
 8120 0046 C252     		strh	r2, [r0, r3]
 8121 0048 02E0     		b	.L323
 8122              	.L324:
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8123              		.loc 1 3376 0 discriminator 6
 8124 004a 0022     		movs	r2, #0
 8125 004c 5C23     		movs	r3, #92
 8126 004e C252     		strh	r2, [r0, r3]
 8127              	.L323:
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8128              		.loc 1 3378 0 is_stmt 1
 8129 0050 0022     		movs	r2, #0
 8130 0052 8023     		movs	r3, #128
 8131 0054 C250     		str	r2, [r0, r3]
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8132              		.loc 1 3379 0
 8133 0056 5E3B     		subs	r3, r3, #94
 8134 0058 C367     		str	r3, [r0, #124]
 8135              	.LBB1077:
 8136              	.LBB1078:
 8137              	.LBB1079:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8138              		.loc 2 386 0
 8139              		.syntax divided
 8140              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8141 005a EFF31081 		MRS r1, primask
 8142              	@ 0 "" 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 237


 8143              	.LVL548:
 8144              		.thumb
 8145              		.syntax unified
 8146              	.LBE1079:
 8147              	.LBE1078:
 8148              	.LBB1080:
 8149              	.LBB1081:
 8150              		.loc 2 414 0
 8151 005e 213B     		subs	r3, r3, #33
 8152              		.syntax divided
 8153              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8154 0060 83F31088 		MSR primask, r3
 8155              	@ 0 "" 2
 8156              	.LVL549:
 8157              		.thumb
 8158              		.syntax unified
 8159              	.LBE1081:
 8160              	.LBE1080:
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8161              		.loc 1 3382 0
 8162 0064 0268     		ldr	r2, [r0]
 8163 0066 9468     		ldr	r4, [r2, #8]
 8164 0068 2343     		orrs	r3, r4
 8165 006a 9360     		str	r3, [r2, #8]
 8166              	.LBB1082:
 8167              	.LBB1083:
 8168              		.loc 2 414 0
 8169              		.syntax divided
 8170              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8171 006c 81F31088 		MSR primask, r1
 8172              	@ 0 "" 2
 8173              		.thumb
 8174              		.syntax unified
 8175              	.LBE1083:
 8176              	.LBE1082:
 8177              	.LBE1077:
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8178              		.loc 1 3385 0
 8179 0070 8023     		movs	r3, #128
 8180 0072 5B01     		lsls	r3, r3, #5
 8181 0074 8268     		ldr	r2, [r0, #8]
 8182 0076 9A42     		cmp	r2, r3
 8183 0078 05D1     		bne	.L326
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8184              		.loc 1 3385 0 is_stmt 0 discriminator 1
 8185 007a 0369     		ldr	r3, [r0, #16]
 8186 007c 002B     		cmp	r3, #0
 8187 007e 02D1     		bne	.L326
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 8188              		.loc 1 3387 0 is_stmt 1
 8189 0080 0C4B     		ldr	r3, .L328+4
 8190 0082 4366     		str	r3, [r0, #100]
 8191 0084 01E0     		b	.L327
 8192              	.L326:
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 8193              		.loc 1 3391 0
 8194 0086 0C4B     		ldr	r3, .L328+8
ARM GAS  /tmp/ccQJ5CSb.s 			page 238


 8195 0088 4366     		str	r3, [r0, #100]
 8196              	.L327:
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8197              		.loc 1 3394 0
 8198 008a 0022     		movs	r2, #0
 8199 008c 7423     		movs	r3, #116
 8200 008e C254     		strb	r2, [r0, r3]
 8201              	.LBB1084:
 8202              	.LBB1085:
 8203              	.LBB1086:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8204              		.loc 2 386 0
 8205              		.syntax divided
 8206              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8207 0090 EFF31081 		MRS r1, primask
 8208              	@ 0 "" 2
 8209              	.LVL550:
 8210              		.thumb
 8211              		.syntax unified
 8212              	.LBE1086:
 8213              	.LBE1085:
 8214              	.LBB1087:
 8215              	.LBB1088:
 8216              		.loc 2 414 0
 8217 0094 733B     		subs	r3, r3, #115
 8218              		.syntax divided
 8219              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8220 0096 83F31088 		MSR primask, r3
 8221              	@ 0 "" 2
 8222              	.LVL551:
 8223              		.thumb
 8224              		.syntax unified
 8225              	.LBE1088:
 8226              	.LBE1087:
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 8227              		.loc 1 3397 0
 8228 009a 0268     		ldr	r2, [r0]
 8229 009c 1368     		ldr	r3, [r2]
 8230 009e 9020     		movs	r0, #144
 8231              	.LVL552:
 8232 00a0 4000     		lsls	r0, r0, #1
 8233 00a2 0343     		orrs	r3, r0
 8234 00a4 1360     		str	r3, [r2]
 8235              	.LBB1089:
 8236              	.LBB1090:
 8237              		.loc 2 414 0
 8238              		.syntax divided
 8239              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8240 00a6 81F31088 		MSR primask, r1
 8241              	@ 0 "" 2
 8242              		.thumb
 8243              		.syntax unified
 8244              	.LBE1090:
 8245              	.LBE1089:
 8246              	.LBE1084:
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8247              		.loc 1 3399 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 239


 8248 00aa 0020     		movs	r0, #0
 8249              		@ sp needed
 8250 00ac 10BD     		pop	{r4, pc}
 8251              	.L329:
 8252 00ae C046     		.align	2
 8253              	.L328:
 8254 00b0 FF010000 		.word	511
 8255 00b4 00000000 		.word	UART_RxISR_16BIT
 8256 00b8 00000000 		.word	UART_RxISR_8BIT
 8257              		.cfi_endproc
 8258              	.LFE85:
 8260              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 8261              		.align	2
 8262              		.global	HAL_UART_Receive_IT
 8263              		.code	16
 8264              		.thumb_func
 8266              	HAL_UART_Receive_IT:
 8267              	.LFB49:
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 8268              		.loc 1 1426 0
 8269              		.cfi_startproc
 8270              		@ args = 0, pretend = 0, frame = 0
 8271              		@ frame_needed = 0, uses_anonymous_args = 0
 8272              	.LVL553:
 8273 0000 70B5     		push	{r4, r5, r6, lr}
 8274              	.LCFI50:
 8275              		.cfi_def_cfa_offset 16
 8276              		.cfi_offset 4, -16
 8277              		.cfi_offset 5, -12
 8278              		.cfi_offset 6, -8
 8279              		.cfi_offset 14, -4
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8280              		.loc 1 1428 0
 8281 0002 C36F     		ldr	r3, [r0, #124]
 8282 0004 202B     		cmp	r3, #32
 8283 0006 2AD1     		bne	.L334
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8284              		.loc 1 1430 0
 8285 0008 0029     		cmp	r1, #0
 8286 000a 2AD0     		beq	.L335
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8287              		.loc 1 1430 0 is_stmt 0 discriminator 1
 8288 000c 002A     		cmp	r2, #0
 8289 000e 2AD0     		beq	.L336
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8290              		.loc 1 1438 0 is_stmt 1
 8291 0010 8023     		movs	r3, #128
 8292 0012 5B01     		lsls	r3, r3, #5
 8293 0014 8468     		ldr	r4, [r0, #8]
 8294 0016 9C42     		cmp	r4, r3
 8295 0018 04D1     		bne	.L332
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8296              		.loc 1 1438 0 is_stmt 0 discriminator 1
 8297 001a 0369     		ldr	r3, [r0, #16]
 8298 001c 002B     		cmp	r3, #0
 8299 001e 01D1     		bne	.L332
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccQJ5CSb.s 			page 240


 8300              		.loc 1 1440 0 is_stmt 1
 8301 0020 CB07     		lsls	r3, r1, #31
 8302 0022 22D4     		bmi	.L337
 8303              	.L332:
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8304              		.loc 1 1446 0
 8305 0024 7423     		movs	r3, #116
 8306 0026 C35C     		ldrb	r3, [r0, r3]
 8307 0028 012B     		cmp	r3, #1
 8308 002a 20D0     		beq	.L338
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8309              		.loc 1 1446 0 is_stmt 0 discriminator 2
 8310 002c 0124     		movs	r4, #1
 8311 002e 7423     		movs	r3, #116
 8312 0030 C454     		strb	r4, [r0, r3]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8313              		.loc 1 1449 0 is_stmt 1 discriminator 2
 8314 0032 0023     		movs	r3, #0
 8315 0034 0366     		str	r3, [r0, #96]
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8316              		.loc 1 1452 0 discriminator 2
 8317 0036 0368     		ldr	r3, [r0]
 8318 0038 5B68     		ldr	r3, [r3, #4]
 8319 003a 1B02     		lsls	r3, r3, #8
 8320 003c 0CD5     		bpl	.L333
 8321              	.LBB1091:
 8322              	.LBB1092:
 8323              	.LBB1093:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8324              		.loc 2 386 0
 8325              		.syntax divided
 8326              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8327 003e EFF31085 		MRS r5, primask
 8328              	@ 0 "" 2
 8329              	.LVL554:
 8330              		.thumb
 8331              		.syntax unified
 8332              	.LBE1093:
 8333              	.LBE1092:
 8334              	.LBB1094:
 8335              	.LBB1095:
 8336              		.loc 2 414 0
 8337 0042 0123     		movs	r3, #1
 8338              		.syntax divided
 8339              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8340 0044 83F31088 		MSR primask, r3
 8341              	@ 0 "" 2
 8342              	.LVL555:
 8343              		.thumb
 8344              		.syntax unified
 8345              	.LBE1095:
 8346              	.LBE1094:
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 8347              		.loc 1 1455 0
 8348 0048 0468     		ldr	r4, [r0]
 8349 004a 2368     		ldr	r3, [r4]
 8350 004c 8026     		movs	r6, #128
ARM GAS  /tmp/ccQJ5CSb.s 			page 241


 8351 004e F604     		lsls	r6, r6, #19
 8352 0050 3343     		orrs	r3, r6
 8353 0052 2360     		str	r3, [r4]
 8354              	.LBB1096:
 8355              	.LBB1097:
 8356              		.loc 2 414 0
 8357              		.syntax divided
 8358              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8359 0054 85F31088 		MSR primask, r5
 8360              	@ 0 "" 2
 8361              		.thumb
 8362              		.syntax unified
 8363              	.L333:
 8364              	.LBE1097:
 8365              	.LBE1096:
 8366              	.LBE1091:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 8367              		.loc 1 1458 0
 8368 0058 FFF7FEFF 		bl	UART_Start_Receive_IT
 8369              	.LVL556:
 8370 005c 08E0     		b	.L331
 8371              	.LVL557:
 8372              	.L334:
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 8373              		.loc 1 1462 0
 8374 005e 0220     		movs	r0, #2
 8375              	.LVL558:
 8376 0060 06E0     		b	.L331
 8377              	.LVL559:
 8378              	.L335:
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 8379              		.loc 1 1432 0
 8380 0062 0120     		movs	r0, #1
 8381              	.LVL560:
 8382 0064 04E0     		b	.L331
 8383              	.LVL561:
 8384              	.L336:
 8385 0066 0120     		movs	r0, #1
 8386              	.LVL562:
 8387 0068 02E0     		b	.L331
 8388              	.LVL563:
 8389              	.L337:
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 8390              		.loc 1 1442 0
 8391 006a 0120     		movs	r0, #1
 8392              	.LVL564:
 8393 006c 00E0     		b	.L331
 8394              	.LVL565:
 8395              	.L338:
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8396              		.loc 1 1446 0
 8397 006e 0220     		movs	r0, #2
 8398              	.LVL566:
 8399              	.L331:
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8400              		.loc 1 1464 0
 8401              		@ sp needed
ARM GAS  /tmp/ccQJ5CSb.s 			page 242


 8402 0070 70BD     		pop	{r4, r5, r6, pc}
 8403              		.cfi_endproc
 8404              	.LFE49:
 8406 0072 C046     		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 8407              		.align	2
 8408              		.global	UART_Start_Receive_DMA
 8409              		.code	16
 8410              		.thumb_func
 8412              	UART_Start_Receive_DMA:
 8413              	.LFB86:
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8414              		.loc 1 3413 0
 8415              		.cfi_startproc
 8416              		@ args = 0, pretend = 0, frame = 0
 8417              		@ frame_needed = 0, uses_anonymous_args = 0
 8418              	.LVL567:
 8419 0000 70B5     		push	{r4, r5, r6, lr}
 8420              	.LCFI51:
 8421              		.cfi_def_cfa_offset 16
 8422              		.cfi_offset 4, -16
 8423              		.cfi_offset 5, -12
 8424              		.cfi_offset 6, -8
 8425              		.cfi_offset 14, -4
 8426 0002 0400     		movs	r4, r0
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferSize = Size;
 8427              		.loc 1 3414 0
 8428 0004 4165     		str	r1, [r0, #84]
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8429              		.loc 1 3415 0
 8430 0006 5823     		movs	r3, #88
 8431 0008 C252     		strh	r2, [r0, r3]
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8432              		.loc 1 3417 0
 8433 000a 0021     		movs	r1, #0
 8434              	.LVL568:
 8435 000c 2833     		adds	r3, r3, #40
 8436 000e C150     		str	r1, [r0, r3]
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8437              		.loc 1 3418 0
 8438 0010 5E3B     		subs	r3, r3, #94
 8439 0012 C367     		str	r3, [r0, #124]
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8440              		.loc 1 3420 0
 8441 0014 036F     		ldr	r3, [r0, #112]
 8442 0016 002B     		cmp	r3, #0
 8443 0018 1DD0     		beq	.L340
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8444              		.loc 1 3423 0
 8445 001a 2349     		ldr	r1, .L342
 8446 001c 9962     		str	r1, [r3, #40]
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8447              		.loc 1 3426 0
 8448 001e 036F     		ldr	r3, [r0, #112]
 8449 0020 2249     		ldr	r1, .L342+4
 8450 0022 D962     		str	r1, [r3, #44]
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8451              		.loc 1 3429 0
ARM GAS  /tmp/ccQJ5CSb.s 			page 243


 8452 0024 036F     		ldr	r3, [r0, #112]
 8453 0026 2249     		ldr	r1, .L342+8
 8454 0028 1963     		str	r1, [r3, #48]
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8455              		.loc 1 3432 0
 8456 002a 036F     		ldr	r3, [r0, #112]
 8457 002c 0021     		movs	r1, #0
 8458 002e 5963     		str	r1, [r3, #52]
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8459              		.loc 1 3435 0
 8460 0030 0168     		ldr	r1, [r0]
 8461 0032 2431     		adds	r1, r1, #36
 8462 0034 1300     		movs	r3, r2
 8463 0036 426D     		ldr	r2, [r0, #84]
 8464              	.LVL569:
 8465 0038 006F     		ldr	r0, [r0, #112]
 8466              	.LVL570:
 8467 003a FFF7FEFF 		bl	HAL_DMA_Start_IT
 8468              	.LVL571:
 8469 003e 0028     		cmp	r0, #0
 8470 0040 09D0     		beq	.L340
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8471              		.loc 1 3438 0
 8472 0042 1022     		movs	r2, #16
 8473 0044 8023     		movs	r3, #128
 8474 0046 E250     		str	r2, [r4, r3]
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8475              		.loc 1 3440 0
 8476 0048 0022     		movs	r2, #0
 8477 004a 0C3B     		subs	r3, r3, #12
 8478 004c E254     		strb	r2, [r4, r3]
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8479              		.loc 1 3443 0
 8480 004e 543B     		subs	r3, r3, #84
 8481 0050 E367     		str	r3, [r4, #124]
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 8482              		.loc 1 3445 0
 8483 0052 0120     		movs	r0, #1
 8484 0054 27E0     		b	.L341
 8485              	.L340:
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8486              		.loc 1 3448 0
 8487 0056 0022     		movs	r2, #0
 8488 0058 7423     		movs	r3, #116
 8489 005a E254     		strb	r2, [r4, r3]
 8490              	.LBB1098:
 8491              	.LBB1099:
 8492              	.LBB1100:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8493              		.loc 2 386 0
 8494              		.syntax divided
 8495              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8496 005c EFF31080 		MRS r0, primask
 8497              	@ 0 "" 2
 8498              	.LVL572:
 8499              		.thumb
 8500              		.syntax unified
ARM GAS  /tmp/ccQJ5CSb.s 			page 244


 8501              	.LBE1100:
 8502              	.LBE1099:
 8503              	.LBB1101:
 8504              	.LBB1102:
 8505              		.loc 2 414 0
 8506 0060 733B     		subs	r3, r3, #115
 8507              		.syntax divided
 8508              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8509 0062 83F31088 		MSR primask, r3
 8510              	@ 0 "" 2
 8511              	.LVL573:
 8512              		.thumb
 8513              		.syntax unified
 8514              	.LBE1102:
 8515              	.LBE1101:
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8516              		.loc 1 3451 0
 8517 0066 2168     		ldr	r1, [r4]
 8518 0068 0A68     		ldr	r2, [r1]
 8519 006a 8025     		movs	r5, #128
 8520 006c 6D00     		lsls	r5, r5, #1
 8521 006e 2A43     		orrs	r2, r5
 8522 0070 0A60     		str	r2, [r1]
 8523              	.LBB1103:
 8524              	.LBB1104:
 8525              		.loc 2 414 0
 8526              		.syntax divided
 8527              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8528 0072 80F31088 		MSR primask, r0
 8529              	@ 0 "" 2
 8530              		.thumb
 8531              		.syntax unified
 8532              	.LBE1104:
 8533              	.LBE1103:
 8534              	.LBE1098:
 8535              	.LBB1105:
 8536              	.LBB1106:
 8537              	.LBB1107:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8538              		.loc 2 386 0
 8539              		.syntax divided
 8540              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8541 0076 EFF31081 		MRS r1, primask
 8542              	@ 0 "" 2
 8543              	.LVL574:
 8544              		.thumb
 8545              		.syntax unified
 8546              	.LBE1107:
 8547              	.LBE1106:
 8548              	.LBB1108:
 8549              	.LBB1109:
 8550              		.loc 2 414 0
 8551 007a 0122     		movs	r2, #1
 8552              		.syntax divided
 8553              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8554 007c 82F31088 		MSR primask, r2
 8555              	@ 0 "" 2
ARM GAS  /tmp/ccQJ5CSb.s 			page 245


 8556              	.LVL575:
 8557              		.thumb
 8558              		.syntax unified
 8559              	.LBE1109:
 8560              	.LBE1108:
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8561              		.loc 1 3454 0
 8562 0080 2268     		ldr	r2, [r4]
 8563 0082 9068     		ldr	r0, [r2, #8]
 8564 0084 0343     		orrs	r3, r0
 8565 0086 9360     		str	r3, [r2, #8]
 8566              	.LBB1110:
 8567              	.LBB1111:
 8568              		.loc 2 414 0
 8569              		.syntax divided
 8570              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8571 0088 81F31088 		MSR primask, r1
 8572              	@ 0 "" 2
 8573              		.thumb
 8574              		.syntax unified
 8575              	.LBE1111:
 8576              	.LBE1110:
 8577              	.LBE1105:
 8578              	.LBB1112:
 8579              	.LBB1113:
 8580              	.LBB1114:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8581              		.loc 2 386 0
 8582              		.syntax divided
 8583              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8584 008c EFF31081 		MRS r1, primask
 8585              	@ 0 "" 2
 8586              	.LVL576:
 8587              		.thumb
 8588              		.syntax unified
 8589              	.LBE1114:
 8590              	.LBE1113:
 8591              	.LBB1115:
 8592              	.LBB1116:
 8593              		.loc 2 414 0
 8594 0090 0123     		movs	r3, #1
 8595              		.syntax divided
 8596              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8597 0092 83F31088 		MSR primask, r3
 8598              	@ 0 "" 2
 8599              	.LVL577:
 8600              		.thumb
 8601              		.syntax unified
 8602              	.LBE1116:
 8603              	.LBE1115:
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8604              		.loc 1 3458 0
 8605 0096 2268     		ldr	r2, [r4]
 8606 0098 9068     		ldr	r0, [r2, #8]
 8607 009a 3F33     		adds	r3, r3, #63
 8608 009c 0343     		orrs	r3, r0
 8609 009e 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccQJ5CSb.s 			page 246


 8610              	.LBB1117:
 8611              	.LBB1118:
 8612              		.loc 2 414 0
 8613              		.syntax divided
 8614              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8615 00a0 81F31088 		MSR primask, r1
 8616              	@ 0 "" 2
 8617              		.thumb
 8618              		.syntax unified
 8619              	.LBE1118:
 8620              	.LBE1117:
 8621              	.LBE1112:
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 8622              		.loc 1 3460 0
 8623 00a4 0020     		movs	r0, #0
 8624              	.L341:
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8625              		.loc 1 3461 0
 8626              		@ sp needed
 8627              	.LVL578:
 8628 00a6 70BD     		pop	{r4, r5, r6, pc}
 8629              	.L343:
 8630              		.align	2
 8631              	.L342:
 8632 00a8 00000000 		.word	UART_DMAReceiveCplt
 8633 00ac 00000000 		.word	UART_DMARxHalfCplt
 8634 00b0 00000000 		.word	UART_DMAError
 8635              		.cfi_endproc
 8636              	.LFE86:
 8638              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 8639              		.align	2
 8640              		.global	HAL_UART_Receive_DMA
 8641              		.code	16
 8642              		.thumb_func
 8644              	HAL_UART_Receive_DMA:
 8645              	.LFB51:
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 8646              		.loc 1 1574 0
 8647              		.cfi_startproc
 8648              		@ args = 0, pretend = 0, frame = 0
 8649              		@ frame_needed = 0, uses_anonymous_args = 0
 8650              	.LVL579:
 8651 0000 70B5     		push	{r4, r5, r6, lr}
 8652              	.LCFI52:
 8653              		.cfi_def_cfa_offset 16
 8654              		.cfi_offset 4, -16
 8655              		.cfi_offset 5, -12
 8656              		.cfi_offset 6, -8
 8657              		.cfi_offset 14, -4
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8658              		.loc 1 1576 0
 8659 0002 C36F     		ldr	r3, [r0, #124]
 8660 0004 202B     		cmp	r3, #32
 8661 0006 2AD1     		bne	.L348
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8662              		.loc 1 1578 0
 8663 0008 0029     		cmp	r1, #0
ARM GAS  /tmp/ccQJ5CSb.s 			page 247


 8664 000a 2AD0     		beq	.L349
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8665              		.loc 1 1578 0 is_stmt 0 discriminator 1
 8666 000c 002A     		cmp	r2, #0
 8667 000e 2AD0     		beq	.L350
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8668              		.loc 1 1586 0 is_stmt 1
 8669 0010 8023     		movs	r3, #128
 8670 0012 5B01     		lsls	r3, r3, #5
 8671 0014 8468     		ldr	r4, [r0, #8]
 8672 0016 9C42     		cmp	r4, r3
 8673 0018 04D1     		bne	.L346
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8674              		.loc 1 1586 0 is_stmt 0 discriminator 1
 8675 001a 0369     		ldr	r3, [r0, #16]
 8676 001c 002B     		cmp	r3, #0
 8677 001e 01D1     		bne	.L346
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 8678              		.loc 1 1588 0 is_stmt 1
 8679 0020 CB07     		lsls	r3, r1, #31
 8680 0022 22D4     		bmi	.L351
 8681              	.L346:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8682              		.loc 1 1594 0
 8683 0024 7423     		movs	r3, #116
 8684 0026 C35C     		ldrb	r3, [r0, r3]
 8685 0028 012B     		cmp	r3, #1
 8686 002a 20D0     		beq	.L352
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8687              		.loc 1 1594 0 is_stmt 0 discriminator 2
 8688 002c 0124     		movs	r4, #1
 8689 002e 7423     		movs	r3, #116
 8690 0030 C454     		strb	r4, [r0, r3]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8691              		.loc 1 1597 0 is_stmt 1 discriminator 2
 8692 0032 0023     		movs	r3, #0
 8693 0034 0366     		str	r3, [r0, #96]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 8694              		.loc 1 1600 0 discriminator 2
 8695 0036 0368     		ldr	r3, [r0]
 8696 0038 5B68     		ldr	r3, [r3, #4]
 8697 003a 1B02     		lsls	r3, r3, #8
 8698 003c 0CD5     		bpl	.L347
 8699              	.LBB1119:
 8700              	.LBB1120:
 8701              	.LBB1121:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8702              		.loc 2 386 0
 8703              		.syntax divided
 8704              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8705 003e EFF31085 		MRS r5, primask
 8706              	@ 0 "" 2
 8707              	.LVL580:
 8708              		.thumb
 8709              		.syntax unified
 8710              	.LBE1121:
 8711              	.LBE1120:
ARM GAS  /tmp/ccQJ5CSb.s 			page 248


 8712              	.LBB1122:
 8713              	.LBB1123:
 8714              		.loc 2 414 0
 8715 0042 0123     		movs	r3, #1
 8716              		.syntax divided
 8717              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8718 0044 83F31088 		MSR primask, r3
 8719              	@ 0 "" 2
 8720              	.LVL581:
 8721              		.thumb
 8722              		.syntax unified
 8723              	.LBE1123:
 8724              	.LBE1122:
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 8725              		.loc 1 1603 0
 8726 0048 0468     		ldr	r4, [r0]
 8727 004a 2368     		ldr	r3, [r4]
 8728 004c 8026     		movs	r6, #128
 8729 004e F604     		lsls	r6, r6, #19
 8730 0050 3343     		orrs	r3, r6
 8731 0052 2360     		str	r3, [r4]
 8732              	.LBB1124:
 8733              	.LBB1125:
 8734              		.loc 2 414 0
 8735              		.syntax divided
 8736              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8737 0054 85F31088 		MSR primask, r5
 8738              	@ 0 "" 2
 8739              		.thumb
 8740              		.syntax unified
 8741              	.L347:
 8742              	.LBE1125:
 8743              	.LBE1124:
 8744              	.LBE1119:
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 8745              		.loc 1 1606 0
 8746 0058 FFF7FEFF 		bl	UART_Start_Receive_DMA
 8747              	.LVL582:
 8748 005c 08E0     		b	.L345
 8749              	.LVL583:
 8750              	.L348:
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 8751              		.loc 1 1610 0
 8752 005e 0220     		movs	r0, #2
 8753              	.LVL584:
 8754 0060 06E0     		b	.L345
 8755              	.LVL585:
 8756              	.L349:
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 8757              		.loc 1 1580 0
 8758 0062 0120     		movs	r0, #1
 8759              	.LVL586:
 8760 0064 04E0     		b	.L345
 8761              	.LVL587:
 8762              	.L350:
 8763 0066 0120     		movs	r0, #1
 8764              	.LVL588:
ARM GAS  /tmp/ccQJ5CSb.s 			page 249


 8765 0068 02E0     		b	.L345
 8766              	.LVL589:
 8767              	.L351:
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 8768              		.loc 1 1590 0
 8769 006a 0120     		movs	r0, #1
 8770              	.LVL590:
 8771 006c 00E0     		b	.L345
 8772              	.LVL591:
 8773              	.L352:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8774              		.loc 1 1594 0
 8775 006e 0220     		movs	r0, #2
 8776              	.LVL592:
 8777              	.L345:
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 8778              		.loc 1 1612 0
 8779              		@ sp needed
 8780 0070 70BD     		pop	{r4, r5, r6, pc}
 8781              		.cfi_endproc
 8782              	.LFE51:
 8784 0072 C046     		.text
 8785              	.Letext0:
 8786              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 8787              		.file 4 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 8788              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 8789              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 8790              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 8791              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 8792              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 8793              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 8794              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccQJ5CSb.s 			page 250


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart.c
     /tmp/ccQJ5CSb.s:20     .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccQJ5CSb.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccQJ5CSb.s:92     .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccQJ5CSb.s:96     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccQJ5CSb.s:258    .text.UART_EndRxTransfer:00000058 $d
     /tmp/ccQJ5CSb.s:263    .text.UART_TxISR_8BIT:00000000 $t
     /tmp/ccQJ5CSb.s:267    .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
     /tmp/ccQJ5CSb.s:405    .text.UART_TxISR_16BIT:00000000 $t
     /tmp/ccQJ5CSb.s:409    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
     /tmp/ccQJ5CSb.s:550    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccQJ5CSb.s:555    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccQJ5CSb.s:570    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccQJ5CSb.s:575    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccQJ5CSb.s:590    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccQJ5CSb.s:595    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccQJ5CSb.s:663    .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccQJ5CSb.s:668    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccQJ5CSb.s:840    .text.HAL_UART_Transmit_IT:00000098 $d
     /tmp/ccQJ5CSb.s:846    .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccQJ5CSb.s:851    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccQJ5CSb.s:1043   .text.HAL_UART_Transmit_DMA:000000c8 $d
     /tmp/ccQJ5CSb.s:2541   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccQJ5CSb.s:2769   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccQJ5CSb.s:2858   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccQJ5CSb.s:1050   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccQJ5CSb.s:1055   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccQJ5CSb.s:1298   .text.HAL_UART_DMAPause:00000098 $d
     /tmp/ccQJ5CSb.s:1303   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccQJ5CSb.s:1308   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccQJ5CSb.s:1541   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccQJ5CSb.s:1546   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccQJ5CSb.s:1746   .text.HAL_UART_Abort:00000000 $t
     /tmp/ccQJ5CSb.s:1751   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccQJ5CSb.s:2090   .text.HAL_UART_Abort:00000108 $d
     /tmp/ccQJ5CSb.s:2095   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccQJ5CSb.s:2100   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/ccQJ5CSb.s:2252   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/ccQJ5CSb.s:2257   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccQJ5CSb.s:2512   .text.HAL_UART_AbortReceive:000000b8 $d
     /tmp/ccQJ5CSb.s:2517   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:2522   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccQJ5CSb.s:2537   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccQJ5CSb.s:2669   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccQJ5CSb.s:2673   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccQJ5CSb.s:2745   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:2750   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccQJ5CSb.s:2765   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccQJ5CSb.s:2794   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:2799   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccQJ5CSb.s:2814   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:2819   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccQJ5CSb.s:2834   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccQJ5CSb.s:2839   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccQJ5CSb.s:2854   .text.UART_DMAError:00000000 $t
     /tmp/ccQJ5CSb.s:2936   .text.UART_DMAAbortOnError:00000000 $t
ARM GAS  /tmp/ccQJ5CSb.s 			page 251


     /tmp/ccQJ5CSb.s:2940   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccQJ5CSb.s:2972   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:2977   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccQJ5CSb.s:2992   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccQJ5CSb.s:2997   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccQJ5CSb.s:3380   .text.HAL_UART_Abort_IT:00000134 $d
     /tmp/ccQJ5CSb.s:3461   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccQJ5CSb.s:3391   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccQJ5CSb.s:3387   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccQJ5CSb.s:3457   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccQJ5CSb.s:3521   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:3526   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccQJ5CSb.s:3541   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccQJ5CSb.s:3546   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccQJ5CSb.s:3710   .text.HAL_UART_AbortTransmit_IT:00000084 $d
     /tmp/ccQJ5CSb.s:3719   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccQJ5CSb.s:3715   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccQJ5CSb.s:3751   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccQJ5CSb.s:3756   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccQJ5CSb.s:3771   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccQJ5CSb.s:3776   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccQJ5CSb.s:4049   .text.HAL_UART_AbortReceive_IT:000000cc $d
     /tmp/ccQJ5CSb.s:4059   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/ccQJ5CSb.s:4055   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccQJ5CSb.s:4103   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/ccQJ5CSb.s:4108   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/ccQJ5CSb.s:4123   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccQJ5CSb.s:4128   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccQJ5CSb.s:4878   .text.HAL_UART_IRQHandler:0000029c $d
     /tmp/ccQJ5CSb.s:4887   .text.UART_RxISR_8BIT:00000000 $t
     /tmp/ccQJ5CSb.s:4891   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
     /tmp/ccQJ5CSb.s:5121   .text.UART_RxISR_8BIT:000000b0 $d
     /tmp/ccQJ5CSb.s:5126   .text.UART_RxISR_16BIT:00000000 $t
     /tmp/ccQJ5CSb.s:5130   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
     /tmp/ccQJ5CSb.s:5360   .text.UART_RxISR_16BIT:000000ac $d
     /tmp/ccQJ5CSb.s:5365   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccQJ5CSb.s:5369   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccQJ5CSb.s:5408   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccQJ5CSb.s:5412   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccQJ5CSb.s:5644   .text.UART_DMAReceiveCplt:00000090 $d
     /tmp/ccQJ5CSb.s:5649   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
     /tmp/ccQJ5CSb.s:5654   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccQJ5CSb.s:5676   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
     /tmp/ccQJ5CSb.s:5681   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccQJ5CSb.s:5745   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
     /tmp/ccQJ5CSb.s:5750   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccQJ5CSb.s:5812   .text.HAL_UART_DisableReceiverTimeout:00000038 $d
     /tmp/ccQJ5CSb.s:5817   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccQJ5CSb.s:5822   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccQJ5CSb.s:5843   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccQJ5CSb.s:5848   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccQJ5CSb.s:5984   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/ccQJ5CSb.s:5989   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccQJ5CSb.s:6125   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccQJ5CSb.s:6130   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccQJ5CSb.s:6156   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccQJ5CSb.s:6161   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
ARM GAS  /tmp/ccQJ5CSb.s 			page 252


     /tmp/ccQJ5CSb.s:6181   .text.UART_SetConfig:00000000 $t
     /tmp/ccQJ5CSb.s:6186   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccQJ5CSb.s:6481   .text.UART_SetConfig:00000150 $d
     /tmp/ccQJ5CSb.s:6491   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/ccQJ5CSb.s:6496   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/ccQJ5CSb.s:6628   .text.UART_AdvFeatureConfig:000000bc $d
     /tmp/ccQJ5CSb.s:6641   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccQJ5CSb.s:6646   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccQJ5CSb.s:6933   .text.UART_WaitOnFlagUntilTimeout:000000d4 $d
     /tmp/ccQJ5CSb.s:6938   .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccQJ5CSb.s:6943   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccQJ5CSb.s:7158   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccQJ5CSb.s:7163   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccQJ5CSb.s:7434   .text.HAL_UART_Receive:00000138 $d
     /tmp/ccQJ5CSb.s:7439   .text.UART_CheckIdleState:00000000 $t
     /tmp/ccQJ5CSb.s:7444   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/ccQJ5CSb.s:7538   .text.UART_CheckIdleState:0000006c $d
     /tmp/ccQJ5CSb.s:7543   .text.HAL_UART_Init:00000000 $t
     /tmp/ccQJ5CSb.s:7548   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccQJ5CSb.s:7635   .text.HAL_UART_Init:00000064 $d
     /tmp/ccQJ5CSb.s:7640   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccQJ5CSb.s:7645   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccQJ5CSb.s:7732   .text.HAL_HalfDuplex_Init:00000064 $d
     /tmp/ccQJ5CSb.s:7737   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccQJ5CSb.s:7742   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccQJ5CSb.s:7857   .text.HAL_MultiProcessor_Init:0000008c $d
     /tmp/ccQJ5CSb.s:7862   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/ccQJ5CSb.s:7867   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccQJ5CSb.s:7956   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/ccQJ5CSb.s:7961   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccQJ5CSb.s:8048   .text.HAL_MultiProcessor_DisableMuteMode:0000003c $d
     /tmp/ccQJ5CSb.s:8053   .text.UART_Start_Receive_IT:00000000 $t
     /tmp/ccQJ5CSb.s:8058   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
     /tmp/ccQJ5CSb.s:8254   .text.UART_Start_Receive_IT:000000b0 $d
     /tmp/ccQJ5CSb.s:8261   .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccQJ5CSb.s:8266   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccQJ5CSb.s:8407   .text.UART_Start_Receive_DMA:00000000 $t
     /tmp/ccQJ5CSb.s:8412   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
     /tmp/ccQJ5CSb.s:8632   .text.UART_Start_Receive_DMA:000000a8 $d
     /tmp/ccQJ5CSb.s:8639   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccQJ5CSb.s:8644   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
