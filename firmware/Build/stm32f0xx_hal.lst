ARM GAS  /tmp/ccw9S94P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.weak	HAL_MspInit
  22              		.code	16
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB42:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
ARM GAS  /tmp/ccw9S94P.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.6
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x06U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Exported Variables
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  /tmp/ccw9S94P.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           and the backup domain when enabled.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
ARM GAS  /tmp/ccw9S94P.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initialize common part of the HAL and stops the SysTick
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initialize the MSP.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  28              		.loc 1 189 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  33              		.loc 1 193 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/ccw9S94P.s 			page 5


  37              	.LFE42:
  39 0002 C046     		.section	.text.HAL_MspDeInit,"ax",%progbits
  40              		.align	2
  41              		.weak	HAL_MspDeInit
  42              		.code	16
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB43:
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  47              		.loc 1 200 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  52              		.loc 1 204 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE43:
  58 0002 C046     		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	2
  60              		.global	HAL_DeInit
  61              		.code	16
  62              		.thumb_func
  64              	HAL_DeInit:
  65              	.LFB41:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 166 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  75              		.loc 1 168 0
  76 0002 074B     		ldr	r3, .L4
  77 0004 0121     		movs	r1, #1
  78 0006 4942     		rsbs	r1, r1, #0
  79 0008 1961     		str	r1, [r3, #16]
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  80              		.loc 1 169 0
  81 000a 0022     		movs	r2, #0
  82 000c 1A61     		str	r2, [r3, #16]
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
ARM GAS  /tmp/ccw9S94P.s 			page 6


  83              		.loc 1 171 0
  84 000e D960     		str	r1, [r3, #12]
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  85              		.loc 1 172 0
  86 0010 DA60     		str	r2, [r3, #12]
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  87              		.loc 1 174 0
  88 0012 9962     		str	r1, [r3, #40]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  89              		.loc 1 175 0
  90 0014 9A62     		str	r2, [r3, #40]
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  91              		.loc 1 178 0
  92 0016 FFF7FEFF 		bl	HAL_MspDeInit
  93              	.LVL0:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  94              		.loc 1 182 0
  95 001a 0020     		movs	r0, #0
  96              		@ sp needed
  97 001c 10BD     		pop	{r4, pc}
  98              	.L5:
  99 001e C046     		.align	2
 100              	.L4:
 101 0020 00100240 		.word	1073876992
 102              		.cfi_endproc
 103              	.LFE41:
 105              		.global	__aeabi_uidiv
 106              		.section	.text.HAL_InitTick,"ax",%progbits
 107              		.align	2
 108              		.weak	HAL_InitTick
 109              		.code	16
 110              		.thumb_func
 112              	HAL_InitTick:
 113              	.LFB44:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower) 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 114              		.loc 1 223 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccw9S94P.s 			page 7


 118              	.LVL1:
 119 0000 10B5     		push	{r4, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124 0002 0400     		movs	r4, r0
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 125              		.loc 1 225 0
 126 0004 0E4B     		ldr	r3, .L10
 127 0006 1978     		ldrb	r1, [r3]
 128 0008 FA20     		movs	r0, #250
 129              	.LVL2:
 130 000a 8000     		lsls	r0, r0, #2
 131 000c FFF7FEFF 		bl	__aeabi_uidiv
 132              	.LVL3:
 133 0010 0100     		movs	r1, r0
 134 0012 0C4B     		ldr	r3, .L10+4
 135 0014 1868     		ldr	r0, [r3]
 136 0016 FFF7FEFF 		bl	__aeabi_uidiv
 137              	.LVL4:
 138 001a FFF7FEFF 		bl	HAL_SYSTICK_Config
 139              	.LVL5:
 140 001e 0028     		cmp	r0, #0
 141 0020 0AD1     		bne	.L8
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 142              		.loc 1 231 0
 143 0022 032C     		cmp	r4, #3
 144 0024 0AD8     		bhi	.L9
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 145              		.loc 1 233 0
 146 0026 0022     		movs	r2, #0
 147 0028 2100     		movs	r1, r4
 148 002a 0138     		subs	r0, r0, #1
 149 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 150              	.LVL6:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 151              		.loc 1 234 0
 152 0030 054B     		ldr	r3, .L10+8
 153 0032 1C60     		str	r4, [r3]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   else
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 154              		.loc 1 242 0
 155 0034 0020     		movs	r0, #0
ARM GAS  /tmp/ccw9S94P.s 			page 8


 156 0036 02E0     		b	.L7
 157              	.L8:
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 158              		.loc 1 227 0
 159 0038 0120     		movs	r0, #1
 160 003a 00E0     		b	.L7
 161              	.L9:
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 162              		.loc 1 238 0
 163 003c 0120     		movs	r0, #1
 164              	.L7:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 165              		.loc 1 243 0
 166              		@ sp needed
 167              	.LVL7:
 168 003e 10BD     		pop	{r4, pc}
 169              	.L11:
 170              		.align	2
 171              	.L10:
 172 0040 00000000 		.word	.LANCHOR0
 173 0044 00000000 		.word	SystemCoreClock
 174 0048 00000000 		.word	.LANCHOR1
 175              		.cfi_endproc
 176              	.LFE44:
 178              		.section	.text.HAL_Init,"ax",%progbits
 179              		.align	2
 180              		.global	HAL_Init
 181              		.code	16
 182              		.thumb_func
 184              	HAL_Init:
 185              	.LFB40:
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 186              		.loc 1 142 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 10B5     		push	{r4, lr}
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 195              		.loc 1 145 0
 196 0002 064A     		ldr	r2, .L13
 197 0004 1168     		ldr	r1, [r2]
 198 0006 1023     		movs	r3, #16
 199 0008 0B43     		orrs	r3, r1
 200 000a 1360     		str	r3, [r2]
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 201              		.loc 1 150 0
 202 000c 0320     		movs	r0, #3
 203 000e FFF7FEFF 		bl	HAL_InitTick
 204              	.LVL8:
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 205              		.loc 1 153 0
 206 0012 FFF7FEFF 		bl	HAL_MspInit
 207              	.LVL9:
ARM GAS  /tmp/ccw9S94P.s 			page 9


 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 208              		.loc 1 157 0
 209 0016 0020     		movs	r0, #0
 210              		@ sp needed
 211 0018 10BD     		pop	{r4, pc}
 212              	.L14:
 213 001a C046     		.align	2
 214              	.L13:
 215 001c 00200240 		.word	1073881088
 216              		.cfi_endproc
 217              	.LFE40:
 219              		.section	.text.HAL_IncTick,"ax",%progbits
 220              		.align	2
 221              		.weak	HAL_IncTick
 222              		.code	16
 223              		.thumb_func
 225              	HAL_IncTick:
 226              	.LFB45:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in SysTick ISR.
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccw9S94P.s 			page 10


 227              		.loc 1 282 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 232              		.loc 1 283 0
 233 0000 034A     		ldr	r2, .L16
 234 0002 1368     		ldr	r3, [r2]
 235 0004 0349     		ldr	r1, .L16+4
 236 0006 0978     		ldrb	r1, [r1]
 237 0008 CB18     		adds	r3, r1, r3
 238 000a 1360     		str	r3, [r2]
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 239              		.loc 1 284 0
 240              		@ sp needed
 241 000c 7047     		bx	lr
 242              	.L17:
 243 000e C046     		.align	2
 244              	.L16:
 245 0010 00000000 		.word	uwTick
 246 0014 00000000 		.word	.LANCHOR0
 247              		.cfi_endproc
 248              	.LFE45:
 250              		.section	.text.HAL_GetTick,"ax",%progbits
 251              		.align	2
 252              		.weak	HAL_GetTick
 253              		.code	16
 254              		.thumb_func
 256              	HAL_GetTick:
 257              	.LFB46:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 258              		.loc 1 293 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 263              		.loc 1 294 0
 264 0000 014B     		ldr	r3, .L19
 265 0002 1868     		ldr	r0, [r3]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 266              		.loc 1 295 0
 267              		@ sp needed
 268 0004 7047     		bx	lr
 269              	.L20:
 270 0006 C046     		.align	2
 271              	.L19:
 272 0008 00000000 		.word	uwTick
ARM GAS  /tmp/ccw9S94P.s 			page 11


 273              		.cfi_endproc
 274              	.LFE46:
 276              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 277              		.align	2
 278              		.global	HAL_GetTickPrio
 279              		.code	16
 280              		.thumb_func
 282              	HAL_GetTickPrio:
 283              	.LFB47:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function returns a tick priority.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick priority
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 284              		.loc 1 302 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 289              		.loc 1 303 0
 290 0000 014B     		ldr	r3, .L22
 291 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 292              		.loc 1 304 0
 293              		@ sp needed
 294 0004 7047     		bx	lr
 295              	.L23:
 296 0006 C046     		.align	2
 297              	.L22:
 298 0008 00000000 		.word	.LANCHOR1
 299              		.cfi_endproc
 300              	.LFE47:
 302              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 303              		.align	2
 304              		.global	HAL_SetTickFreq
 305              		.code	16
 306              		.thumb_func
 308              	HAL_SetTickFreq:
 309              	.LFB48:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Set new tick Freq.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval status
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 310              		.loc 1 311 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              	.LVL10:
 315 0000 10B5     		push	{r4, lr}
 316              	.LCFI3:
 317              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccw9S94P.s 			page 12


 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 320              	.LVL11:
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (uwTickFreq != Freq)
 321              		.loc 1 317 0
 322 0002 084B     		ldr	r3, .L27
 323 0004 1C78     		ldrb	r4, [r3]
 324 0006 8442     		cmp	r4, r0
 325 0008 09D0     		beq	.L26
 326              	.LVL12:
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Back up uwTickFreq frequency */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     prevTickFreq = uwTickFreq;
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickFreq = Freq;
 327              		.loc 1 323 0
 328 000a 1870     		strb	r0, [r3]
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Apply the new tick Freq */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 329              		.loc 1 326 0
 330 000c 064B     		ldr	r3, .L27+4
 331 000e 1868     		ldr	r0, [r3]
 332              	.LVL13:
 333 0010 FFF7FEFF 		bl	HAL_InitTick
 334              	.LVL14:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     if (status != HAL_OK)
 335              		.loc 1 328 0
 336 0014 0028     		cmp	r0, #0
 337 0016 03D0     		beq	.L25
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       /* Restore previous tick frequency */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       uwTickFreq = prevTickFreq;
 338              		.loc 1 331 0
 339 0018 024B     		ldr	r3, .L27
 340 001a 1C70     		strb	r4, [r3]
 341 001c 00E0     		b	.L25
 342              	.LVL15:
 343              	.L26:
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 344              		.loc 1 312 0
 345 001e 0020     		movs	r0, #0
 346              	.LVL16:
 347              	.L25:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return status;
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 348              		.loc 1 336 0
ARM GAS  /tmp/ccw9S94P.s 			page 13


 349              		@ sp needed
 350 0020 10BD     		pop	{r4, pc}
 351              	.L28:
 352 0022 C046     		.align	2
 353              	.L27:
 354 0024 00000000 		.word	.LANCHOR0
 355 0028 00000000 		.word	.LANCHOR1
 356              		.cfi_endproc
 357              	.LFE48:
 359              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 360              		.align	2
 361              		.global	HAL_GetTickFreq
 362              		.code	16
 363              		.thumb_func
 365              	HAL_GetTickFreq:
 366              	.LFB49:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief return tick frequency.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick period in Hz
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 367              		.loc 1 343 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 372              		.loc 1 344 0
 373 0000 014B     		ldr	r3, .L30
 374 0002 1878     		ldrb	r0, [r3]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 375              		.loc 1 345 0
 376              		@ sp needed
 377 0004 7047     		bx	lr
 378              	.L31:
 379 0006 C046     		.align	2
 380              	.L30:
 381 0008 00000000 		.word	.LANCHOR0
 382              		.cfi_endproc
 383              	.LFE49:
 385              		.section	.text.HAL_Delay,"ax",%progbits
 386              		.align	2
 387              		.weak	HAL_Delay
 388              		.code	16
 389              		.thumb_func
 391              	HAL_Delay:
 392              	.LFB50:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
ARM GAS  /tmp/ccw9S94P.s 			page 14


 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 393              		.loc 1 359 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL17:
 398 0000 70B5     		push	{r4, r5, r6, lr}
 399              	.LCFI4:
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 4, -16
 402              		.cfi_offset 5, -12
 403              		.cfi_offset 6, -8
 404              		.cfi_offset 14, -4
 405 0002 0400     		movs	r4, r0
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 406              		.loc 1 360 0
 407 0004 FFF7FEFF 		bl	HAL_GetTick
 408              	.LVL18:
 409 0008 0500     		movs	r5, r0
 410              	.LVL19:
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 411              		.loc 1 364 0
 412 000a 631C     		adds	r3, r4, #1
 413 000c 02D0     		beq	.L34
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 414              		.loc 1 366 0
 415 000e 044B     		ldr	r3, .L35
 416 0010 1B78     		ldrb	r3, [r3]
 417 0012 E418     		adds	r4, r4, r3
 418              	.LVL20:
 419              	.L34:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 420              		.loc 1 369 0 discriminator 1
 421 0014 FFF7FEFF 		bl	HAL_GetTick
 422              	.LVL21:
 423 0018 401B     		subs	r0, r0, r5
 424 001a 8442     		cmp	r4, r0
 425 001c FAD8     		bhi	.L34
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 426              		.loc 1 372 0
 427              		@ sp needed
 428              	.LVL22:
 429              	.LVL23:
 430 001e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccw9S94P.s 			page 15


 431              	.L36:
 432              		.align	2
 433              	.L35:
 434 0020 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE50:
 438              		.section	.text.HAL_SuspendTick,"ax",%progbits
 439              		.align	2
 440              		.weak	HAL_SuspendTick
 441              		.code	16
 442              		.thumb_func
 444              	HAL_SuspendTick:
 445              	.LFB51:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 446              		.loc 1 386 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 451              		.loc 1 388 0
 452 0000 024A     		ldr	r2, .L38
 453 0002 1368     		ldr	r3, [r2]
 454 0004 0221     		movs	r1, #2
 455 0006 8B43     		bics	r3, r1
 456 0008 1360     		str	r3, [r2]
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 457              		.loc 1 389 0
 458              		@ sp needed
 459 000a 7047     		bx	lr
 460              	.L39:
 461              		.align	2
 462              	.L38:
 463 000c 10E000E0 		.word	-536813552
 464              		.cfi_endproc
 465              	.LFE51:
 467              		.section	.text.HAL_ResumeTick,"ax",%progbits
 468              		.align	2
 469              		.weak	HAL_ResumeTick
 470              		.code	16
 471              		.thumb_func
 473              	HAL_ResumeTick:
 474              	.LFB52:
ARM GAS  /tmp/ccw9S94P.s 			page 16


 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 475              		.loc 1 402 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 480              		.loc 1 404 0
 481 0000 024A     		ldr	r2, .L41
 482 0002 1168     		ldr	r1, [r2]
 483 0004 0223     		movs	r3, #2
 484 0006 0B43     		orrs	r3, r1
 485 0008 1360     		str	r3, [r2]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 486              		.loc 1 405 0
 487              		@ sp needed
 488 000a 7047     		bx	lr
 489              	.L42:
 490              		.align	2
 491              	.L41:
 492 000c 10E000E0 		.word	-536813552
 493              		.cfi_endproc
 494              	.LFE52:
 496              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 497              		.align	2
 498              		.global	HAL_GetHalVersion
 499              		.code	16
 500              		.thumb_func
 502              	HAL_GetHalVersion:
 503              	.LFB53:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 504              		.loc 1 412 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
ARM GAS  /tmp/ccw9S94P.s 			page 17


 509              		.loc 1 414 0
 510 0000 0048     		ldr	r0, .L44
 511              		@ sp needed
 512 0002 7047     		bx	lr
 513              	.L45:
 514              		.align	2
 515              	.L44:
 516 0004 00060701 		.word	17237504
 517              		.cfi_endproc
 518              	.LFE53:
 520              		.section	.text.HAL_GetREVID,"ax",%progbits
 521              		.align	2
 522              		.global	HAL_GetREVID
 523              		.code	16
 524              		.thumb_func
 526              	HAL_GetREVID:
 527              	.LFB54:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 528              		.loc 1 421 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 533              		.loc 1 422 0
 534 0000 014B     		ldr	r3, .L47
 535 0002 1868     		ldr	r0, [r3]
 536 0004 000C     		lsrs	r0, r0, #16
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 537              		.loc 1 423 0
 538              		@ sp needed
 539 0006 7047     		bx	lr
 540              	.L48:
 541              		.align	2
 542              	.L47:
 543 0008 00580140 		.word	1073829888
 544              		.cfi_endproc
 545              	.LFE54:
 547              		.section	.text.HAL_GetDEVID,"ax",%progbits
 548              		.align	2
 549              		.global	HAL_GetDEVID
 550              		.code	16
 551              		.thumb_func
 553              	HAL_GetDEVID:
 554              	.LFB55:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
ARM GAS  /tmp/ccw9S94P.s 			page 18


 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 555              		.loc 1 430 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 560              		.loc 1 431 0
 561 0000 024B     		ldr	r3, .L50
 562 0002 1868     		ldr	r0, [r3]
 563 0004 0005     		lsls	r0, r0, #20
 564 0006 000D     		lsrs	r0, r0, #20
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 565              		.loc 1 432 0
 566              		@ sp needed
 567 0008 7047     		bx	lr
 568              	.L51:
 569 000a C046     		.align	2
 570              	.L50:
 571 000c 00580140 		.word	1073829888
 572              		.cfi_endproc
 573              	.LFE55:
 575              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 576              		.align	2
 577              		.global	HAL_GetUIDw0
 578              		.code	16
 579              		.thumb_func
 581              	HAL_GetUIDw0:
 582              	.LFB56:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 583              		.loc 1 439 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 588              		.loc 1 440 0
 589 0000 014B     		ldr	r3, .L53
 590 0002 1868     		ldr	r0, [r3]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 591              		.loc 1 441 0
 592              		@ sp needed
 593 0004 7047     		bx	lr
 594              	.L54:
 595 0006 C046     		.align	2
 596              	.L53:
 597 0008 ACF7FF1F 		.word	536868780
 598              		.cfi_endproc
 599              	.LFE56:
 601              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 602              		.align	2
ARM GAS  /tmp/ccw9S94P.s 			page 19


 603              		.global	HAL_GetUIDw1
 604              		.code	16
 605              		.thumb_func
 607              	HAL_GetUIDw1:
 608              	.LFB57:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 609              		.loc 1 448 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 614              		.loc 1 449 0
 615 0000 014B     		ldr	r3, .L56
 616 0002 1868     		ldr	r0, [r3]
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 617              		.loc 1 450 0
 618              		@ sp needed
 619 0004 7047     		bx	lr
 620              	.L57:
 621 0006 C046     		.align	2
 622              	.L56:
 623 0008 B0F7FF1F 		.word	536868784
 624              		.cfi_endproc
 625              	.LFE57:
 627              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 628              		.align	2
 629              		.global	HAL_GetUIDw2
 630              		.code	16
 631              		.thumb_func
 633              	HAL_GetUIDw2:
 634              	.LFB58:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 635              		.loc 1 457 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 640              		.loc 1 458 0
 641 0000 014B     		ldr	r3, .L59
 642 0002 1868     		ldr	r0, [r3]
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 643              		.loc 1 459 0
 644              		@ sp needed
ARM GAS  /tmp/ccw9S94P.s 			page 20


 645 0004 7047     		bx	lr
 646              	.L60:
 647 0006 C046     		.align	2
 648              	.L59:
 649 0008 B4F7FF1F 		.word	536868788
 650              		.cfi_endproc
 651              	.LFE58:
 653              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 654              		.align	2
 655              		.global	HAL_DBGMCU_EnableDBGStopMode
 656              		.code	16
 657              		.thumb_func
 659              	HAL_DBGMCU_EnableDBGStopMode:
 660              	.LFB59:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 661              		.loc 1 466 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 666              		.loc 1 467 0
 667 0000 024A     		ldr	r2, .L62
 668 0002 5168     		ldr	r1, [r2, #4]
 669 0004 0223     		movs	r3, #2
 670 0006 0B43     		orrs	r3, r1
 671 0008 5360     		str	r3, [r2, #4]
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 672              		.loc 1 468 0
 673              		@ sp needed
 674 000a 7047     		bx	lr
 675              	.L63:
 676              		.align	2
 677              	.L62:
 678 000c 00580140 		.word	1073829888
 679              		.cfi_endproc
 680              	.LFE59:
 682              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 683              		.align	2
 684              		.global	HAL_DBGMCU_DisableDBGStopMode
 685              		.code	16
 686              		.thumb_func
 688              	HAL_DBGMCU_DisableDBGStopMode:
 689              	.LFB60:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccw9S94P.s 			page 21


 690              		.loc 1 475 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 695              		.loc 1 476 0
 696 0000 024A     		ldr	r2, .L65
 697 0002 5368     		ldr	r3, [r2, #4]
 698 0004 0221     		movs	r1, #2
 699 0006 8B43     		bics	r3, r1
 700 0008 5360     		str	r3, [r2, #4]
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 701              		.loc 1 477 0
 702              		@ sp needed
 703 000a 7047     		bx	lr
 704              	.L66:
 705              		.align	2
 706              	.L65:
 707 000c 00580140 		.word	1073829888
 708              		.cfi_endproc
 709              	.LFE60:
 711              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 712              		.align	2
 713              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 714              		.code	16
 715              		.thumb_func
 717              	HAL_DBGMCU_EnableDBGStandbyMode:
 718              	.LFB61:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 719              		.loc 1 484 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 724              		.loc 1 485 0
 725 0000 024A     		ldr	r2, .L68
 726 0002 5168     		ldr	r1, [r2, #4]
 727 0004 0423     		movs	r3, #4
 728 0006 0B43     		orrs	r3, r1
 729 0008 5360     		str	r3, [r2, #4]
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 730              		.loc 1 486 0
 731              		@ sp needed
 732 000a 7047     		bx	lr
 733              	.L69:
 734              		.align	2
 735              	.L68:
 736 000c 00580140 		.word	1073829888
 737              		.cfi_endproc
ARM GAS  /tmp/ccw9S94P.s 			page 22


 738              	.LFE61:
 740              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 741              		.align	2
 742              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 743              		.code	16
 744              		.thumb_func
 746              	HAL_DBGMCU_DisableDBGStandbyMode:
 747              	.LFB62:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 748              		.loc 1 493 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 753              		.loc 1 494 0
 754 0000 024A     		ldr	r2, .L71
 755 0002 5368     		ldr	r3, [r2, #4]
 756 0004 0421     		movs	r1, #4
 757 0006 8B43     		bics	r3, r1
 758 0008 5360     		str	r3, [r2, #4]
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 759              		.loc 1 495 0
 760              		@ sp needed
 761 000a 7047     		bx	lr
 762              	.L72:
 763              		.align	2
 764              	.L71:
 765 000c 00580140 		.word	1073829888
 766              		.cfi_endproc
 767              	.LFE62:
 769              		.global	uwTickFreq
 770              		.global	uwTickPrio
 771              		.comm	uwTick,4,4
 772              		.section	.data.uwTickPrio,"aw",%progbits
 773              		.align	2
 774              		.set	.LANCHOR1,. + 0
 777              	uwTickPrio:
 778 0000 04000000 		.word	4
 779              		.section	.data.uwTickFreq,"aw",%progbits
 780              		.set	.LANCHOR0,. + 0
 783              	uwTickFreq:
 784 0000 01       		.byte	1
 785              		.text
 786              	.Letext0:
 787              		.file 2 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 788              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 789              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 790              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 791              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 792              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccw9S94P.s 			page 23


 793              		.file 8 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 794              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccw9S94P.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal.c
     /tmp/ccw9S94P.s:20     .text.HAL_MspInit:00000000 $t
     /tmp/ccw9S94P.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccw9S94P.s:40     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccw9S94P.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccw9S94P.s:59     .text.HAL_DeInit:00000000 $t
     /tmp/ccw9S94P.s:64     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccw9S94P.s:101    .text.HAL_DeInit:00000020 $d
     /tmp/ccw9S94P.s:107    .text.HAL_InitTick:00000000 $t
     /tmp/ccw9S94P.s:112    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccw9S94P.s:172    .text.HAL_InitTick:00000040 $d
     /tmp/ccw9S94P.s:179    .text.HAL_Init:00000000 $t
     /tmp/ccw9S94P.s:184    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccw9S94P.s:215    .text.HAL_Init:0000001c $d
     /tmp/ccw9S94P.s:220    .text.HAL_IncTick:00000000 $t
     /tmp/ccw9S94P.s:225    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccw9S94P.s:245    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
     /tmp/ccw9S94P.s:251    .text.HAL_GetTick:00000000 $t
     /tmp/ccw9S94P.s:256    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccw9S94P.s:272    .text.HAL_GetTick:00000008 $d
     /tmp/ccw9S94P.s:277    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccw9S94P.s:282    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccw9S94P.s:298    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccw9S94P.s:303    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccw9S94P.s:308    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccw9S94P.s:354    .text.HAL_SetTickFreq:00000024 $d
     /tmp/ccw9S94P.s:360    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccw9S94P.s:365    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccw9S94P.s:381    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccw9S94P.s:386    .text.HAL_Delay:00000000 $t
     /tmp/ccw9S94P.s:391    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccw9S94P.s:434    .text.HAL_Delay:00000020 $d
     /tmp/ccw9S94P.s:439    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccw9S94P.s:444    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccw9S94P.s:463    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccw9S94P.s:468    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccw9S94P.s:473    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccw9S94P.s:492    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccw9S94P.s:497    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccw9S94P.s:502    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccw9S94P.s:516    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccw9S94P.s:521    .text.HAL_GetREVID:00000000 $t
     /tmp/ccw9S94P.s:526    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccw9S94P.s:543    .text.HAL_GetREVID:00000008 $d
     /tmp/ccw9S94P.s:548    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccw9S94P.s:553    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccw9S94P.s:571    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccw9S94P.s:576    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccw9S94P.s:581    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccw9S94P.s:597    .text.HAL_GetUIDw0:00000008 $d
     /tmp/ccw9S94P.s:602    .text.HAL_GetUIDw1:00000000 $t
     /tmp/ccw9S94P.s:607    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccw9S94P.s:623    .text.HAL_GetUIDw1:00000008 $d
     /tmp/ccw9S94P.s:628    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccw9S94P.s:633    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
ARM GAS  /tmp/ccw9S94P.s 			page 25


     /tmp/ccw9S94P.s:649    .text.HAL_GetUIDw2:00000008 $d
     /tmp/ccw9S94P.s:654    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccw9S94P.s:659    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccw9S94P.s:678    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccw9S94P.s:683    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccw9S94P.s:688    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccw9S94P.s:707    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccw9S94P.s:712    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccw9S94P.s:717    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccw9S94P.s:736    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccw9S94P.s:741    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccw9S94P.s:746    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccw9S94P.s:765    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccw9S94P.s:783    .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccw9S94P.s:777    .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccw9S94P.s:773    .data.uwTickPrio:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
